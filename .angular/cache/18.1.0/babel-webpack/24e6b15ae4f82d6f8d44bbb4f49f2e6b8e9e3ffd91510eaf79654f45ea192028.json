{"ast":null,"code":"/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Avif from './image-header-avif.js';\nimport Webp from './image-header-webp.js';\nimport Gif from './image-header-gif.js';\nimport Xml from './xml.js';\nimport { objectAssign } from './utils.js';\nexport default {\n  parseAppMarkers\n};\nfunction parseAppMarkers(dataView, async) {\n  if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n    return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n  }\n  if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n    return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n  }\n  if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n    return addFileType(Png.findPngOffsets(dataView, async), 'png', 'PNG');\n  }\n  if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n    return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n  }\n  if (Constants.USE_AVIF && Avif.isAvifFile(dataView)) {\n    return addFileType(Avif.findAvifOffsets(dataView), 'avif', 'AVIF');\n  }\n  if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n    return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n  }\n  if (Constants.USE_GIF && Gif.isGifFile(dataView)) {\n    return addFileType(Gif.findOffsets(dataView), 'gif', 'GIF');\n  }\n  if (Constants.USE_XMP && Xml.isXMLFile(dataView)) {\n    return addFileType(Xml.findOffsets(dataView), 'xml', 'XML');\n  }\n  throw new Error('Invalid image format');\n}\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n  return objectAssign({}, offsets, {\n    fileType: {\n      value: fileType,\n      description: fileTypeDescription\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}