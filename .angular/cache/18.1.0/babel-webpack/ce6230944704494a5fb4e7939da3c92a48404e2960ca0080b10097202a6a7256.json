{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//Service connect to Api\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    /************************Getter_and_Setter_Funtions***************************/\n    constructor(http) {\n      this.http = http;\n      /*******************************Variables***********************************/\n      this.apiUrl = environment.api_url; // API URL\n    }\n    /******************************Others_Functions*******************************/\n    // Methot to call Api with files and framerate\n    processVideo(files, frameRates) {\n      const formData = new FormData();\n      for (let i = 0; i < files.length; i++) {\n        formData.append('files', files[i]);\n      }\n      formData.append('frameRates', JSON.stringify(frameRates));\n      return this.http.post(this.apiUrl + 'api/process-video', formData, {\n        responseType: 'blob'\n      });\n    }\n    // Methot to call Api with file and json (metadata)\n    embedInfoInImage(imageFile, jsonData) {\n      // Create FormData to send image and Json to backend\n      const formData = new FormData();\n      formData.append('imagen', imageFile);\n      formData.append('jsonMetadata', jsonData);\n      return this.http.post(environment.api_url + 'api/add-metadata', formData, {\n        responseType: 'blob'\n      });\n    }\n    static #_ = this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}