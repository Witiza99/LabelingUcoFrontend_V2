{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/selectedtool.service\";\n//Class toolbar\nexport let ToolbarComponent = /*#__PURE__*/(() => {\n  class ToolbarComponent {\n    /*******************************Constructor***********************************/\n    constructor(toolSevice) {\n      this.toolSevice = toolSevice;\n      /*******************************Variables***********************************/\n      this.selectedShape = ''; // No tool selected\n    }\n    /******************************Others_Functions*******************************/\n    selectShape(shape) {\n      this.selectedShape = shape; // Update selected button\n      this.toolSevice.setSelectedTool(this.selectedShape);\n    }\n    // Methot for check what tool is selected\n    isShapeSelected(shape) {\n      return this.selectedShape === shape;\n    }\n    static #_ = this.ɵfac = function ToolbarComponent_Factory(t) {\n      return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.ToolService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ToolbarComponent,\n      selectors: [[\"app-toolbar\"]],\n      decls: 5,\n      vars: 4,\n      consts: [[1, \"flex\", \"flex-col\", \"p-4\", \"bg-gray-100\", \"border-r\", \"border-gray-300\", \"h-full\"], [1, \"mb-2\", 3, \"click\"], [1, \"\", 3, \"click\"]],\n      template: function ToolbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_1_listener() {\n            return ctx.selectShape(\"rectangle\");\n          });\n          i0.ɵɵtext(2, \" Rectangle \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_3_listener() {\n            return ctx.selectShape(\"polygon\");\n          });\n          i0.ɵɵtext(4, \" Polygon \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵclassMap(ctx.isShapeSelected(\"rectangle\") ? \"bg-blue-500 text-white px-4 py-2 rounded\" : \"bg-gray-300 text-gray-700 px-4 py-2 rounded\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassMap(ctx.isShapeSelected(\"polygon\") ? \"bg-blue-500 text-white px-4 py-2 rounded\" : \"bg-gray-300 text-gray-700 px-4 py-2 rounded\");\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ToolbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}