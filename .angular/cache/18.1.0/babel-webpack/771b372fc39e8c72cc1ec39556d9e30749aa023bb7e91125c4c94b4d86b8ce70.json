{"ast":null,"code":"class DataView {\n  constructor(buffer) {\n    if (bufferTypeIsUnsupported(buffer)) {\n      throw new Error('DataView: Passed buffer type is unsupported.');\n    }\n    this.buffer = buffer;\n    this.byteLength = this.buffer.length;\n  }\n  getUint8(offset) {\n    return this.buffer.readUInt8(offset);\n  }\n  getUint16(offset, littleEndian) {\n    if (littleEndian) {\n      return this.buffer.readUInt16LE(offset);\n    }\n    return this.buffer.readUInt16BE(offset);\n  }\n  getUint32(offset, littleEndian) {\n    if (littleEndian) {\n      return this.buffer.readUInt32LE(offset);\n    }\n    return this.buffer.readUInt32BE(offset);\n  }\n  getInt32(offset, littleEndian) {\n    if (littleEndian) {\n      return this.buffer.readInt32LE(offset);\n    }\n    return this.buffer.readInt32BE(offset);\n  }\n}\nexport { DataView as default };\nfunction bufferTypeIsUnsupported(buffer) {\n  return typeof buffer !== 'object' || buffer.length === undefined || buffer.readUInt8 === undefined || buffer.readUInt16LE === undefined || buffer.readUInt16BE === undefined || buffer.readUInt32LE === undefined || buffer.readUInt32BE === undefined || buffer.readInt32LE === undefined || buffer.readInt32BE === undefined;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}