{"ast":null,"code":"/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringFromDataView } from './utils.js';\nimport Constants from './constants.js';\nexport default {\n  isWebpFile,\n  findOffsets\n};\nfunction isWebpFile(dataView) {\n  const RIFF_ID_OFFSET = 0;\n  const RIFF_ID = 'RIFF';\n  const WEBP_MARKER_OFFSET = 8;\n  const WEBP_MARKER = 'WEBP';\n  return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\nfunction findOffsets(dataView) {\n  const SUB_CHUNK_START_OFFSET = 12;\n  const CHUNK_SIZE_OFFSET = 4;\n  const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n  const CHUNK_HEADER_SIZE = 8;\n  let offset = SUB_CHUNK_START_OFFSET;\n  let hasAppMarkers = false;\n  let tiffHeaderOffset;\n  let xmpChunks;\n  let iccChunks;\n  let vp8xChunkOffset;\n  while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n    const chunkId = getStringFromDataView(dataView, offset, 4);\n    const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n    if (Constants.USE_EXIF && chunkId === 'EXIF') {\n      hasAppMarkers = true;\n      if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n        tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n      } else {\n        tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n      }\n    } else if (Constants.USE_XMP && chunkId === 'XMP ') {\n      hasAppMarkers = true;\n      xmpChunks = [{\n        dataOffset: offset + CHUNK_HEADER_SIZE,\n        length: chunkSize\n      }];\n    } else if (Constants.USE_ICC && chunkId === 'ICCP') {\n      hasAppMarkers = true;\n      iccChunks = [{\n        offset: offset + CHUNK_HEADER_SIZE,\n        length: chunkSize,\n        chunkNumber: 1,\n        chunksTotal: 1\n      }];\n    } else if (chunkId === 'VP8X') {\n      hasAppMarkers = true;\n      vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n    }\n    offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n  }\n  return {\n    hasAppMarkers,\n    tiffHeaderOffset,\n    xmpChunks,\n    iccChunks,\n    vp8xChunkOffset\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}