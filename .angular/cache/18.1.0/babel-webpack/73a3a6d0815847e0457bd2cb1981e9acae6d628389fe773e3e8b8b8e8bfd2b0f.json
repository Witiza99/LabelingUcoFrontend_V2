{"ast":null,"code":"import _asyncToGenerator from \"/home/antoniogg/Escritorio/APPLabelingUCO/pruebamia/FrontendLabelingUCO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*******************************Imports***********************************/\nimport { EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/images.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"border-blue-500 border-2\": a0\n});\nfunction ImageSliderComponent_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"img\", 10);\n    i0.ɵɵlistener(\"click\", function ImageSliderComponent_ng_container_1_div_2_Template_img_click_1_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.selectImage(i_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ImageSliderComponent_ng_container_1_div_2_Template_button_click_2_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.deleteImage(i_r2));\n    });\n    i0.ɵɵtext(3, \" X \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r2.imageSize + \"px\")(\"height\", ctx_r2.imageSize + \"px\");\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r2.imageSize + \"px\")(\"height\", ctx_r2.imageSize + \"px\");\n    i0.ɵɵpropertyInterpolate1(\"alt\", \"Image \", i_r2, \"\");\n    i0.ɵɵproperty(\"src\", ctx_r2.paginatedImageUrls[i_r2], i0.ɵɵsanitizeUrl)(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r2.isSelected(i_r2)));\n  }\n}\nfunction ImageSliderComponent_ng_container_1_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ImageSliderComponent_ng_container_1_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.previousPage());\n    });\n    i0.ɵɵtext(1, \" Previous \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.currentPage === 1);\n  }\n}\nfunction ImageSliderComponent_ng_container_1_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ImageSliderComponent_ng_container_1_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.nextPage());\n    });\n    i0.ɵɵtext(1, \" Next \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.currentPage === ctx_r2.totalPages);\n  }\n}\nfunction ImageSliderComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtemplate(2, ImageSliderComponent_ng_container_1_div_2_Template, 4, 14, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 6);\n    i0.ɵɵtemplate(5, ImageSliderComponent_ng_container_1_button_5_Template, 2, 1, \"button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵtemplate(9, ImageSliderComponent_ng_container_1_button_9_Template, 2, 1, \"button\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.paginatedImages);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentPage > 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Page \", ctx_r2.currentPage, \" of \", ctx_r2.totalPages, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentPage < ctx_r2.totalPages);\n  }\n}\nfunction ImageSliderComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"There aren't images.\");\n    i0.ɵɵelementEnd();\n  }\n}\n//Class Image Slider Component\nexport let ImageSliderComponent = /*#__PURE__*/(() => {\n  class ImageSliderComponent {\n    onResize(event) {\n      this.updatePagination();\n    }\n    /*******************************Constructor***********************************/\n    constructor(imageService, el) {\n      this.imageService = imageService;\n      this.el = el;\n      /*******************************Decorators***********************************/\n      this.imageSelect = new EventEmitter();\n      this.SaveCurrentImageEvent = new EventEmitter();\n      this.SaveAllImagesEvent = new EventEmitter();\n      /*******************************Variables***********************************/\n      this.imagesWithMetadata = [];\n      this.selectedImageIndex = null;\n      this.imageUrls = [];\n      //paginate\n      this.currentPage = 1;\n      this.pageSize = 10;\n      this.imageSize = 100;\n      this.paginatedImages = [];\n      this.paginatedImageUrls = [];\n      this.imagesSubscription = new Subscription();\n      this.saveCurrentImageSubscription = new Subscription();\n      this.saveAllImagesSubscription = new Subscription();\n    }\n    /******************************Angular_Functions*******************************/\n    ngOnInit() {\n      this.imagesSubscription = this.imageService.getImagesObservable().subscribe({\n        next: updatedImages => {\n          this.imagesWithMetadata = updatedImages;\n          this.updateImageUrls();\n          this.updatePagination();\n        }\n      });\n      this.saveCurrentImageSubscription = this.SaveCurrentImageEvent.subscribe(() => {\n        this.handleSaveCurrentImage();\n      });\n      this.saveAllImagesSubscription = this.SaveAllImagesEvent.subscribe(() => {\n        this.handleSaveAllImages();\n      });\n      this.updatePagination();\n    }\n    ngOnDestroy() {\n      if (this.imagesSubscription) {\n        this.imagesSubscription.unsubscribe();\n      }\n      if (this.saveCurrentImageSubscription) {\n        this.saveCurrentImageSubscription.unsubscribe();\n      }\n      if (this.saveAllImagesSubscription) {\n        this.saveAllImagesSubscription.unsubscribe();\n      }\n    }\n    /******************************Handle_Functions*******************************/\n    handleSaveCurrentImage() {\n      this.updateImageUrls();\n      this.imageService.saveImageWithMetadata();\n    }\n    handleSaveAllImages() {\n      this.updateImageUrls();\n      this.imageService.saveAllImagesWithMetadata();\n    }\n    /************************Getter_and_Setter_Funtions***************************/\n    get totalPages() {\n      return Math.ceil(this.imagesWithMetadata.length / this.pageSize);\n    }\n    /******************************Others_Functions*******************************/\n    updateImageUrls() {\n      this.imageUrls = this.imagesWithMetadata.map(image => URL.createObjectURL(image.file));\n    }\n    //paginate\n    updatePagination() {\n      this.paginateImages();\n    }\n    // Select image from image slider\n    selectImage(index) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const actualIndex = (_this.currentPage - 1) * _this.pageSize + index;\n        if (_this.selectedImageIndex !== null && _this.selectedImageIndex !== actualIndex) {\n          yield _this.imageService.updateMetadata(_this.imagesWithMetadata[_this.selectedImageIndex].metadata);\n        }\n        if (actualIndex >= 0 && actualIndex < _this.imagesWithMetadata.length) {\n          _this.selectedImageIndex = actualIndex;\n          _this.imageService.setSelectedImageIndex(_this.selectedImageIndex);\n          _this.imageSelect.emit(_this.imagesWithMetadata[_this.selectedImageIndex]);\n        }\n      })();\n    }\n    //Check if is selected\n    isSelected(index) {\n      const actualIndex = (this.currentPage - 1) * this.pageSize + index;\n      return this.selectedImageIndex === actualIndex;\n    }\n    // Delete image from slider\n    deleteImage(index) {\n      const actualIndex = (this.currentPage - 1) * this.pageSize + index;\n      if (actualIndex >= 0 && actualIndex < this.imagesWithMetadata.length) {\n        this.imageUrls.splice(actualIndex, 1);\n        this.imageService.deleteImage(actualIndex);\n        if (this.selectedImageIndex === actualIndex) {\n          this.selectedImageIndex = null;\n          this.imageService.setSelectedImageIndex(this.selectedImageIndex);\n          this.imageSelect.emit(null);\n        } else if (this.selectedImageIndex !== null && this.selectedImageIndex > actualIndex) {\n          this.selectedImageIndex--;\n          this.imageService.setSelectedImageIndex(this.selectedImageIndex);\n        }\n        // Check if the current page is empty\n        if (this.paginatedImages.length === 0 && this.currentPage > 1) {\n          this.currentPage--; // Go age back\n        }\n        this.paginateImages();\n      }\n    }\n    //paginate\n    paginateImages() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      this.paginatedImages = this.imagesWithMetadata.slice(start, end);\n      this.paginatedImageUrls = this.imageUrls.slice(start, end);\n    }\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.paginateImages();\n      }\n    }\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.paginateImages();\n      }\n    }\n    static #_ = this.ɵfac = function ImageSliderComponent_Factory(t) {\n      return new (t || ImageSliderComponent)(i0.ɵɵdirectiveInject(i1.ImageService), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ImageSliderComponent,\n      selectors: [[\"app-image-slider\"]],\n      hostBindings: function ImageSliderComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"resize\", function ImageSliderComponent_resize_HostBindingHandler($event) {\n            return ctx.onResize($event);\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      inputs: {\n        SaveCurrentImageEvent: \"SaveCurrentImageEvent\",\n        SaveAllImagesEvent: \"SaveAllImagesEvent\"\n      },\n      outputs: {\n        imageSelect: \"imageSelect\"\n      },\n      decls: 4,\n      vars: 2,\n      consts: [[\"noImages\", \"\"], [1, \"flex\", \"flex-col\", \"space-y-2\", \"p-2\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"flex\", \"flex-wrap\", \"justify-center\"], [\"class\", \"relative group flex-shrink-0 p-2\", 3, \"width\", \"height\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"justify-center\", \"space-x-4\"], [1, \"p-1\"], [\"class\", \"bg-blue-500 text-white p-2 rounded\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"flex-1\", \"text-center\"], [1, \"relative\", \"group\", \"flex-shrink-0\", \"p-2\"], [1, \"cursor-pointer\", \"object-cover\", 3, \"click\", \"src\", \"ngClass\", \"alt\"], [1, \"absolute\", \"top-0\", \"left-0\", \"bg-red-500\", \"text-white\", \"rounded-full\", \"w-6\", \"h-6\", \"flex\", \"items-center\", \"justify-center\", \"opacity-0\", \"group-hover:opacity-100\", \"transition-opacity\", 3, \"click\"], [1, \"bg-blue-500\", \"text-white\", \"p-2\", \"rounded\", 3, \"click\", \"disabled\"]],\n      template: function ImageSliderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵtemplate(1, ImageSliderComponent_ng_container_1_Template, 10, 5, \"ng-container\", 2)(2, ImageSliderComponent_ng_template_2_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const noImages_r6 = i0.ɵɵreference(3);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.paginatedImages.length > 0)(\"ngIfElse\", noImages_r6);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf],\n      encapsulation: 2\n    });\n  }\n  return ImageSliderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}