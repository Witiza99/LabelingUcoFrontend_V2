{"ast":null,"code":"/*******************************Imports***********************************/\nimport { EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../image-slider/image-slider.component\";\nimport * as i2 from \"../canvas/canvas.component\";\n//Class Main Area Component\nexport let MainAreaComponent = /*#__PURE__*/(() => {\n  class MainAreaComponent {\n    constructor() {\n      this.SaveCurrentImageEvent = new EventEmitter();\n      this.SaveAllImagesEvent = new EventEmitter();\n      this.selectedImage = null;\n    }\n    /******************************Angular_Functions*******************************/\n    ngOnInit() {\n      this.saveCurrentImageSubscription = this.receiveSaveCurrentImage.subscribe(() => {\n        this.handleSaveCurrentImage();\n      });\n      this.saveAllImagesSubscription = this.receiveSaveAllImages.subscribe(() => {\n        this.handleSaveAllImages();\n      });\n    }\n    ngOnDestroy() {\n      if (this.saveCurrentImageSubscription) {\n        this.saveCurrentImageSubscription.unsubscribe();\n      }\n      if (this.saveAllImagesSubscription) {\n        this.saveAllImagesSubscription.unsubscribe();\n      }\n    }\n    /******************************Handle_Functions*******************************/\n    handleSaveCurrentImage() {\n      this.SaveCurrentImageEvent.emit();\n    }\n    handleSaveAllImages() {\n      this.SaveAllImagesEvent.emit();\n    }\n    /******************************Others_Functions*******************************/\n    selectImage(image) {\n      this.selectedImage = image;\n      this.saveCurrentImageSubscription = new Subscription();\n      this.saveAllImagesSubscription = new Subscription();\n    }\n    static #_ = this.ɵfac = function MainAreaComponent_Factory(t) {\n      return new (t || MainAreaComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MainAreaComponent,\n      selectors: [[\"app-main-area\"]],\n      inputs: {\n        receiveSaveCurrentImage: \"receiveSaveCurrentImage\",\n        receiveSaveAllImages: \"receiveSaveAllImages\"\n      },\n      outputs: {\n        SaveCurrentImageEvent: \"SaveCurrentImageEvent\",\n        SaveAllImagesEvent: \"SaveAllImagesEvent\"\n      },\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"flex\", \"flex-col\", \"h-full\"], [1, \"flex-1\", \"flex\", \"justify-center\", \"items-center\", \"bg-gray-200\", 2, \"flex\", \"1 0 75%\"], [3, \"image\"], [1, \"pt-4\", \"h-32\", \"bg-gray-100\", \"border-t\", \"border-gray-300\", \"overflow-x-auto\", 2, \"flex\", \"1 0 25%\"], [3, \"imageSelect\", \"SaveCurrentImageEvent\", \"SaveAllImagesEvent\"]],\n      template: function MainAreaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"app-canvas\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"app-image-slider\", 4);\n          i0.ɵɵlistener(\"imageSelect\", function MainAreaComponent_Template_app_image_slider_imageSelect_4_listener($event) {\n            return ctx.selectImage($event);\n          });\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"image\", ctx.selectedImage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"SaveCurrentImageEvent\", ctx.SaveCurrentImageEvent)(\"SaveAllImagesEvent\", ctx.SaveAllImagesEvent);\n        }\n      },\n      dependencies: [i1.ImageSliderComponent, i2.CanvasComponent],\n      encapsulation: 2\n    });\n  }\n  return MainAreaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}