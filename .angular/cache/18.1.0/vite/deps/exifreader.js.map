{
  "version": 3,
  "sources": ["../../../../../node_modules/exifreader/src/dataview.js", "../../../../../node_modules/exifreader/src/utils.js", "../../../../../node_modules/exifreader/src/constants.js", "../../../../../node_modules/exifreader/src/tag-names-utils.js", "../../../../../node_modules/exifreader/src/byte-order.js", "../../../../../node_modules/exifreader/src/image-header-tiff.js", "../../../../../node_modules/exifreader/src/image-header-jpeg.js", "../../../../../node_modules/exifreader/src/image-header-png.js", "../../../../../node_modules/exifreader/src/image-header-iso-bmff-utils.js", "../../../../../node_modules/exifreader/src/image-header-iso-bmff-iloc.js", "../../../../../node_modules/exifreader/src/image-header-iso-bmff.js", "../../../../../node_modules/exifreader/src/image-header-heic.js", "../../../../../node_modules/exifreader/src/image-header-avif.js", "../../../../../node_modules/exifreader/src/image-header-webp.js", "../../../../../node_modules/exifreader/src/image-header-gif.js", "../../../../../node_modules/exifreader/src/xml.js", "../../../../../node_modules/exifreader/src/image-header.js", "../../../../../node_modules/exifreader/src/tag-names-common.js", "../../../../../node_modules/exifreader/src/tag-names-0th-ifd.js", "../../../../../node_modules/exifreader/src/tag-names-exif-ifd.js", "../../../../../node_modules/exifreader/src/tag-names-gps-ifd.js", "../../../../../node_modules/exifreader/src/tag-names-interoperability-ifd.js", "../../../../../node_modules/exifreader/src/tag-names-mpf-ifd.js", "../../../../../node_modules/exifreader/src/tag-names.js", "../../../../../node_modules/exifreader/src/types.js", "../../../../../node_modules/exifreader/src/tags-helpers.js", "../../../../../node_modules/exifreader/src/tags.js", "../../../../../node_modules/exifreader/src/mpf-tags.js", "../../../../../node_modules/exifreader/src/file-tags.js", "../../../../../node_modules/exifreader/src/jfif-tags.js", "../../../../../node_modules/exifreader/src/iptc-tag-names.js", "../../../../../node_modules/exifreader/src/text-decoder.js", "../../../../../node_modules/exifreader/src/tag-decoder.js", "../../../../../node_modules/exifreader/src/iptc-tags.js", "../../../../../node_modules/exifreader/src/xmp-tag-names.js", "../../../../../node_modules/exifreader/src/dom-parser.js", "../../../../../node_modules/exifreader/src/xmp-tags.js", "../../../../../node_modules/exifreader/src/photoshop-tag-names.js", "../../../../../node_modules/exifreader/src/photoshop-tags.js", "../../../../../node_modules/exifreader/src/icc-tag-names.js", "../../../../../node_modules/exifreader/src/icc-tags.js", "../../../../../node_modules/exifreader/src/png-file-tags.js", "../../../../../node_modules/exifreader/src/png-text-tags.js", "../../../../../node_modules/exifreader/src/png-tags.js", "../../../../../node_modules/exifreader/src/vp8x-tags.js", "../../../../../node_modules/exifreader/src/gif-file-tags.js", "../../../../../node_modules/exifreader/src/thumbnail.js", "../../../../../node_modules/exifreader/src/errors.js", "../../../../../node_modules/exifreader/src/exif-reader.js"],
  "sourcesContent": ["export default class DataView {\n  constructor(buffer) {\n    if (bufferTypeIsUnsupported(buffer)) {\n      throw new Error('DataView: Passed buffer type is unsupported.');\n    }\n    this.buffer = buffer;\n    this.byteLength = this.buffer.length;\n  }\n  getUint8(offset) {\n    return this.buffer.readUInt8(offset);\n  }\n  getUint16(offset, littleEndian) {\n    if (littleEndian) {\n      return this.buffer.readUInt16LE(offset);\n    }\n    return this.buffer.readUInt16BE(offset);\n  }\n  getUint32(offset, littleEndian) {\n    if (littleEndian) {\n      return this.buffer.readUInt32LE(offset);\n    }\n    return this.buffer.readUInt32BE(offset);\n  }\n  getInt32(offset, littleEndian) {\n    if (littleEndian) {\n      return this.buffer.readInt32LE(offset);\n    }\n    return this.buffer.readInt32BE(offset);\n  }\n}\nfunction bufferTypeIsUnsupported(buffer) {\n  return typeof buffer !== 'object' || buffer.length === undefined || buffer.readUInt8 === undefined || buffer.readUInt16LE === undefined || buffer.readUInt16BE === undefined || buffer.readUInt32LE === undefined || buffer.readUInt32BE === undefined || buffer.readInt32LE === undefined || buffer.readInt32BE === undefined;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport DataViewWrapper from './dataview.js';\nexport function getDataView(data, byteOffset, byteLength) {\n  try {\n    return new DataView(data, byteOffset, byteLength);\n  } catch (error) {\n    return new DataViewWrapper(data, byteOffset, byteLength);\n  }\n}\nexport function getStringFromDataView(dataView, offset, length) {\n  const chars = [];\n  for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n    chars.push(dataView.getUint8(offset + i));\n  }\n  return getStringValueFromArray(chars);\n}\nexport function getNullTerminatedStringFromDataView(dataView, offset) {\n  const chars = [];\n  let i = 0;\n  while (offset + i < dataView.byteLength) {\n    const char = dataView.getUint8(offset + i);\n    if (char === 0) {\n      break;\n    }\n    chars.push(char);\n    i++;\n  }\n  return getStringValueFromArray(chars);\n}\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n  const chars = [];\n  for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n    chars.push(dataView.getUint16(offset + i));\n  }\n  if (chars[chars.length - 1] === 0) {\n    chars.pop();\n  }\n  return getStringValueFromArray(chars);\n}\nexport function getPascalStringFromDataView(dataView, offset) {\n  const size = dataView.getUint8(offset);\n  const string = getStringFromDataView(dataView, offset + 1, size);\n  return [size, string];\n}\nexport function getStringValueFromArray(charArray) {\n  return charArray.map(charCode => String.fromCharCode(charCode)).join('');\n}\nexport function getCharacterArray(string) {\n  return string.split('').map(character => character.charCodeAt(0));\n}\nexport function objectAssign() {\n  for (let i = 1; i < arguments.length; i++) {\n    for (const property in arguments[i]) {\n      arguments[0][property] = arguments[i][property];\n    }\n  }\n  return arguments[0];\n}\nexport function deferInit(object, key, initializer) {\n  let initialized = false;\n  Object.defineProperty(object, key, {\n    get() {\n      if (!initialized) {\n        initialized = true;\n        Object.defineProperty(object, key, {\n          configurable: true,\n          enumerable: true,\n          value: initializer.apply(object),\n          writable: true\n        });\n      }\n      return object[key];\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\nexport function getBase64Image(image) {\n  if (typeof btoa !== 'undefined') {\n    if (typeof image === 'string') {\n      // This only happens during the build tests using Node 16+ (npm run test:build).\n      return btoa(image);\n    }\n    // IE11- does not implement reduce on the Uint8Array prototype.\n    return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n  }\n  if (typeof Buffer === 'undefined') {\n    return undefined;\n  }\n  if (typeof Buffer.from !== 'undefined') {\n    // eslint-disable-line no-undef\n    return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n  }\n  return new Buffer(image).toString('base64'); // eslint-disable-line no-undef\n}\nexport function dataUriToBuffer(dataUri) {\n  const data = dataUri.substring(dataUri.indexOf(',') + 1);\n  if (dataUri.indexOf(';base64') !== -1) {\n    if (typeof atob !== 'undefined') {\n      return Uint8Array.from(atob(data), char => char.charCodeAt(0)).buffer;\n    }\n    if (typeof Buffer === 'undefined') {\n      return undefined;\n    }\n    if (typeof Buffer.from !== 'undefined') {\n      // eslint-disable-line no-undef\n      return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n    }\n    return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n  }\n  const decodedData = decodeURIComponent(data);\n  if (typeof Buffer !== 'undefined') {\n    if (typeof Buffer.from !== 'undefined') {\n      // eslint-disable-line no-undef\n      return Buffer.from(decodedData); // eslint-disable-line no-undef\n    }\n    return new Buffer(decodedData); // eslint-disable-line no-undef\n  }\n  return Uint8Array.from(decodedData, char => char.charCodeAt(0)).buffer;\n}\nexport function padStart(string, length, character) {\n  const padding = strRepeat(character, length - string.length);\n  return padding + string;\n}\nexport function parseFloatRadix(string, radix) {\n  return parseInt(string.replace('.', ''), radix) / Math.pow(radix, (string.split('.')[1] || '').length);\n}\nexport function strRepeat(string, num) {\n  return new Array(num + 1).join(string);\n}\nexport const COMPRESSION_METHOD_NONE = undefined;\nexport const COMPRESSION_METHOD_DEFLATE = 0;\nexport function decompress(dataView, compressionMethod, encoding, returnType = 'string') {\n  if (compressionMethod === COMPRESSION_METHOD_DEFLATE) {\n    if (typeof DecompressionStream === 'function') {\n      const decompressionStream = new DecompressionStream('deflate');\n      const decompressedStream = new Blob([dataView]).stream().pipeThrough(decompressionStream);\n      if (returnType === 'dataview') {\n        return new Response(decompressedStream).arrayBuffer().then(arrayBuffer => new DataView(arrayBuffer));\n      }\n      return new Response(decompressedStream).arrayBuffer().then(buffer => new TextDecoder(encoding).decode(buffer));\n    }\n  }\n  if (compressionMethod !== undefined) {\n    return Promise.reject(`Unknown compression method ${compressionMethod}.`);\n  }\n  return dataView;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n  USE_FILE: true,\n  USE_JFIF: true,\n  USE_PNG_FILE: true,\n  USE_EXIF: true,\n  USE_IPTC: true,\n  USE_XMP: true,\n  USE_ICC: true,\n  USE_MPF: true,\n  USE_PHOTOSHOP: true,\n  USE_THUMBNAIL: true,\n  USE_TIFF: true,\n  USE_JPEG: true,\n  USE_PNG: true,\n  USE_HEIC: true,\n  USE_AVIF: true,\n  USE_WEBP: true,\n  USE_GIF: true\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n  return value.map(charCode => String.fromCharCode(charCode)).join('');\n}\nexport function getEncodedString(value) {\n  if (value.length >= 8) {\n    const encoding = getStringValue(value.slice(0, 8));\n    if (encoding === 'ASCII\\x00\\x00\\x00') {\n      return getStringValue(value.slice(8));\n    } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n      return '[JIS encoded text]';\n    } else if (encoding === 'UNICODE\\x00') {\n      return '[Unicode encoded text]';\n    } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n      return '[Undefined encoding]';\n    }\n  }\n  return 'Undefined';\n}\nexport function getCalculatedGpsValue(value) {\n  return value[0][0] / value[0][1] + value[1][0] / value[1][1] / 60 + value[2][0] / value[2][1] / 3600;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\nexport default {\n  BIG_ENDIAN,\n  LITTLE_ENDIAN,\n  getByteOrder\n};\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n  if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n    return LITTLE_ENDIAN;\n  } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n    return BIG_ENDIAN;\n  }\n  throw new Error('Illegal byte order value. Faulty image.');\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\nexport default {\n  isTiffFile,\n  findTiffOffsets\n};\nfunction isTiffFile(dataView) {\n  const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n  return !!dataView && dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH && hasTiffMarker(dataView);\n}\nfunction hasTiffMarker(dataView) {\n  const TIFF_ID = 0x2a;\n  const TIFF_ID_OFFSET = 2;\n  const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n  return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\nfunction findTiffOffsets() {\n  const TIFF_FILE_HEADER_OFFSET = 0;\n  if (Constants.USE_EXIF) {\n    return {\n      hasAppMarkers: true,\n      tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n    };\n  }\n  return {};\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringFromDataView } from './utils.js';\nimport Constants from './constants.js';\nexport default {\n  isJpegFile,\n  findJpegOffsets\n};\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\nfunction isJpegFile(dataView) {\n  return !!dataView && dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH && dataView.getUint16(0) === JPEG_ID;\n}\nfunction findJpegOffsets(dataView) {\n  let appMarkerPosition = JPEG_ID_SIZE;\n  let fieldLength;\n  let sof0DataOffset;\n  let sof2DataOffset;\n  let jfifDataOffset;\n  let tiffHeaderOffset;\n  let iptcDataOffset;\n  let xmpChunks;\n  let iccChunks;\n  let mpfDataOffset;\n  while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n    if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n    } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n    } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n    } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n    } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n      if (!xmpChunks) {\n        xmpChunks = [];\n      }\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n    } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n      if (!xmpChunks) {\n        xmpChunks = [];\n      }\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n    } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n    } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n      const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n      const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n      const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n      if (!iccChunks) {\n        iccChunks = [];\n      }\n      iccChunks.push({\n        offset: iccDataOffset,\n        length: iccDataLength,\n        chunkNumber: iccChunkNumber,\n        chunksTotal: iccChunksTotal\n      });\n    } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n    } else if (isAppMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n    } else if (isFillByte(dataView, appMarkerPosition)) {\n      appMarkerPosition++;\n      continue;\n    } else {\n      break;\n    }\n    appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n  }\n  return {\n    hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n    fileDataOffset: sof0DataOffset || sof2DataOffset,\n    jfifDataOffset,\n    tiffHeaderOffset,\n    iptcDataOffset,\n    xmpChunks,\n    iccChunks,\n    mpfDataOffset\n  };\n}\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === SOF0_MARKER;\n}\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === SOF2_MARKER;\n}\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n  const markerIdLength = APP2_ICC_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP2_MARKER && getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER;\n}\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n  const markerIdLength = APP2_MPF_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP2_MARKER && getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER;\n}\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n  const markerIdLength = APP0_JFIF_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP0_MARKER && getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER && dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00;\n}\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n  const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP1_MARKER && getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER && dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00;\n}\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === APP1_MARKER && isXmpIdentifier(dataView, appMarkerPosition);\n}\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n  const markerIdLength = APP1_XMP_IDENTIFIER.length;\n  return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === APP1_MARKER && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n  const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n  return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n  return {\n    dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n    length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n  };\n}\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n  return {\n    dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n    length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n  };\n}\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n  const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP13_MARKER && getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER && dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00;\n}\nfunction isAppMarker(dataView, appMarkerPosition) {\n  const appMarker = dataView.getUint16(appMarkerPosition);\n  return appMarker >= APP0_MARKER && appMarker <= APP15_MARKER || appMarker === COMMENT_MARKER || appMarker === SOF0_MARKER || appMarker === SOF2_MARKER || appMarker === DHT_MARKER || appMarker === DQT_MARKER || appMarker === DRI_MARKER || appMarker === SOS_MARKER;\n}\nfunction isFillByte(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport { getStringFromDataView, getNullTerminatedStringFromDataView } from './utils.js';\nimport Constants from './constants.js';\nexport default {\n  isPngFile,\n  findPngOffsets\n};\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_ZTXT = 'zTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\nexport const TYPE_ICCP = 'iCCP';\nfunction isPngFile(dataView) {\n  return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\nfunction findPngOffsets(dataView, async) {\n  const PNG_CRC_SIZE = 4;\n  const offsets = {\n    hasAppMarkers: false\n  };\n  let offset = PNG_ID.length;\n  while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n    if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n      offsets.hasAppMarkers = true;\n      offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n    } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n      const dataOffset = getPngXmpDataOffset(dataView, offset);\n      if (dataOffset !== undefined) {\n        offsets.hasAppMarkers = true;\n        offsets.xmpChunks = [{\n          dataOffset,\n          length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n        }];\n      }\n    } else if (isPngTextChunk(dataView, offset, async)) {\n      offsets.hasAppMarkers = true;\n      const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n      if (!offsets.pngTextChunks) {\n        offsets.pngTextChunks = [];\n      }\n      offsets.pngTextChunks.push({\n        length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n        type: chunkType,\n        offset: offset + PNG_CHUNK_DATA_OFFSET\n      });\n    } else if (isPngExifChunk(dataView, offset)) {\n      offsets.hasAppMarkers = true;\n      offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n    } else if (Constants.USE_ICC && async && isPngIccpChunk(dataView, offset)) {\n      offsets.hasAppMarkers = true;\n      const chunkDataLength = dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET);\n      const iccHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n      const {\n        profileName,\n        compressionMethod,\n        compressedProfileOffset\n      } = parseIccHeader(dataView, iccHeaderOffset);\n      if (!offsets.iccChunks) {\n        offsets.iccChunks = [];\n      }\n      offsets.iccChunks.push({\n        offset: compressedProfileOffset,\n        length: chunkDataLength - (compressedProfileOffset - iccHeaderOffset),\n        chunkNumber: 1,\n        chunksTotal: 1,\n        profileName,\n        compressionMethod\n      });\n    } else if (isPngChunk(dataView, offset)) {\n      offsets.hasAppMarkers = true;\n      if (!offsets.pngChunkOffsets) {\n        offsets.pngChunkOffsets = [];\n      }\n      offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n    }\n    offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE + PNG_CRC_SIZE;\n  }\n  return offsets;\n}\nfunction isPngImageHeaderChunk(dataView, offset) {\n  const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n  return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\nfunction isPngXmpChunk(dataView, offset) {\n  return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ITXT && getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX;\n}\nfunction isPngTextChunk(dataView, offset, async) {\n  const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n  return chunkType === TYPE_TEXT || chunkType === TYPE_ITXT || chunkType === TYPE_ZTXT && async;\n}\nfunction isPngExifChunk(dataView, offset) {\n  return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\nfunction isPngIccpChunk(dataView, offset) {\n  return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ICCP;\n}\nfunction isPngChunk(dataView, offset) {\n  const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n  const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n  return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\nfunction getPngXmpDataOffset(dataView, offset) {\n  const COMPRESSION_FLAG_SIZE = 1;\n  const COMPRESSION_METHOD_SIZE = 1;\n  offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n  let numberOfNullSeparators = 0;\n  while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n    if (dataView.getUint8(offset) === 0x00) {\n      numberOfNullSeparators++;\n    }\n    offset++;\n  }\n  if (numberOfNullSeparators < 2) {\n    return undefined;\n  }\n  return offset;\n}\nfunction parseIccHeader(dataView, offset) {\n  const NULL_SEPARATOR_SIZE = 1;\n  const COMPRESSION_METHOD_SIZE = 1;\n  const profileName = getNullTerminatedStringFromDataView(dataView, offset);\n  offset += profileName.length + NULL_SEPARATOR_SIZE;\n  const compressionMethod = dataView.getUint8(offset);\n  offset += COMPRESSION_METHOD_SIZE;\n  return {\n    profileName,\n    compressionMethod,\n    compressedProfileOffset: offset\n  };\n}", "export function get64BitValue(dataView, offset) {\n  // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n  // wait until there are real-world examples where it is necessary.\n  return dataView.getUint32(offset + 4);\n}", "import { get64BitValue } from './image-header-iso-bmff-utils.js';\nexport function parseItemLocationBox(dataView, version, contentOffset, boxLength) {\n  const FLAGS_SIZE = 3;\n  const {\n    offsets,\n    sizes\n  } = getItemLocationBoxOffsetsAndSizes(version, contentOffset + FLAGS_SIZE);\n  const offsetSize = dataView.getUint8(offsets.offsetSize) >> 4;\n  sizes.item.extent.extentOffset = offsetSize;\n  const lengthSize = dataView.getUint8(offsets.lengthSize) & 0x0f;\n  sizes.item.extent.extentLength = lengthSize;\n  const baseOffsetSize = dataView.getUint8(offsets.baseOffsetSize) >> 4;\n  sizes.item.baseOffset = baseOffsetSize;\n  const indexSize = getIndexSize(dataView, offsets.indexSize, version);\n  sizes.item.extent.extentIndex = indexSize !== undefined ? indexSize : 0;\n  const itemCount = getItemCount(dataView, offsets.itemCount, version);\n  return {\n    type: 'iloc',\n    items: getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount),\n    length: boxLength\n  };\n}\nfunction getItemLocationBoxOffsetsAndSizes(version, contentOffset) {\n  const sizes = {\n    item: {\n      dataReferenceIndex: 2,\n      extentCount: 2,\n      extent: {}\n    }\n  };\n  if (version < 2) {\n    sizes.itemCount = 2;\n    sizes.item.itemId = 2;\n  } else if (version === 2) {\n    sizes.itemCount = 4;\n    sizes.item.itemId = 4;\n  }\n  if (version === 1 || version === 2) {\n    sizes.item.constructionMethod = 2;\n  } else {\n    sizes.item.constructionMethod = 0;\n  }\n  const offsets = {\n    offsetSize: contentOffset,\n    lengthSize: contentOffset,\n    baseOffsetSize: contentOffset + 1,\n    indexSize: contentOffset + 1\n  };\n  offsets.itemCount = contentOffset + 2;\n  offsets.items = offsets.itemCount + sizes.itemCount;\n  offsets.item = {\n    itemId: 0\n  };\n  offsets.item.constructionMethod = offsets.item.itemId + sizes.item.itemId;\n  offsets.item.dataReferenceIndex = offsets.item.constructionMethod + sizes.item.constructionMethod;\n  return {\n    offsets,\n    sizes\n  };\n}\nfunction getIndexSize(dataView, offset, version) {\n  if (version === 1 || version === 2) {\n    return dataView.getUint8(offset) & 0x0f;\n  }\n  return undefined;\n}\nfunction getItemCount(dataView, offset, version) {\n  if (version < 2) {\n    return dataView.getUint16(offset);\n  } else if (version === 2) {\n    return dataView.getUint32(offset);\n  }\n  return undefined;\n}\nfunction getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount) {\n  if (itemCount === undefined) {\n    return [];\n  }\n  const items = [];\n  let offset = offsets.items;\n  for (let i = 0; i < itemCount; i++) {\n    const item = {\n      extents: []\n    };\n    item.itemId = getItemId(dataView, offset, version);\n    offset += sizes.item.itemId;\n    item.constructionMethod = version === 1 || version === 2 ? dataView.getUint16(offset) & 0x0f : undefined;\n    offset += sizes.item.constructionMethod;\n    item.dataReferenceIndex = dataView.getUint16(offset);\n    offset += sizes.item.dataReferenceIndex;\n    item.baseOffset = getVariableSizedValue(dataView, offset, sizes.item.baseOffset);\n    offset += sizes.item.baseOffset;\n    item.extentCount = dataView.getUint16(offset);\n    offset += sizes.item.extentCount;\n    for (let j = 0; j < item.extentCount; j++) {\n      const extent = {};\n      extent.extentIndex = getExtentIndex(dataView, version, offset, indexSize);\n      offset += sizes.item.extent.extentIndex;\n      extent.extentOffset = getVariableSizedValue(dataView, offset, offsetSize);\n      offset += sizes.item.extent.extentOffset;\n      extent.extentLength = getVariableSizedValue(dataView, offset, lengthSize);\n      offset += sizes.item.extent.extentLength;\n      item.extents.push(extent);\n    }\n    items.push(item);\n  }\n  return items;\n}\nfunction getItemId(dataView, offset, version) {\n  if (version < 2) {\n    return dataView.getUint16(offset);\n  } else if (version === 2) {\n    return dataView.getUint32(offset);\n  }\n  return undefined;\n}\nfunction getExtentIndex(dataView, version, offset, indexSize) {\n  if ((version === 1 || version === 2) && indexSize > 0) {\n    return getVariableSizedValue(dataView, offset, indexSize);\n  }\n  return undefined;\n}\nfunction getVariableSizedValue(dataView, offset, size) {\n  if (size === 4) {\n    return dataView.getUint32(offset);\n  }\n  if (size === 8) {\n    // eslint-disable-next-line no-console\n    console.warn('This file uses an 8-bit offset which is currently not supported by ExifReader. Contact the maintainer to get it fixed.');\n    return get64BitValue(dataView, offset);\n  }\n  return 0;\n}", "import Constants from './constants.js';\nimport { getNullTerminatedStringFromDataView, getStringFromDataView } from './utils.js';\n// import {get64BitValue} from './image-header-iso-bmff-utils.js';\nimport { parseItemLocationBox } from './image-header-iso-bmff-iloc.js';\n\n// HEIC and AVIF files are based on the ISO-BMFF format. This file format is\n// built up by boxes. There are boxes and full boxes. All box types have a\n// length (4 or 8 bytes) and a type (4 bytes). Full boxes also have a version\n// (1 byte) and flags (3 bytes). The boxes can be nested. Each box type has its\n// own structure that can be seen in the specification.\n//\n// For metadata we are interested in the meta box. The meta box contains sub\n// boxes. The sub box type iinf has info about which types of metadata are\n// present in the file. The item ID we get from there we then look up in the\n// iloc sub box to get the offset to the real location of the metadata.\n//\n// The ICC profiles is a bit more nested. We have to look in\n// meta > iprp > ipco > colr, and then the whole profile is stored there.\n\n// These are actually 32-bit strings, not random IDs, e.g. \"ftyp\" and \"meta\".\nconst TYPE_FTYP = 0x66747970;\nconst TYPE_IPRP = 0x69707270;\nconst TYPE_META = 0x6d657461;\nconst TYPE_ILOC = 0x696c6f63;\nconst TYPE_IINF = 0x69696e66;\nconst TYPE_INFE = 0x696e6665;\nconst TYPE_IPCO = 0x6970636f;\nconst TYPE_COLR = 0x636f6c72;\n\n// const EXTENSION_TYPE_FDEL = 0x6664656c;\n\nexport const ITEM_INFO_TYPE_EXIF = 0x45786966;\nexport const ITEM_INFO_TYPE_MIME = 0x6d696d65;\nconst ITEM_INFO_TYPE_URI = 0x75726920;\n\n/**\n * Parses a ISO-BMFF box from the provided data view starting at the given offset.\n *\n * @param {DataView} dataView - The DataView to parse.\n * @param {number} offset - The offset at which to start parsing.\n * @returns {Object} The parsed box.\n */\nexport function parseBox(dataView, offset) {\n  const BOX_TYPE_OFFSET = 4;\n  const BOX_MIN_LENGTH = 8;\n  const VERSION_SIZE = 1;\n  const {\n    length,\n    contentOffset\n  } = getBoxLength(dataView, offset);\n  if (length < BOX_MIN_LENGTH) {\n    return undefined;\n  }\n  const type = dataView.getUint32(offset + BOX_TYPE_OFFSET);\n  if (type === TYPE_FTYP) {\n    return parseFileTypeBox(dataView, contentOffset, length);\n  }\n  if (type === TYPE_IPRP) {\n    return parseItemPropertiesBox(dataView, offset, contentOffset, length);\n  }\n  if (type === TYPE_IPCO) {\n    return parseItemPropertyContainerBox(dataView, offset, contentOffset, length);\n  }\n  if (type === TYPE_COLR) {\n    return parseColorInformationBox(dataView, contentOffset, length);\n  }\n\n  // The following are full boxes, also containing version and flags.\n  const version = dataView.getUint8(contentOffset);\n  if (type === TYPE_META) {\n    return parseMetadataBox(dataView, offset, contentOffset + VERSION_SIZE, length);\n  }\n  if (type === TYPE_ILOC) {\n    return parseItemLocationBox(dataView, version, contentOffset + VERSION_SIZE, length);\n  }\n  if (type === TYPE_IINF) {\n    return parseItemInformationBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n  }\n  if (type === TYPE_INFE) {\n    return parseItemInformationEntryBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n  }\n  return {\n    // type: getStringFromDataView(dataView, offset + BOX_TYPE_OFFSET, 4),\n    type: undefined,\n    length\n  };\n}\n\n/**\n * @typedef {Object} BoxLength\n * @property {number} length The length of the box including length and type.\n * @property {number} contentOffset\n */\n\n/**\n * @param {DataView} dataView\n * @param {number} offset\n * @returns {BoxLength}\n */\nfunction getBoxLength(dataView, offset) {\n  const BOX_LENGTH_SIZE = 4;\n  const BOX_TYPE_SIZE = 4;\n  const BOX_EXTENDED_SIZE = 8;\n  const BOX_EXTENDED_SIZE_LOW_OFFSET = 12;\n  const boxLength = dataView.getUint32(offset);\n  if (extendsToEndOfFile(boxLength)) {\n    return {\n      length: dataView.byteLength - offset,\n      contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE\n    };\n  }\n  if (hasExtendedSize(boxLength)) {\n    if (hasEmptyHighBits(dataView, offset)) {\n      // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n      // wait until there are real-world examples where it is necessary.\n      return {\n        length: dataView.getUint32(offset + BOX_EXTENDED_SIZE_LOW_OFFSET),\n        contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE + BOX_EXTENDED_SIZE\n      };\n    }\n  }\n  return {\n    length: boxLength,\n    contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE\n  };\n}\nfunction extendsToEndOfFile(boxLength) {\n  return boxLength === 0;\n}\nfunction hasExtendedSize(boxLength) {\n  return boxLength === 1;\n}\nfunction hasEmptyHighBits(dataView, offset) {\n  const BOX_EXTENDED_SIZE_OFFSET = 8;\n  return dataView.getUint32(offset + BOX_EXTENDED_SIZE_OFFSET) === 0;\n}\n\n/**\n * @typedef {Object} Offsets\n * @property {number} tiffHeaderOffset\n * @property {Array<Object>} xmpChunks\n * @property {Array<Object>} iccChunks\n * @property {boolean} hasAppMarkers\n */\n\n/**\n * Finds the offsets of ISO-BMFF-structued data in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Offsets} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nexport function findOffsets(dataView) {\n  if (Constants.USE_EXIF || Constants.USE_XMP || Constants.USE_ICC) {\n    const offsets = {};\n    const metaBox = findMetaBox(dataView);\n    if (!metaBox) {\n      return {\n        hasAppMarkers: false\n      };\n    }\n    if (Constants.USE_EXIF) {\n      offsets.tiffHeaderOffset = findExifOffset(dataView, metaBox);\n    }\n    if (Constants.USE_XMP) {\n      offsets.xmpChunks = findXmpChunks(metaBox);\n    }\n    if (Constants.USE_ICC) {\n      offsets.iccChunks = findIccChunks(metaBox);\n    }\n    offsets.hasAppMarkers = offsets.tiffHeaderOffset !== undefined || offsets.xmpChunks !== undefined || offsets.iccChunks !== undefined;\n    return offsets;\n  }\n  return {};\n}\nfunction findMetaBox(dataView) {\n  const BOX_LENGTH_SIZE = 4;\n  const BOX_TYPE_SIZE = 4;\n  let offset = 0;\n  while (offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE <= dataView.byteLength) {\n    const box = parseBox(dataView, offset);\n    if (box === undefined) {\n      break;\n    }\n    if (box.type === 'meta') {\n      return box;\n    }\n    offset += box.length;\n  }\n  return undefined;\n}\nfunction findExifOffset(dataView, metaBox) {\n  try {\n    const exifItemId = findIinfExifItemId(metaBox).itemId;\n    const ilocItem = findIlocItem(metaBox, exifItemId);\n    const exifOffset = ilocItem.baseOffset + ilocItem.extents[0].extentOffset;\n    return getTiffHeaderOffset(dataView, exifOffset);\n  } catch (error) {\n    return undefined;\n  }\n}\nfunction findIinfExifItemId(metaBox) {\n  return metaBox.subBoxes.find(box => box.type === 'iinf').itemInfos.find(itemInfo => itemInfo.itemType === ITEM_INFO_TYPE_EXIF);\n}\nfunction findIlocItem(metaBox, itemId) {\n  return metaBox.subBoxes.find(box => box.type === 'iloc').items.find(item => item.itemId === itemId);\n}\nfunction getTiffHeaderOffset(dataView, exifOffset) {\n  // ISO-BMFF formatted files store the Exif data as an \"Exif block\" where the\n  // first 32 bits is the TIFF header offset.\n  const TIFF_HEADER_OFFSET_SIZE = 4;\n  return exifOffset + TIFF_HEADER_OFFSET_SIZE + dataView.getUint32(exifOffset);\n}\nfunction findXmpChunks(metaBox) {\n  try {\n    const xmpItemId = findIinfXmpItemId(metaBox).itemId;\n    const ilocItem = findIlocItem(metaBox, xmpItemId);\n    const ilocItemExtent = findIlocItem(metaBox, xmpItemId).extents[0];\n    return [{\n      dataOffset: ilocItem.baseOffset + ilocItemExtent.extentOffset,\n      length: ilocItemExtent.extentLength\n    }];\n  } catch (error) {\n    return undefined;\n  }\n}\nfunction findIinfXmpItemId(metaBox) {\n  return metaBox.subBoxes.find(box => box.type === 'iinf').itemInfos.find(itemInfo => itemInfo.itemType === ITEM_INFO_TYPE_MIME && itemInfo.contentType === 'application/rdf+xml');\n}\nfunction findIccChunks(metaBox) {\n  // This finds the first ICC chunk, but there could be one for each image\n  // that is embedded in the file. If it turns out we need to match the ICC\n  // chunk to a specific image, we need to check the \"ipma\" in addition to the\n  // \"ipco\" (currently we only extract the \"ipco\" so more code would be\n  // needed).\n  try {\n    const icc = metaBox.subBoxes.find(box => box.type === 'iprp').subBoxes.find(box => box.type === 'ipco').properties.find(box => box.type === 'colr').icc;\n    if (icc) {\n      return [icc];\n    }\n  } catch (error) {\n    // Let it pass through.\n  }\n  return undefined;\n}\nfunction parseFileTypeBox(dataView, contentOffset, boxLength) {\n  const MAJOR_BRAND_SIZE = 4;\n  const majorBrand = getStringFromDataView(dataView, contentOffset, MAJOR_BRAND_SIZE);\n  return {\n    type: 'ftyp',\n    majorBrand,\n    length: boxLength\n  };\n}\nfunction parseItemPropertiesBox(dataView, startOffset, contentOffset, length) {\n  return {\n    type: 'iprp',\n    subBoxes: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n    length\n  };\n}\nfunction parseItemPropertyContainerBox(dataView, startOffset, contentOffset, length) {\n  return {\n    type: 'ipco',\n    properties: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n    length\n  };\n}\nfunction parseColorInformationBox(dataView, contentOffset, length) {\n  return {\n    type: 'colr',\n    icc: parseIcc(dataView, contentOffset),\n    length\n  };\n}\nfunction parseIcc(dataView, contentOffset) {\n  const COLOR_TYPE_SIZE = 4;\n  const colorType = getStringFromDataView(dataView, contentOffset, COLOR_TYPE_SIZE);\n  if (colorType !== 'prof' && colorType !== 'rICC') {\n    // Support for nclx would require some restructuring for ICC handling.\n    // Probably do it as a separate feature instead of combining with ICC.\n    // Exiftool groups it under QuickTime. The test file test.avif has nclx.\n    return undefined;\n  }\n  return {\n    offset: contentOffset + COLOR_TYPE_SIZE,\n    length: dataView.getUint32(contentOffset + COLOR_TYPE_SIZE),\n    chunkNumber: 1,\n    chunksTotal: 1\n  };\n}\nfunction parseMetadataBox(dataView, startOffset, contentOffset, length) {\n  const FLAGS_SIZE = 3;\n  return {\n    type: 'meta',\n    subBoxes: parseSubBoxes(dataView, contentOffset + FLAGS_SIZE, length - (contentOffset + FLAGS_SIZE - startOffset)),\n    length\n  };\n}\n\n/**\n * @param {DataView} dataView\n * @param {number} offset The offset to start parsing from.\n * @param {number} length The length of all sub boxes combined.\n * @return {Array<Object>}\n */\nfunction parseSubBoxes(dataView, offset, length) {\n  const ACCEPTED_ITEM_INFO_TYPES = [ITEM_INFO_TYPE_EXIF, ITEM_INFO_TYPE_MIME];\n  const subBoxes = [];\n  let currentOffset = offset;\n  while (currentOffset < offset + length) {\n    const box = parseBox(dataView, currentOffset);\n    if (box === undefined) {\n      break;\n    }\n    if (box.type !== undefined && (box.itemType === undefined || ACCEPTED_ITEM_INFO_TYPES.indexOf(box.itemType) !== -1)) {\n      subBoxes.push(box);\n    }\n    currentOffset += box.length;\n  }\n  return subBoxes;\n}\nfunction parseItemInformationBox(dataView, startOffset, version, contentOffset, length) {\n  const {\n    offsets\n  } = getItemInformationBoxOffsetsAndSizes(version, contentOffset);\n  return {\n    type: 'iinf',\n    itemInfos: parseSubBoxes(dataView, offsets.itemInfos, length - (offsets.itemInfos - startOffset)),\n    length\n  };\n}\nfunction getItemInformationBoxOffsetsAndSizes(version, contentOffset) {\n  const FLAGS_SIZE = 3;\n  const offsets = {\n    entryCount: contentOffset + FLAGS_SIZE\n  };\n  const sizes = {};\n  if (version === 0) {\n    sizes.entryCount = 2;\n  } else {\n    sizes.entryCount = 4;\n  }\n  offsets.itemInfos = offsets.entryCount + sizes.entryCount;\n  return {\n    offsets\n  };\n}\nfunction parseItemInformationEntryBox(dataView, startOffset, version, contentOffset, length) {\n  const FLAGS_SIZE = 3;\n  contentOffset += FLAGS_SIZE;\n  const entry = {\n    type: 'infe',\n    length\n  };\n  if (version === 0 || version === 1) {\n    entry.itemId = dataView.getUint16(contentOffset);\n    contentOffset += 2;\n    entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n    contentOffset += 2;\n    entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    contentOffset += entry.itemName.length + 1;\n    // entry.contentType = getNullTerminatedStringFromDataView(dataView, offset);\n    // offset += entry.contentType.length + 1;\n    // Since contentEncoding is optional we need to check the offset against length here.\n    // entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, offset);\n    // offset += entry.contentEncoding.length + 1;\n  }\n  // The following code should be correct but we currently don't need it.\n  // if (version === 1) {\n  //     // Everything here is optional, check the offset against length.\n  //     entry.extensionType = dataView.getUint32(contentOffset);\n  //     contentOffset += 4;\n  //     if (entry.extensionType === EXTENSION_TYPE_FDEL) {\n  //         entry.contentLocation = getNullTerminatedStringFromDataView(dataView, contentOffset);\n  //         contentOffset += entry.contentLocation.length + 1;\n  //         entry.contentMd5 = getNullTerminatedStringFromDataView(dataView, contentOffset);\n  //         contentOffset += entry.contentMd5.length + 1;\n  //         entry.contentLength = get64BitValue(dataView, contentOffset);\n  //         contentOffset += 8;\n  //         entry.transferLength = get64BitValue(dataView, contentOffset);\n  //         contentOffset += 8;\n  //         entry.entryCount = dataView.getUint8(contentOffset);\n  //         contentOffset += 1;\n  //         entry.entries = [];\n  //         for (let i = 0; i < entry.entryCount; i++) {\n  //             entry.entries.push({groupId: dataView.getUint32(contentOffset)});\n  //             contentOffset += 4;\n  //         }\n  //     }\n  // }\n  if (version >= 2) {\n    if (version === 2) {\n      entry.itemId = dataView.getUint16(contentOffset);\n      contentOffset += 2;\n    } else if (version === 3) {\n      entry.itemId = dataView.getUint32(contentOffset);\n      contentOffset += 4;\n    }\n    entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n    contentOffset += 2;\n    // entry.itemTypeAscii = getStringFromDataView(dataView, offset, 4); // For testing.\n    entry.itemType = dataView.getUint32(contentOffset);\n    contentOffset += 4;\n    entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    contentOffset += entry.itemName.length + 1;\n    if (entry.itemType === ITEM_INFO_TYPE_MIME) {\n      entry.contentType = getNullTerminatedStringFromDataView(dataView, contentOffset);\n      contentOffset += entry.contentType.length + 1;\n      if (startOffset + length > contentOffset) {\n        entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, contentOffset);\n        contentOffset += entry.contentEncoding.length + 1;\n      }\n    } else if (entry.itemType === ITEM_INFO_TYPE_URI) {\n      entry.itemUri = getNullTerminatedStringFromDataView(dataView, contentOffset);\n      contentOffset += entry.itemUri.length + 1;\n    }\n  }\n  return entry;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { parseBox, findOffsets } from './image-header-iso-bmff.js';\nexport default {\n  isHeicFile,\n  findHeicOffsets\n};\n\n/**\n * Checks if the provided data view represents a HEIC/HEIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents a HEIC/HEIF file, false otherwise.\n */\nfunction isHeicFile(dataView) {\n  if (!dataView) {\n    return false;\n  }\n  const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n  try {\n    const headerBox = parseBox(dataView, 0);\n    return headerBox && HEIC_MAJOR_BRANDS.indexOf(headerBox.majorBrand) !== -1;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Finds the offsets of a HEIC file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findHeicOffsets(dataView) {\n  return findOffsets(dataView);\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification:\n// https://aomediacodec.github.io/av1-avif\n\nimport { parseBox, findOffsets } from './image-header-iso-bmff.js';\nexport default {\n  isAvifFile,\n  findAvifOffsets\n};\n\n/**\n * Checks if the provided data view represents an AVIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents an AVIF file, false otherwise.\n */\nfunction isAvifFile(dataView) {\n  if (!dataView) {\n    return false;\n  }\n  try {\n    const headerBox = parseBox(dataView, 0);\n    return headerBox && headerBox.majorBrand === 'avif';\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Finds the offsets of an AVIF file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findAvifOffsets(dataView) {\n  return findOffsets(dataView);\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringFromDataView } from './utils.js';\nimport Constants from './constants.js';\nexport default {\n  isWebpFile,\n  findOffsets\n};\nfunction isWebpFile(dataView) {\n  const RIFF_ID_OFFSET = 0;\n  const RIFF_ID = 'RIFF';\n  const WEBP_MARKER_OFFSET = 8;\n  const WEBP_MARKER = 'WEBP';\n  return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\nfunction findOffsets(dataView) {\n  const SUB_CHUNK_START_OFFSET = 12;\n  const CHUNK_SIZE_OFFSET = 4;\n  const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n  const CHUNK_HEADER_SIZE = 8;\n  let offset = SUB_CHUNK_START_OFFSET;\n  let hasAppMarkers = false;\n  let tiffHeaderOffset;\n  let xmpChunks;\n  let iccChunks;\n  let vp8xChunkOffset;\n  while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n    const chunkId = getStringFromDataView(dataView, offset, 4);\n    const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n    if (Constants.USE_EXIF && chunkId === 'EXIF') {\n      hasAppMarkers = true;\n      if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n        tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n      } else {\n        tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n      }\n    } else if (Constants.USE_XMP && chunkId === 'XMP ') {\n      hasAppMarkers = true;\n      xmpChunks = [{\n        dataOffset: offset + CHUNK_HEADER_SIZE,\n        length: chunkSize\n      }];\n    } else if (Constants.USE_ICC && chunkId === 'ICCP') {\n      hasAppMarkers = true;\n      iccChunks = [{\n        offset: offset + CHUNK_HEADER_SIZE,\n        length: chunkSize,\n        chunkNumber: 1,\n        chunksTotal: 1\n      }];\n    } else if (chunkId === 'VP8X') {\n      hasAppMarkers = true;\n      vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n    }\n    offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n  }\n  return {\n    hasAppMarkers,\n    tiffHeaderOffset,\n    xmpChunks,\n    iccChunks,\n    vp8xChunkOffset\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringFromDataView } from './utils.js';\nexport default {\n  isGifFile,\n  findOffsets\n};\nconst GIF_SIGNATURE_SIZE = 6;\nconst GIF_SIGNATURES = ['GIF87a', 'GIF89a'];\nfunction isGifFile(dataView) {\n  return !!dataView && GIF_SIGNATURES.includes(getStringFromDataView(dataView, 0, GIF_SIGNATURE_SIZE));\n}\nfunction findOffsets() {\n  return {\n    gifHeaderOffset: 0\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringFromDataView } from './utils.js';\nexport default {\n  isXMLFile,\n  findOffsets\n};\nconst XML_MARKER_OFFSET = 0;\nconst XML_MARKER = '<?xpacket begin';\nfunction isXMLFile(dataView) {\n  return !!dataView && getStringFromDataView(dataView, XML_MARKER_OFFSET, XML_MARKER.length) === XML_MARKER;\n}\nfunction findOffsets(dataView) {\n  const xmpChunks = [];\n  xmpChunks.push({\n    dataOffset: XML_MARKER_OFFSET,\n    length: dataView.byteLength\n  });\n  return {\n    xmpChunks\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Avif from './image-header-avif.js';\nimport Webp from './image-header-webp.js';\nimport Gif from './image-header-gif.js';\nimport Xml from './xml.js';\nimport { objectAssign } from './utils.js';\nexport default {\n  parseAppMarkers\n};\nfunction parseAppMarkers(dataView, async) {\n  if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n    return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n  }\n  if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n    return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n  }\n  if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n    return addFileType(Png.findPngOffsets(dataView, async), 'png', 'PNG');\n  }\n  if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n    return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n  }\n  if (Constants.USE_AVIF && Avif.isAvifFile(dataView)) {\n    return addFileType(Avif.findAvifOffsets(dataView), 'avif', 'AVIF');\n  }\n  if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n    return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n  }\n  if (Constants.USE_GIF && Gif.isGifFile(dataView)) {\n    return addFileType(Gif.findOffsets(dataView), 'gif', 'GIF');\n  }\n  if (Constants.USE_XMP && Xml.isXMLFile(dataView)) {\n    return addFileType(Xml.findOffsets(dataView), 'xml', 'XML');\n  }\n  throw new Error('Invalid image format');\n}\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n  return objectAssign({}, offsets, {\n    fileType: {\n      value: fileType,\n      description: fileTypeDescription\n    }\n  });\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n  ApertureValue: value => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n  ColorSpace(value) {\n    if (value === 1) {\n      return 'sRGB';\n    } else if (value === 0xffff) {\n      return 'Uncalibrated';\n    }\n    return 'Unknown';\n  },\n  ComponentsConfiguration(value) {\n    return value.map(character => {\n      if (character === 0x31) {\n        return 'Y';\n      } else if (character === 0x32) {\n        return 'Cb';\n      } else if (character === 0x33) {\n        return 'Cr';\n      } else if (character === 0x34) {\n        return 'R';\n      } else if (character === 0x35) {\n        return 'G';\n      } else if (character === 0x36) {\n        return 'B';\n      }\n    }).join('');\n  },\n  Contrast(value) {\n    if (value === 0) {\n      return 'Normal';\n    } else if (value === 1) {\n      return 'Soft';\n    } else if (value === 2) {\n      return 'Hard';\n    }\n    return 'Unknown';\n  },\n  CustomRendered(value) {\n    if (value === 0) {\n      return 'Normal process';\n    } else if (value === 1) {\n      return 'Custom process';\n    }\n    return 'Unknown';\n  },\n  ExposureMode(value) {\n    if (value === 0) {\n      return 'Auto exposure';\n    } else if (value === 1) {\n      return 'Manual exposure';\n    } else if (value === 2) {\n      return 'Auto bracket';\n    }\n    return 'Unknown';\n  },\n  ExposureProgram(value) {\n    if (value === 0) {\n      return 'Undefined';\n    } else if (value === 1) {\n      return 'Manual';\n    } else if (value === 2) {\n      return 'Normal program';\n    } else if (value === 3) {\n      return 'Aperture priority';\n    } else if (value === 4) {\n      return 'Shutter priority';\n    } else if (value === 5) {\n      return 'Creative program';\n    } else if (value === 6) {\n      return 'Action program';\n    } else if (value === 7) {\n      return 'Portrait mode';\n    } else if (value === 8) {\n      return 'Landscape mode';\n    } else if (value === 9) {\n      return 'Bulb';\n    }\n    return 'Unknown';\n  },\n  ExposureTime(value) {\n    if (value[0] / value[1] > 0.25) {\n      const decimal = value[0] / value[1];\n      if (Number.isInteger(decimal)) {\n        return '' + decimal;\n      }\n      return decimal.toFixed(1);\n    }\n    if (value[0] !== 0) {\n      return `1/${Math.round(value[1] / value[0])}`;\n    }\n    return `0/${value[1]}`;\n  },\n  FNumber: value => `f/${value[0] / value[1]}`,\n  FocalLength: value => value[0] / value[1] + ' mm',\n  FocalPlaneResolutionUnit(value) {\n    if (value === 2) {\n      return 'inches';\n    } else if (value === 3) {\n      return 'centimeters';\n    }\n    return 'Unknown';\n  },\n  LightSource: value => {\n    if (value === 1) {\n      return 'Daylight';\n    } else if (value === 2) {\n      return 'Fluorescent';\n    } else if (value === 3) {\n      return 'Tungsten (incandescent light)';\n    } else if (value === 4) {\n      return 'Flash';\n    } else if (value === 9) {\n      return 'Fine weather';\n    } else if (value === 10) {\n      return 'Cloudy weather';\n    } else if (value === 11) {\n      return 'Shade';\n    } else if (value === 12) {\n      return 'Daylight fluorescent (D 5700 – 7100K)';\n    } else if (value === 13) {\n      return 'Day white fluorescent (N 4600 – 5400K)';\n    } else if (value === 14) {\n      return 'Cool white fluorescent (W 3900 – 4500K)';\n    } else if (value === 15) {\n      return 'White fluorescent (WW 3200 – 3700K)';\n    } else if (value === 17) {\n      return 'Standard light A';\n    } else if (value === 18) {\n      return 'Standard light B';\n    } else if (value === 19) {\n      return 'Standard light C';\n    } else if (value === 20) {\n      return 'D55';\n    } else if (value === 21) {\n      return 'D65';\n    } else if (value === 22) {\n      return 'D75';\n    } else if (value === 23) {\n      return 'D50';\n    } else if (value === 24) {\n      return 'ISO studio tungsten';\n    } else if (value === 255) {\n      return 'Other light source';\n    }\n    return 'Unknown';\n  },\n  MeteringMode(value) {\n    if (value === 1) {\n      return 'Average';\n    } else if (value === 2) {\n      return 'CenterWeightedAverage';\n    } else if (value === 3) {\n      return 'Spot';\n    } else if (value === 4) {\n      return 'MultiSpot';\n    } else if (value === 5) {\n      return 'Pattern';\n    } else if (value === 6) {\n      return 'Partial';\n    } else if (value === 255) {\n      return 'Other';\n    }\n    return 'Unknown';\n  },\n  ResolutionUnit(value) {\n    if (value === 2) {\n      return 'inches';\n    }\n    if (value === 3) {\n      return 'centimeters';\n    }\n    return 'Unknown';\n  },\n  Saturation(value) {\n    if (value === 0) {\n      return 'Normal';\n    } else if (value === 1) {\n      return 'Low saturation';\n    } else if (value === 2) {\n      return 'High saturation';\n    }\n    return 'Unknown';\n  },\n  SceneCaptureType(value) {\n    if (value === 0) {\n      return 'Standard';\n    } else if (value === 1) {\n      return 'Landscape';\n    } else if (value === 2) {\n      return 'Portrait';\n    } else if (value === 3) {\n      return 'Night scene';\n    }\n    return 'Unknown';\n  },\n  Sharpness(value) {\n    if (value === 0) {\n      return 'Normal';\n    } else if (value === 1) {\n      return 'Soft';\n    } else if (value === 2) {\n      return 'Hard';\n    }\n    return 'Unknown';\n  },\n  ShutterSpeedValue(value) {\n    const denominator = Math.pow(2, value[0] / value[1]);\n    if (denominator <= 1) {\n      return `${Math.round(1 / denominator)}`;\n    }\n    return `1/${Math.round(denominator)}`;\n  },\n  WhiteBalance(value) {\n    if (value === 0) {\n      return 'Auto white balance';\n    } else if (value === 1) {\n      return 'Manual white balance';\n    }\n    return 'Unknown';\n  },\n  XResolution: value => '' + Math.round(value[0] / value[1]),\n  YResolution: value => '' + Math.round(value[0] / value[1])\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\nexport default {\n  0x000b: 'ProcessingSoftware',\n  0x00fe: {\n    name: 'SubfileType',\n    description: value => ({\n      0x0: 'Full-resolution image',\n      0x1: 'Reduced-resolution image',\n      0x2: 'Single page of multi-page image',\n      0x3: 'Single page of multi-page reduced-resolution image',\n      0x4: 'Transparency mask',\n      0x5: 'Transparency mask of reduced-resolution image',\n      0x6: 'Transparency mask of multi-page image',\n      0x7: 'Transparency mask of reduced-resolution multi-page image',\n      0x10001: 'Alternate reduced-resolution image',\n      0xffffffff: 'Invalid'\n    })[value] || 'Unknown'\n  },\n  0x00ff: {\n    name: 'OldSubfileType',\n    description: value => ({\n      0: 'Full-resolution image',\n      1: 'Reduced-resolution image',\n      2: 'Single page of multi-page image'\n    })[value] || 'Unknown'\n  },\n  0x0100: 'ImageWidth',\n  0x0101: 'ImageLength',\n  0x0102: 'BitsPerSample',\n  0x0103: 'Compression',\n  0x0106: 'PhotometricInterpretation',\n  0x0107: {\n    name: 'Thresholding',\n    description: value => ({\n      1: 'No dithering or halftoning',\n      2: 'Ordered dither or halfton',\n      3: 'Randomized dither'\n    })[value] || 'Unknown'\n  },\n  0x0108: 'CellWidth',\n  0x0109: 'CellLength',\n  0x010a: {\n    name: 'FillOrder',\n    description: value => ({\n      1: 'Normal',\n      2: 'Reversed'\n    })[value] || 'Unknown'\n  },\n  0x010d: 'DocumentName',\n  0x010e: 'ImageDescription',\n  0x010f: 'Make',\n  0x0110: 'Model',\n  0x0111: 'StripOffsets',\n  0x0112: {\n    name: 'Orientation',\n    description: value => {\n      if (value === 1) {\n        return 'top-left';\n      }\n      if (value === 2) {\n        return 'top-right';\n      }\n      if (value === 3) {\n        return 'bottom-right';\n      }\n      if (value === 4) {\n        return 'bottom-left';\n      }\n      if (value === 5) {\n        return 'left-top';\n      }\n      if (value === 6) {\n        return 'right-top';\n      }\n      if (value === 7) {\n        return 'right-bottom';\n      }\n      if (value === 8) {\n        return 'left-bottom';\n      }\n      return 'Undefined';\n    }\n  },\n  0x0115: 'SamplesPerPixel',\n  0x0116: 'RowsPerStrip',\n  0x0117: 'StripByteCounts',\n  0x0118: 'MinSampleValue',\n  0x0119: 'MaxSampleValue',\n  0x011a: {\n    'name': 'XResolution',\n    'description': TagNamesCommon.XResolution\n  },\n  0x011b: {\n    'name': 'YResolution',\n    'description': TagNamesCommon.YResolution\n  },\n  0x011c: 'PlanarConfiguration',\n  0x011d: 'PageName',\n  0x011e: {\n    'name': 'XPosition',\n    'description': value => {\n      return '' + Math.round(value[0] / value[1]);\n    }\n  },\n  0x011f: {\n    'name': 'YPosition',\n    'description': value => {\n      return '' + Math.round(value[0] / value[1]);\n    }\n  },\n  0x0122: {\n    name: 'GrayResponseUnit',\n    description: value => ({\n      1: '0.1',\n      2: '0.001',\n      3: '0.0001',\n      4: '1e-05',\n      5: '1e-06'\n    })[value] || 'Unknown'\n  },\n  0x0128: {\n    name: 'ResolutionUnit',\n    description: TagNamesCommon.ResolutionUnit\n  },\n  0x0129: 'PageNumber',\n  0x012d: 'TransferFunction',\n  0x0131: 'Software',\n  0x0132: 'DateTime',\n  0x013b: 'Artist',\n  0x013c: 'HostComputer',\n  0x013d: 'Predictor',\n  0x013e: {\n    'name': 'WhitePoint',\n    'description': values => {\n      return values.map(value => `${value[0]}/${value[1]}`).join(', ');\n    }\n  },\n  0x013f: {\n    'name': 'PrimaryChromaticities',\n    'description': values => {\n      return values.map(value => `${value[0]}/${value[1]}`).join(', ');\n    }\n  },\n  0x0141: 'HalftoneHints',\n  0x0142: 'TileWidth',\n  0x0143: 'TileLength',\n  0x014a: 'A100DataOffset',\n  0x014c: {\n    name: 'InkSet',\n    description: value => ({\n      1: 'CMYK',\n      2: 'Not CMYK'\n    })[value] || 'Unknown'\n  },\n  0x0151: 'TargetPrinter',\n  0x0152: {\n    name: 'ExtraSamples',\n    description: value => ({\n      0: 'Unspecified',\n      1: 'Associated Alpha',\n      2: 'Unassociated Alpha'\n    })[value] || 'Unknown'\n  },\n  0x0153: {\n    name: 'SampleFormat',\n    description: value => {\n      const formats = {\n        1: 'Unsigned',\n        2: 'Signed',\n        3: 'Float',\n        4: 'Undefined',\n        5: 'Complex int',\n        6: 'Complex float'\n      };\n      if (!Array.isArray(value)) {\n        return 'Unknown';\n      }\n      return value.map(sample => formats[sample] || 'Unknown').join(', ');\n    }\n  },\n  0x0201: 'JPEGInterchangeFormat',\n  0x0202: 'JPEGInterchangeFormatLength',\n  0x0211: {\n    'name': 'YCbCrCoefficients',\n    'description': values => {\n      return values.map(value => '' + value[0] / value[1]).join('/');\n    }\n  },\n  0x0212: 'YCbCrSubSampling',\n  0x0213: {\n    name: 'YCbCrPositioning',\n    description: value => {\n      if (value === 1) {\n        return 'centered';\n      }\n      if (value === 2) {\n        return 'co-sited';\n      }\n      return 'undefined ' + value;\n    }\n  },\n  0x0214: {\n    'name': 'ReferenceBlackWhite',\n    'description': values => {\n      return values.map(value => '' + value[0] / value[1]).join(', ');\n    }\n  },\n  0x02bc: 'ApplicationNotes',\n  0x4746: 'Rating',\n  0x4749: 'RatingPercent',\n  0x8298: {\n    name: 'Copyright',\n    description: value => value.join('; ')\n  },\n  0x830e: 'PixelScale',\n  0x83bb: 'IPTC-NAA',\n  0x8480: 'IntergraphMatrix',\n  0x8482: 'ModelTiePoint',\n  0x8546: 'SEMInfo',\n  0x85d8: 'ModelTransform',\n  0x8649: 'PhotoshopSettings',\n  0x8769: 'Exif IFD Pointer',\n  0x8773: 'ICC_Profile',\n  0x87af: 'GeoTiffDirectory',\n  0x87b0: 'GeoTiffDoubleParams',\n  0x87b1: 'GeoTiffAsciiParams',\n  0x8825: 'GPS Info IFD Pointer',\n  0x9c9b: 'XPTitle',\n  0x9c9c: 'XPComment',\n  0x9c9d: 'XPAuthor',\n  0x9c9e: 'XPKeywords',\n  0x9c9f: 'XPSubject',\n  0xa480: 'GDALMetadata',\n  0xa481: 'GDALNoData',\n  0xc4a5: 'PrintIM',\n  0xc613: 'DNGBackwardVersion',\n  0xc614: 'UniqueCameraModel',\n  0xc615: 'LocalizedCameraModel',\n  0xc621: 'ColorMatrix1',\n  0xc622: 'ColorMatrix2',\n  0xc623: 'CameraCalibration1',\n  0xc624: 'CameraCalibration2',\n  0xc625: 'ReductionMatrix1',\n  0xc626: 'ReductionMatrix2',\n  0xc627: 'AnalogBalance',\n  0xc628: 'AsShotNeutral',\n  0xc629: 'AsShotWhiteXY',\n  0xc62a: 'BaselineExposure',\n  0xc62b: 'BaselineNoise',\n  0xc62c: 'BaselineSharpness',\n  0xc62e: 'LinearResponseLimit',\n  0xc62f: 'CameraSerialNumber',\n  0xc630: 'DNGLensInfo',\n  0xc633: 'ShadowScale',\n  0xc635: {\n    name: 'MakerNoteSafety',\n    description: value => ({\n      0: 'Unsafe',\n      1: 'Safe'\n    })[value] || 'Unknown'\n  },\n  0xc65a: {\n    name: 'CalibrationIlluminant1',\n    description: TagNamesCommon['LightSource']\n  },\n  0xc65b: {\n    name: 'CalibrationIlluminant2',\n    description: TagNamesCommon['LightSource']\n  },\n  0xc65d: 'RawDataUniqueID',\n  0xc68b: 'OriginalRawFileName',\n  0xc68c: 'OriginalRawFileData',\n  0xc68f: 'AsShotICCProfile',\n  0xc690: 'AsShotPreProfileMatrix',\n  0xc691: 'CurrentICCProfile',\n  0xc692: 'CurrentPreProfileMatrix',\n  0xc6bf: 'ColorimetricReference',\n  0xc6c5: 'SRawType',\n  0xc6d2: 'PanasonicTitle',\n  0xc6d3: 'PanasonicTitle2',\n  0xc6f3: 'CameraCalibrationSig',\n  0xc6f4: 'ProfileCalibrationSig',\n  0xc6f5: 'ProfileIFD',\n  0xc6f6: 'AsShotProfileName',\n  0xc6f8: 'ProfileName',\n  0xc6f9: 'ProfileHueSatMapDims',\n  0xc6fa: 'ProfileHueSatMapData1',\n  0xc6fb: 'ProfileHueSatMapData2',\n  0xc6fc: 'ProfileToneCurve',\n  0xc6fd: {\n    name: 'ProfileEmbedPolicy',\n    description: value => ({\n      0: 'Allow Copying',\n      1: 'Embed if Used',\n      2: 'Never Embed',\n      3: 'No Restrictions'\n    })[value] || 'Unknown'\n  },\n  0xc6fe: 'ProfileCopyright',\n  0xc714: 'ForwardMatrix1',\n  0xc715: 'ForwardMatrix2',\n  0xc716: 'PreviewApplicationName',\n  0xc717: 'PreviewApplicationVersion',\n  0xc718: 'PreviewSettingsName',\n  0xc719: 'PreviewSettingsDigest',\n  0xc71a: {\n    name: 'PreviewColorSpace',\n    description: value => ({\n      1: 'Gray Gamma 2.2',\n      2: 'sRGB',\n      3: 'Adobe RGB',\n      4: 'ProPhoto RGB'\n    })[value] || 'Unknown'\n  },\n  0xc71b: 'PreviewDateTime',\n  0xc71c: 'RawImageDigest',\n  0xc71d: 'OriginalRawFileDigest',\n  0xc725: 'ProfileLookTableDims',\n  0xc726: 'ProfileLookTableData',\n  0xc763: 'TimeCodes',\n  0xc764: 'FrameRate',\n  0xc772: 'TStop',\n  0xc789: 'ReelName',\n  0xc791: 'OriginalDefaultFinalSize',\n  0xc792: 'OriginalBestQualitySize',\n  0xc793: 'OriginalDefaultCropSize',\n  0xc7a1: 'CameraLabel',\n  0xc7a3: {\n    name: 'ProfileHueSatMapEncoding',\n    description: value => ({\n      0: 'Linear',\n      1: 'sRGB'\n    })[value] || 'Unknown'\n  },\n  0xc7a4: {\n    name: 'ProfileLookTableEncoding',\n    description: value => ({\n      0: 'Linear',\n      1: 'sRGB'\n    })[value] || 'Unknown'\n  },\n  0xc7a5: 'BaselineExposureOffset',\n  0xc7a6: {\n    name: 'DefaultBlackRender',\n    description: value => ({\n      0: 'Auto',\n      1: 'None'\n    })[value] || 'Unknown'\n  },\n  0xc7a7: 'NewRawImageDigest',\n  0xc7a8: 'RawToPreviewGain'\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringValue, getEncodedString } from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\nexport default {\n  0x829a: {\n    'name': 'ExposureTime',\n    'description': TagNamesCommon.ExposureTime\n  },\n  0x829d: {\n    'name': 'FNumber',\n    'description': TagNamesCommon.FNumber\n  },\n  0x8822: {\n    'name': 'ExposureProgram',\n    'description': TagNamesCommon.ExposureProgram\n  },\n  0x8824: 'SpectralSensitivity',\n  0x8827: 'ISOSpeedRatings',\n  0x8828: {\n    'name': 'OECF',\n    'description': () => '[Raw OECF table data]'\n  },\n  0x882a: 'TimeZoneOffset',\n  0x882b: 'SelfTimerMode',\n  0x8830: {\n    name: 'SensitivityType',\n    description: value => ({\n      1: 'Standard Output Sensitivity',\n      2: 'Recommended Exposure Index',\n      3: 'ISO Speed',\n      4: 'Standard Output Sensitivity and Recommended Exposure Index',\n      5: 'Standard Output Sensitivity and ISO Speed',\n      6: 'Recommended Exposure Index and ISO Speed',\n      7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n    })[value] || 'Unknown'\n  },\n  0x8831: 'StandardOutputSensitivity',\n  0x8832: 'RecommendedExposureIndex',\n  0x8833: 'ISOSpeed',\n  0x8834: 'ISOSpeedLatitudeyyy',\n  0x8835: 'ISOSpeedLatitudezzz',\n  0x9000: {\n    'name': 'ExifVersion',\n    'description': value => getStringValue(value)\n  },\n  0x9003: 'DateTimeOriginal',\n  0x9004: 'DateTimeDigitized',\n  0x9009: 'GooglePlusUploadCode',\n  0x9010: 'OffsetTime',\n  0x9011: 'OffsetTimeOriginal',\n  0x9012: 'OffsetTimeDigitized',\n  0x9101: {\n    'name': 'ComponentsConfiguration',\n    'description': TagNamesCommon.ComponentsConfiguration\n  },\n  0x9102: 'CompressedBitsPerPixel',\n  0x9201: {\n    'name': 'ShutterSpeedValue',\n    'description': TagNamesCommon.ShutterSpeedValue\n  },\n  0x9202: {\n    'name': 'ApertureValue',\n    'description': TagNamesCommon.ApertureValue\n  },\n  0x9203: 'BrightnessValue',\n  0x9204: 'ExposureBiasValue',\n  0x9205: {\n    'name': 'MaxApertureValue',\n    'description': value => {\n      return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n    }\n  },\n  0x9206: {\n    'name': 'SubjectDistance',\n    'description': value => value[0] / value[1] + ' m'\n  },\n  0x9207: {\n    'name': 'MeteringMode',\n    'description': TagNamesCommon.MeteringMode\n  },\n  0x9208: {\n    'name': 'LightSource',\n    description: TagNamesCommon.LightSource\n  },\n  0x9209: {\n    'name': 'Flash',\n    'description': value => {\n      if (value === 0x00) {\n        return 'Flash did not fire';\n      } else if (value === 0x01) {\n        return 'Flash fired';\n      } else if (value === 0x05) {\n        return 'Strobe return light not detected';\n      } else if (value === 0x07) {\n        return 'Strobe return light detected';\n      } else if (value === 0x09) {\n        return 'Flash fired, compulsory flash mode';\n      } else if (value === 0x0d) {\n        return 'Flash fired, compulsory flash mode, return light not detected';\n      } else if (value === 0x0f) {\n        return 'Flash fired, compulsory flash mode, return light detected';\n      } else if (value === 0x10) {\n        return 'Flash did not fire, compulsory flash mode';\n      } else if (value === 0x18) {\n        return 'Flash did not fire, auto mode';\n      } else if (value === 0x19) {\n        return 'Flash fired, auto mode';\n      } else if (value === 0x1d) {\n        return 'Flash fired, auto mode, return light not detected';\n      } else if (value === 0x1f) {\n        return 'Flash fired, auto mode, return light detected';\n      } else if (value === 0x20) {\n        return 'No flash function';\n      } else if (value === 0x41) {\n        return 'Flash fired, red-eye reduction mode';\n      } else if (value === 0x45) {\n        return 'Flash fired, red-eye reduction mode, return light not detected';\n      } else if (value === 0x47) {\n        return 'Flash fired, red-eye reduction mode, return light detected';\n      } else if (value === 0x49) {\n        return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n      } else if (value === 0x4d) {\n        return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n      } else if (value === 0x4f) {\n        return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n      } else if (value === 0x59) {\n        return 'Flash fired, auto mode, red-eye reduction mode';\n      } else if (value === 0x5d) {\n        return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n      } else if (value === 0x5f) {\n        return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n      }\n      return 'Unknown';\n    }\n  },\n  0x920a: {\n    'name': 'FocalLength',\n    'description': TagNamesCommon.FocalLength\n  },\n  0x9211: 'ImageNumber',\n  0x9212: {\n    name: 'SecurityClassification',\n    description: value => ({\n      'C': 'Confidential',\n      'R': 'Restricted',\n      'S': 'Secret',\n      'T': 'Top Secret',\n      'U': 'Unclassified'\n    })[value] || 'Unknown'\n  },\n  0x9213: 'ImageHistory',\n  0x9214: {\n    'name': 'SubjectArea',\n    'description': value => {\n      if (value.length === 2) {\n        return `Location; X: ${value[0]}, Y: ${value[1]}`;\n      } else if (value.length === 3) {\n        return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n      } else if (value.length === 4) {\n        return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n      }\n      return 'Unknown';\n    }\n  },\n  0x927c: {\n    'name': 'MakerNote',\n    'description': () => '[Raw maker note data]'\n  },\n  0x9286: {\n    'name': 'UserComment',\n    'description': getEncodedString\n  },\n  0x9290: 'SubSecTime',\n  0x9291: 'SubSecTimeOriginal',\n  0x9292: 'SubSecTimeDigitized',\n  0x935c: 'ImageSourceData',\n  0x9400: {\n    'name': 'AmbientTemperature',\n    'description': value => value[0] / value[1] + ' °C'\n  },\n  0x9401: {\n    'name': 'Humidity',\n    'description': value => value[0] / value[1] + ' %'\n  },\n  0x9402: {\n    'name': 'Pressure',\n    'description': value => value[0] / value[1] + ' hPa'\n  },\n  0x9403: {\n    'name': 'WaterDepth',\n    'description': value => value[0] / value[1] + ' m'\n  },\n  0x9404: {\n    'name': 'Acceleration',\n    'description': value => value[0] / value[1] + ' mGal'\n  },\n  0x9405: {\n    'name': 'CameraElevationAngle',\n    'description': value => value[0] / value[1] + ' °'\n  },\n  0xa000: {\n    'name': 'FlashpixVersion',\n    'description': value => value.map(charCode => String.fromCharCode(charCode)).join('')\n  },\n  0xa001: {\n    'name': 'ColorSpace',\n    'description': TagNamesCommon.ColorSpace\n  },\n  0xa002: 'PixelXDimension',\n  0xa003: 'PixelYDimension',\n  0xa004: 'RelatedSoundFile',\n  0xa005: 'Interoperability IFD Pointer',\n  0xa20b: 'FlashEnergy',\n  0xa20c: {\n    'name': 'SpatialFrequencyResponse',\n    'description': () => '[Raw SFR table data]'\n  },\n  0xa20e: 'FocalPlaneXResolution',\n  0xa20f: 'FocalPlaneYResolution',\n  0xa210: {\n    'name': 'FocalPlaneResolutionUnit',\n    'description': TagNamesCommon.FocalPlaneResolutionUnit\n  },\n  0xa214: {\n    'name': 'SubjectLocation',\n    'description': ([x, y]) => `X: ${x}, Y: ${y}`\n  },\n  0xa215: 'ExposureIndex',\n  0xa217: {\n    'name': 'SensingMethod',\n    'description': value => {\n      if (value === 1) {\n        return 'Undefined';\n      } else if (value === 2) {\n        return 'One-chip color area sensor';\n      } else if (value === 3) {\n        return 'Two-chip color area sensor';\n      } else if (value === 4) {\n        return 'Three-chip color area sensor';\n      } else if (value === 5) {\n        return 'Color sequential area sensor';\n      } else if (value === 7) {\n        return 'Trilinear sensor';\n      } else if (value === 8) {\n        return 'Color sequential linear sensor';\n      }\n      return 'Unknown';\n    }\n  },\n  0xa300: {\n    'name': 'FileSource',\n    'description': value => {\n      if (value === 3) {\n        return 'DSC';\n      }\n      return 'Unknown';\n    }\n  },\n  0xa301: {\n    'name': 'SceneType',\n    'description': value => {\n      if (value === 1) {\n        return 'A directly photographed image';\n      }\n      return 'Unknown';\n    }\n  },\n  0xa302: {\n    'name': 'CFAPattern',\n    'description': () => '[Raw CFA pattern table data]'\n  },\n  0xa401: {\n    'name': 'CustomRendered',\n    'description': TagNamesCommon.CustomRendered\n  },\n  0xa402: {\n    'name': 'ExposureMode',\n    'description': TagNamesCommon.ExposureMode\n  },\n  0xa403: {\n    'name': 'WhiteBalance',\n    'description': TagNamesCommon.WhiteBalance\n  },\n  0xa404: {\n    'name': 'DigitalZoomRatio',\n    'description': value => {\n      if (value[0] === 0) {\n        return 'Digital zoom was not used';\n      }\n      return '' + value[0] / value[1];\n    }\n  },\n  0xa405: {\n    'name': 'FocalLengthIn35mmFilm',\n    'description': value => {\n      if (value === 0) {\n        return 'Unknown';\n      }\n      return value;\n    }\n  },\n  0xa406: {\n    'name': 'SceneCaptureType',\n    'description': TagNamesCommon.SceneCaptureType\n  },\n  0xa407: {\n    'name': 'GainControl',\n    'description': value => {\n      if (value === 0) {\n        return 'None';\n      } else if (value === 1) {\n        return 'Low gain up';\n      } else if (value === 2) {\n        return 'High gain up';\n      } else if (value === 3) {\n        return 'Low gain down';\n      } else if (value === 4) {\n        return 'High gain down';\n      }\n      return 'Unknown';\n    }\n  },\n  0xa408: {\n    'name': 'Contrast',\n    'description': TagNamesCommon.Contrast\n  },\n  0xa409: {\n    'name': 'Saturation',\n    'description': TagNamesCommon.Saturation\n  },\n  0xa40a: {\n    'name': 'Sharpness',\n    'description': TagNamesCommon.Sharpness\n  },\n  0xa40b: {\n    'name': 'DeviceSettingDescription',\n    'description': () => '[Raw device settings table data]'\n  },\n  0xa40c: {\n    'name': 'SubjectDistanceRange',\n    'description': value => {\n      if (value === 1) {\n        return 'Macro';\n      } else if (value === 2) {\n        return 'Close view';\n      } else if (value === 3) {\n        return 'Distant view';\n      }\n      return 'Unknown';\n    }\n  },\n  0xa420: 'ImageUniqueID',\n  0xa430: 'CameraOwnerName',\n  0xa431: 'BodySerialNumber',\n  0xa432: {\n    'name': 'LensSpecification',\n    'description': value => {\n      const focalLengthFrom = parseFloat((value[0][0] / value[0][1]).toFixed(5));\n      const focalLengthTo = parseFloat((value[1][0] / value[1][1]).toFixed(5));\n      const focalLengths = `${focalLengthFrom}-${focalLengthTo} mm`;\n      if (value[3][1] === 0) {\n        return `${focalLengths} f/?`;\n      }\n      const maxAperture = 1 / (value[2][1] / value[2][1] / (value[3][0] / value[3][1]));\n      return `${focalLengths} f/${parseFloat(maxAperture.toFixed(5))}`;\n    }\n  },\n  0xa433: 'LensMake',\n  0xa434: 'LensModel',\n  0xa435: 'LensSerialNumber',\n  0xa460: {\n    name: 'CompositeImage',\n    description: value => ({\n      1: 'Not a Composite Image',\n      2: 'General Composite Image',\n      3: 'Composite Image Captured While Shooting'\n    })[value] || 'Unknown'\n  },\n  0xa461: 'SourceImageNumberOfCompositeImage',\n  0xa462: 'SourceExposureTimesOfCompositeImage',\n  0xa500: 'Gamma',\n  0xea1c: 'Padding',\n  0xea1d: 'OffsetSchema',\n  0xfde8: 'OwnerName',\n  0xfde9: 'SerialNumber',\n  0xfdea: 'Lens',\n  0xfe4c: 'RawFile',\n  0xfe4d: 'Converter',\n  0xfe4e: 'WhiteBalance',\n  0xfe51: 'Exposure',\n  0xfe52: 'Shadows',\n  0xfe53: 'Brightness',\n  0xfe54: 'Contrast',\n  0xfe55: 'Saturation',\n  0xfe56: 'Sharpness',\n  0xfe57: 'Smoothness',\n  0xfe58: 'MoireFilter'\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getEncodedString, getCalculatedGpsValue } from './tag-names-utils.js';\nexport default {\n  0x0000: {\n    'name': 'GPSVersionID',\n    'description': value => {\n      if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n        return 'Version 2.2';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0001: {\n    'name': 'GPSLatitudeRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'N') {\n        return 'North latitude';\n      } else if (ref === 'S') {\n        return 'South latitude';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0002: {\n    'name': 'GPSLatitude',\n    'description': getCalculatedGpsValue\n  },\n  0x0003: {\n    'name': 'GPSLongitudeRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'E') {\n        return 'East longitude';\n      } else if (ref === 'W') {\n        return 'West longitude';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0004: {\n    'name': 'GPSLongitude',\n    'description': getCalculatedGpsValue\n  },\n  0x0005: {\n    'name': 'GPSAltitudeRef',\n    'description': value => {\n      if (value === 0) {\n        return 'Sea level';\n      } else if (value === 1) {\n        return 'Sea level reference (negative value)';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0006: {\n    'name': 'GPSAltitude',\n    'description': value => {\n      return value[0] / value[1] + ' m';\n    }\n  },\n  0x0007: {\n    'name': 'GPSTimeStamp',\n    'description': values => {\n      return values.map(([numerator, denominator]) => {\n        const num = numerator / denominator;\n        if (/^\\d(\\.|$)/.test(`${num}`)) {\n          return `0${num}`;\n        }\n        return num;\n      }).join(':');\n    }\n  },\n  0x0008: 'GPSSatellites',\n  0x0009: {\n    'name': 'GPSStatus',\n    'description': value => {\n      const status = value.join('');\n      if (status === 'A') {\n        return 'Measurement in progress';\n      } else if (status === 'V') {\n        return 'Measurement Interoperability';\n      }\n      return 'Unknown';\n    }\n  },\n  0x000a: {\n    'name': 'GPSMeasureMode',\n    'description': value => {\n      const mode = value.join('');\n      if (mode === '2') {\n        return '2-dimensional measurement';\n      } else if (mode === '3') {\n        return '3-dimensional measurement';\n      }\n      return 'Unknown';\n    }\n  },\n  0x000b: 'GPSDOP',\n  0x000c: {\n    'name': 'GPSSpeedRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'K') {\n        return 'Kilometers per hour';\n      } else if (ref === 'M') {\n        return 'Miles per hour';\n      } else if (ref === 'N') {\n        return 'Knots';\n      }\n      return 'Unknown';\n    }\n  },\n  0x000d: 'GPSSpeed',\n  0x000e: {\n    'name': 'GPSTrackRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'T') {\n        return 'True direction';\n      } else if (ref === 'M') {\n        return 'Magnetic direction';\n      }\n      return 'Unknown';\n    }\n  },\n  0x000f: 'GPSTrack',\n  0x0010: {\n    'name': 'GPSImgDirectionRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'T') {\n        return 'True direction';\n      } else if (ref === 'M') {\n        return 'Magnetic direction';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0011: 'GPSImgDirection',\n  0x0012: 'GPSMapDatum',\n  0x0013: {\n    'name': 'GPSDestLatitudeRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'N') {\n        return 'North latitude';\n      } else if (ref === 'S') {\n        return 'South latitude';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0014: {\n    'name': 'GPSDestLatitude',\n    'description': value => {\n      return value[0][0] / value[0][1] + value[1][0] / value[1][1] / 60 + value[2][0] / value[2][1] / 3600;\n    }\n  },\n  0x0015: {\n    'name': 'GPSDestLongitudeRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'E') {\n        return 'East longitude';\n      } else if (ref === 'W') {\n        return 'West longitude';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0016: {\n    'name': 'GPSDestLongitude',\n    'description': value => {\n      return value[0][0] / value[0][1] + value[1][0] / value[1][1] / 60 + value[2][0] / value[2][1] / 3600;\n    }\n  },\n  0x0017: {\n    'name': 'GPSDestBearingRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'T') {\n        return 'True direction';\n      } else if (ref === 'M') {\n        return 'Magnetic direction';\n      }\n      return 'Unknown';\n    }\n  },\n  0x0018: 'GPSDestBearing',\n  0x0019: {\n    'name': 'GPSDestDistanceRef',\n    'description': value => {\n      const ref = value.join('');\n      if (ref === 'K') {\n        return 'Kilometers';\n      } else if (ref === 'M') {\n        return 'Miles';\n      } else if (ref === 'N') {\n        return 'Knots';\n      }\n      return 'Unknown';\n    }\n  },\n  0x001a: 'GPSDestDistance',\n  0x001b: {\n    'name': 'GPSProcessingMethod',\n    'description': getEncodedString\n  },\n  0x001c: {\n    'name': 'GPSAreaInformation',\n    'description': getEncodedString\n  },\n  0x001d: 'GPSDateStamp',\n  0x001e: {\n    'name': 'GPSDifferential',\n    'description': value => {\n      if (value === 0) {\n        return 'Measurement without differential correction';\n      } else if (value === 1) {\n        return 'Differential correction applied';\n      }\n      return 'Unknown';\n    }\n  },\n  0x001f: 'GPSHPositioningError'\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringValue } from './tag-names-utils.js';\nexport default {\n  0x0001: 'InteroperabilityIndex',\n  0x0002: {\n    name: 'InteroperabilityVersion',\n    description: value => getStringValue(value)\n  },\n  0x1000: 'RelatedImageFileFormat',\n  0x1001: 'RelatedImageWidth',\n  0x1002: 'RelatedImageHeight'\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringValue } from './tag-names-utils.js';\nexport default {\n  0xb000: {\n    'name': 'MPFVersion',\n    'description': value => getStringValue(value)\n  },\n  0xb001: 'NumberOfImages',\n  0xb002: 'MPEntry',\n  0xb003: 'ImageUIDList',\n  0xb004: 'TotalFrames'\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { objectAssign } from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\nexport const IFD_TYPE_0TH = '0th';\nexport const IFD_TYPE_1ST = '1st';\nexport const IFD_TYPE_EXIF = 'exif';\nexport const IFD_TYPE_GPS = 'gps';\nexport const IFD_TYPE_INTEROPERABILITY = 'interoperability';\nexport const IFD_TYPE_MPF = 'mpf';\nexport default {\n  [IFD_TYPE_0TH]: tagNames0thExifIfds,\n  [IFD_TYPE_1ST]: TagNames0thIfd,\n  [IFD_TYPE_EXIF]: tagNames0thExifIfds,\n  [IFD_TYPE_GPS]: TagNamesGpsIfd,\n  [IFD_TYPE_INTEROPERABILITY]: TagNamesInteroperabilityIfd,\n  [IFD_TYPE_MPF]: Constants.USE_MPF ? TagNamesMpfIfd : {}\n};", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nconst typeSizes = {\n  1: 1,\n  // BYTE\n  2: 1,\n  // ASCII\n  3: 2,\n  // SHORT\n  4: 4,\n  // LONG\n  5: 8,\n  // RATIONAL\n  7: 1,\n  // UNDEFINED\n  9: 4,\n  // SLONG\n  10: 8,\n  // SRATIONAL\n  13: 4 // IFD\n};\nconst tagTypes = {\n  'BYTE': 1,\n  'ASCII': 2,\n  'SHORT': 3,\n  'LONG': 4,\n  'RATIONAL': 5,\n  'UNDEFINED': 7,\n  'SLONG': 9,\n  'SRATIONAL': 10,\n  'IFD': 13\n};\nexport default {\n  getAsciiValue,\n  getByteAt,\n  getAsciiAt,\n  getShortAt,\n  getLongAt,\n  getRationalAt,\n  getUndefinedAt,\n  getSlongAt,\n  getSrationalAt,\n  getIfdPointerAt,\n  typeSizes,\n  tagTypes,\n  getTypeSize\n};\nfunction getAsciiValue(charArray) {\n  return charArray.map(charCode => String.fromCharCode(charCode));\n}\nfunction getByteAt(dataView, offset) {\n  return dataView.getUint8(offset);\n}\nfunction getAsciiAt(dataView, offset) {\n  return dataView.getUint8(offset);\n}\nfunction getShortAt(dataView, offset, byteOrder) {\n  return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\nfunction getLongAt(dataView, offset, byteOrder) {\n  return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\nfunction getRationalAt(dataView, offset, byteOrder) {\n  return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\nfunction getUndefinedAt(dataView, offset) {\n  return getByteAt(dataView, offset);\n}\nfunction getSlongAt(dataView, offset, byteOrder) {\n  return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\nfunction getSrationalAt(dataView, offset, byteOrder) {\n  return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n  return getLongAt(dataView, offset, byteOrder);\n}\nfunction getTypeSize(typeName) {\n  if (tagTypes[typeName] === undefined) {\n    throw new Error('No such type found.');\n  }\n  return typeSizes[tagTypes[typeName]];\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Types from './types.js';\nimport TagNames, { IFD_TYPE_0TH, IFD_TYPE_1ST } from './tag-names.js';\nconst getTagValueAt = {\n  1: Types.getByteAt,\n  2: Types.getAsciiAt,\n  3: Types.getShortAt,\n  4: Types.getLongAt,\n  5: Types.getRationalAt,\n  7: Types.getUndefinedAt,\n  9: Types.getSlongAt,\n  10: Types.getSrationalAt,\n  13: Types.getIfdPointerAt\n};\nexport function get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n  return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\nexport function readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n  const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n  const FIELD_SIZE = 12;\n  const tags = {};\n  const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n  offset += FIELD_COUNT_SIZE;\n  for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n    if (offset + FIELD_SIZE > dataView.byteLength) {\n      break;\n    }\n    const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n    if (tag !== undefined) {\n      tags[tag.name] = {\n        'id': tag.id,\n        'value': tag.value,\n        'description': tag.description\n      };\n    }\n    offset += FIELD_SIZE;\n  }\n  if (Constants.USE_THUMBNAIL && offset < dataView.byteLength - Types.getTypeSize('LONG')) {\n    const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n    if (nextIfdOffset !== 0 && ifdType === IFD_TYPE_0TH) {\n      tags['Thumbnail'] = readIfd(dataView, IFD_TYPE_1ST, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n    }\n  }\n  return tags;\n}\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n  if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n    return Types.getShortAt(dataView, offset, byteOrder);\n  }\n  return 0;\n}\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n  const TAG_CODE_IPTC_NAA = 0x83bb;\n  const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n  const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n  const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n  const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n  const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n  const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n  let tagValue;\n  if (Types.typeSizes[tagType] === undefined || !includeUnknown && TagNames[ifdType][tagCode] === undefined) {\n    return undefined;\n  }\n  if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n    tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n  } else {\n    const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n    if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n      const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n      tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n    } else {\n      tagValue = '<faulty value>';\n    }\n  }\n  if (tagType === Types.tagTypes['ASCII']) {\n    tagValue = splitNullSeparatedAsciiString(tagValue);\n    tagValue = decodeAsciiValue(tagValue);\n  }\n  let tagName = `undefined-${tagCode}`;\n  let tagDescription = tagValue;\n  if (TagNames[ifdType][tagCode] !== undefined) {\n    if (TagNames[ifdType][tagCode]['name'] !== undefined && TagNames[ifdType][tagCode]['description'] !== undefined) {\n      tagName = TagNames[ifdType][tagCode]['name'];\n      try {\n        tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n      } catch (error) {\n        tagDescription = getDescriptionFromTagValue(tagValue);\n      }\n    } else if (tagType === Types.tagTypes['RATIONAL'] || tagType === Types.tagTypes['SRATIONAL']) {\n      tagName = TagNames[ifdType][tagCode];\n      tagDescription = '' + tagValue[0] / tagValue[1];\n    } else {\n      tagName = TagNames[ifdType][tagCode];\n      tagDescription = getDescriptionFromTagValue(tagValue);\n    }\n  }\n  return {\n    id: tagCode,\n    name: tagName,\n    value: tagValue,\n    description: tagDescription\n  };\n}\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n  return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n  let value = [];\n  if (forceByteType) {\n    count = count * Types.typeSizes[type];\n    type = Types.tagTypes['BYTE'];\n  }\n  for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n    value.push(getTagValueAt[type](dataView, offset, byteOrder));\n    offset += Types.typeSizes[type];\n  }\n  if (type === Types.tagTypes['ASCII']) {\n    value = Types.getAsciiValue(value);\n  } else if (value.length === 1) {\n    value = value[0];\n  }\n  return value;\n}\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n  return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\nfunction splitNullSeparatedAsciiString(string) {\n  const tagValue = [];\n  let i = 0;\n  for (let j = 0; j < string.length; j++) {\n    if (string[j] === '\\x00') {\n      i++;\n      continue;\n    }\n    if (tagValue[i] === undefined) {\n      tagValue[i] = '';\n    }\n    tagValue[i] += string[j];\n  }\n  return tagValue;\n}\nfunction decodeAsciiValue(asciiValue) {\n  try {\n    return asciiValue.map(value => decodeURIComponent(escape(value)));\n  } catch (error) {\n    return asciiValue;\n  }\n}\nfunction getDescriptionFromTagValue(tagValue) {\n  if (tagValue instanceof Array) {\n    return tagValue.join(', ');\n  }\n  return tagValue;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { objectAssign } from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport { IFD_TYPE_0TH, IFD_TYPE_EXIF, IFD_TYPE_GPS, IFD_TYPE_INTEROPERABILITY } from './tag-names.js';\nimport { readIfd, get0thIfdOffset } from './tags-helpers.js';\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\nexport default {\n  read\n};\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n  const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n  let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  return tags;\n}\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  return readIfd(dataView, IFD_TYPE_0TH, tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n    return objectAssign(tags, readIfd(dataView, IFD_TYPE_EXIF, tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n  }\n  return tags;\n}\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n    return objectAssign(tags, readIfd(dataView, IFD_TYPE_GPS, tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n  }\n  return tags;\n}\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n    return objectAssign(tags, readIfd(dataView, IFD_TYPE_INTEROPERABILITY, tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n  }\n  return tags;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport { IFD_TYPE_MPF } from './tag-names.js';\nimport { deferInit, getBase64Image } from './utils.js';\nimport { readIfd, get0thIfdOffset } from './tags-helpers.js';\nexport default {\n  read\n};\nconst ENTRY_SIZE = 16;\nfunction read(dataView, dataOffset, includeUnknown) {\n  const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n  const tags = readIfd(dataView, IFD_TYPE_MPF, dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n  return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n  if (!tags['MPEntry']) {\n    return tags;\n  }\n  const images = [];\n  for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n    images[i] = {};\n    const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n    images[i]['ImageFlags'] = getImageFlags(attributes);\n    images[i]['ImageFormat'] = getImageFormat(attributes);\n    images[i]['ImageType'] = getImageType(attributes);\n    const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n    images[i]['ImageSize'] = {\n      value: imageSize,\n      description: '' + imageSize\n    };\n    const imageOffset = getImageOffset(i, tags['MPEntry'], byteOrder, dataOffset);\n    images[i]['ImageOffset'] = {\n      value: imageOffset,\n      description: '' + imageOffset\n    };\n    const dependentImage1EntryNumber = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n    images[i]['DependentImage1EntryNumber'] = {\n      value: dependentImage1EntryNumber,\n      description: '' + dependentImage1EntryNumber\n    };\n    const dependentImage2EntryNumber = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n    images[i]['DependentImage2EntryNumber'] = {\n      value: dependentImage2EntryNumber,\n      description: '' + dependentImage2EntryNumber\n    };\n    images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n    deferInit(images[i], 'base64', function () {\n      return getBase64Image(this.image);\n    });\n  }\n  tags['Images'] = images;\n  return tags;\n}\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n  if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n      value += entries[offset + i] << 8 * i;\n    }\n    return value;\n  }\n  let value = 0;\n  for (let i = 0; i < size; i++) {\n    value += entries[offset + i] << 8 * (size - 1 - i);\n  }\n  return value;\n}\nfunction getImageFlags(attributes) {\n  const flags = [attributes >> 31 & 0x1, attributes >> 30 & 0x1, attributes >> 29 & 0x1];\n  const flagsDescription = [];\n  if (flags[0]) {\n    flagsDescription.push('Dependent Parent Image');\n  }\n  if (flags[1]) {\n    flagsDescription.push('Dependent Child Image');\n  }\n  if (flags[2]) {\n    flagsDescription.push('Representative Image');\n  }\n  return {\n    value: flags,\n    description: flagsDescription.join(', ') || 'None'\n  };\n}\nfunction getImageFormat(attributes) {\n  const imageFormat = attributes >> 24 & 0x7;\n  return {\n    value: imageFormat,\n    description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n  };\n}\nfunction getImageType(attributes) {\n  const type = attributes & 0xffffff;\n  const descriptions = {\n    0x30000: 'Baseline MP Primary Image',\n    0x10001: 'Large Thumbnail (VGA equivalent)',\n    0x10002: 'Large Thumbnail (Full HD equivalent)',\n    0x20001: 'Multi-Frame Image (Panorama)',\n    0x20002: 'Multi-Frame Image (Disparity)',\n    0x20003: 'Multi-Frame Image (Multi-Angle)',\n    0x0: 'Undefined'\n  };\n  return {\n    value: type,\n    description: descriptions[type] || 'Unknown'\n  };\n}\nfunction getImageOffset(imageIndex, mpEntry, byteOrder, dataOffset) {\n  if (isFirstIndividualImage(imageIndex)) {\n    return 0;\n  }\n  return getImageNumberValue(mpEntry.value, imageIndex * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n}\nfunction isFirstIndividualImage(imageIndex) {\n  return imageIndex === 0;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nexport default {\n  read\n};\nfunction read(dataView, fileDataOffset) {\n  const length = getLength(dataView, fileDataOffset);\n  const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n  return {\n    'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n    'Image Height': getImageHeight(dataView, fileDataOffset, length),\n    'Image Width': getImageWidth(dataView, fileDataOffset, length),\n    'Color Components': numberOfColorComponents,\n    'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n  };\n}\nfunction getLength(dataView, fileDataOffset) {\n  return Types.getShortAt(dataView, fileDataOffset);\n}\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n  const OFFSET = 2;\n  const SIZE = 1;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: '' + value\n  };\n}\nfunction getImageHeight(dataView, fileDataOffset, length) {\n  const OFFSET = 3;\n  const SIZE = 2;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getImageWidth(dataView, fileDataOffset, length) {\n  const OFFSET = 5;\n  const SIZE = 2;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n  const OFFSET = 7;\n  const SIZE = 1;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: '' + value\n  };\n}\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n  const OFFSET = 8;\n  const SIZE = 3 * numberOfColorComponents;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const components = [];\n  for (let i = 0; i < numberOfColorComponents; i++) {\n    const componentOffset = fileDataOffset + OFFSET + i * 3;\n    components.push([Types.getByteAt(dataView, componentOffset), Types.getByteAt(dataView, componentOffset + 1), Types.getByteAt(dataView, componentOffset + 2)]);\n  }\n  return {\n    value: components,\n    description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n  };\n}\nfunction getComponentIds(components) {\n  const ids = {\n    0x01: 'Y',\n    0x02: 'Cb',\n    0x03: 'Cr',\n    0x04: 'I',\n    0x05: 'Q'\n  };\n  return components.map(compontent => ids[compontent[0]]).join('');\n}\nfunction getSamplingType(components) {\n  const types = {\n    0x11: '4:4:4 (1 1)',\n    0x12: '4:4:0 (1 2)',\n    0x14: '4:4:1 (1 4)',\n    0x21: '4:2:2 (2 1)',\n    0x22: '4:2:0 (2 2)',\n    0x24: '4:2:1 (2 4)',\n    0x41: '4:1:1 (4 1)',\n    0x42: '4:1:0 (4 2)'\n  };\n  if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n    return '';\n  }\n  return types[components[0][1]];\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nexport default {\n  read\n};\nfunction read(dataView, jfifDataOffset) {\n  const length = getLength(dataView, jfifDataOffset);\n  const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n  const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n  const tags = {\n    'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n    'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n    'XResolution': getXResolution(dataView, jfifDataOffset, length),\n    'YResolution': getYResolution(dataView, jfifDataOffset, length),\n    'JFIF Thumbnail Width': thumbnailWidth,\n    'JFIF Thumbnail Height': thumbnailHeight\n  };\n  if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n    const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n    if (thumbnail) {\n      tags['JFIF Thumbnail'] = thumbnail;\n    }\n  }\n  for (const tagName in tags) {\n    if (tags[tagName] === undefined) {\n      delete tags[tagName];\n    }\n  }\n  return tags;\n}\nfunction getLength(dataView, jfifDataOffset) {\n  return Types.getShortAt(dataView, jfifDataOffset);\n}\nfunction getVersion(dataView, jfifDataOffset, length) {\n  const OFFSET = 7;\n  const SIZE = 2;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n  const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n  return {\n    value: majorVersion * 0x100 + minorVersion,\n    description: majorVersion + '.' + minorVersion\n  };\n}\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n  const OFFSET = 9;\n  const SIZE = 1;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value,\n    description: getResolutionUnitDescription(value)\n  };\n}\nfunction getResolutionUnitDescription(value) {\n  if (value === 0) {\n    return 'None';\n  }\n  if (value === 1) {\n    return 'inches';\n  }\n  if (value === 2) {\n    return 'cm';\n  }\n  return 'Unknown';\n}\nfunction getXResolution(dataView, jfifDataOffset, length) {\n  const OFFSET = 10;\n  const SIZE = 2;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value,\n    description: '' + value\n  };\n}\nfunction getYResolution(dataView, jfifDataOffset, length) {\n  const OFFSET = 12;\n  const SIZE = 2;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value,\n    description: '' + value\n  };\n}\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n  const OFFSET = 14;\n  const SIZE = 1;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n  const OFFSET = 15;\n  const SIZE = 1;\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n  const OFFSET = 16;\n  if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n    return undefined;\n  }\n  const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n  return {\n    value,\n    description: '<24-bit RGB pixel data>'\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringValue } from './tag-names-utils.js';\nexport default {\n  'iptc': {\n    0x0100: {\n      'name': 'Model Version',\n      'description': value => {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0105: {\n      'name': 'Destination',\n      'repeatable': true\n    },\n    0x0114: {\n      'name': 'File Format',\n      'description': value => {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0116: {\n      'name': 'File Format Version',\n      'description': value => {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x011e: 'Service Identifier',\n    0x0128: 'Envelope Number',\n    0x0132: 'Product ID',\n    0x013c: 'Envelope Priority',\n    0x0146: {\n      'name': 'Date Sent',\n      'description': getCreationDate\n    },\n    0x0150: {\n      'name': 'Time Sent',\n      'description': getCreationTime\n    },\n    0x015a: {\n      'name': 'Coded Character Set',\n      'description': getEncodingName,\n      'encoding_name': getEncodingName\n    },\n    0x0164: 'UNO',\n    0x0178: {\n      'name': 'ARM Identifier',\n      'description': value => {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x017a: {\n      'name': 'ARM Version',\n      'description': value => {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0200: {\n      'name': 'Record Version',\n      'description': value => {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0203: 'Object Type Reference',\n    0x0204: 'Object Attribute Reference',\n    0x0205: 'Object Name',\n    0x0207: 'Edit Status',\n    0x0208: {\n      'name': 'Editorial Update',\n      'description': value => {\n        if (getStringValue(value) === '01') {\n          return 'Additional Language';\n        }\n        return 'Unknown';\n      }\n    },\n    0x020a: 'Urgency',\n    0x020c: {\n      'name': 'Subject Reference',\n      'repeatable': true,\n      'description': value => {\n        const parts = getStringValue(value).split(':');\n        return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n      }\n    },\n    0x020f: 'Category',\n    0x0214: {\n      'name': 'Supplemental Category',\n      'repeatable': true\n    },\n    0x0216: 'Fixture Identifier',\n    0x0219: {\n      'name': 'Keywords',\n      'repeatable': true\n    },\n    0x021a: {\n      'name': 'Content Location Code',\n      'repeatable': true\n    },\n    0x021b: {\n      'name': 'Content Location Name',\n      'repeatable': true\n    },\n    0x021e: 'Release Date',\n    0x0223: 'Release Time',\n    0x0225: 'Expiration Date',\n    0x0226: 'Expiration Time',\n    0x0228: 'Special Instructions',\n    0x022a: {\n      'name': 'Action Advised',\n      'description': value => {\n        const string = getStringValue(value);\n        if (string === '01') {\n          return 'Object Kill';\n        } else if (string === '02') {\n          return 'Object Replace';\n        } else if (string === '03') {\n          return 'Object Append';\n        } else if (string === '04') {\n          return 'Object Reference';\n        }\n        return 'Unknown';\n      }\n    },\n    0x022d: {\n      'name': 'Reference Service',\n      'repeatable': true\n    },\n    0x022f: {\n      'name': 'Reference Date',\n      'repeatable': true\n    },\n    0x0232: {\n      'name': 'Reference Number',\n      'repeatable': true\n    },\n    0x0237: {\n      'name': 'Date Created',\n      'description': getCreationDate\n    },\n    0x023c: {\n      'name': 'Time Created',\n      'description': getCreationTime\n    },\n    0x023e: {\n      'name': 'Digital Creation Date',\n      'description': getCreationDate\n    },\n    0x023f: {\n      'name': 'Digital Creation Time',\n      'description': getCreationTime\n    },\n    0x0241: 'Originating Program',\n    0x0246: 'Program Version',\n    0x024b: {\n      'name': 'Object Cycle',\n      'description': value => {\n        const string = getStringValue(value);\n        if (string === 'a') {\n          return 'morning';\n        } else if (string === 'p') {\n          return 'evening';\n        } else if (string === 'b') {\n          return 'both';\n        }\n        return 'Unknown';\n      }\n    },\n    0x0250: {\n      'name': 'By-line',\n      'repeatable': true\n    },\n    0x0255: {\n      'name': 'By-line Title',\n      'repeatable': true\n    },\n    0x025a: 'City',\n    0x025c: 'Sub-location',\n    0x025f: 'Province/State',\n    0x0264: 'Country/Primary Location Code',\n    0x0265: 'Country/Primary Location Name',\n    0x0267: 'Original Transmission Reference',\n    0x0269: 'Headline',\n    0x026e: 'Credit',\n    0x0273: 'Source',\n    0x0274: 'Copyright Notice',\n    0x0276: {\n      'name': 'Contact',\n      'repeatable': true\n    },\n    0x0278: 'Caption/Abstract',\n    0x027a: {\n      'name': 'Writer/Editor',\n      'repeatable': true\n    },\n    0x027d: {\n      'name': 'Rasterized Caption',\n      'description': value => value\n    },\n    0x0282: 'Image Type',\n    0x0283: {\n      'name': 'Image Orientation',\n      'description': value => {\n        const string = getStringValue(value);\n        if (string === 'P') {\n          return 'Portrait';\n        } else if (string === 'L') {\n          return 'Landscape';\n        } else if (string === 'S') {\n          return 'Square';\n        }\n        return 'Unknown';\n      }\n    },\n    0x0287: 'Language Identifier',\n    0x0296: {\n      'name': 'Audio Type',\n      'description': value => {\n        const stringValue = getStringValue(value);\n        const character0 = stringValue.charAt(0);\n        const character1 = stringValue.charAt(1);\n        let description = '';\n        if (character0 === '1') {\n          description += 'Mono';\n        } else if (character0 === '2') {\n          description += 'Stereo';\n        }\n        if (character1 === 'A') {\n          description += ', actuality';\n        } else if (character1 === 'C') {\n          description += ', question and answer session';\n        } else if (character1 === 'M') {\n          description += ', music, transmitted by itself';\n        } else if (character1 === 'Q') {\n          description += ', response to a question';\n        } else if (character1 === 'R') {\n          description += ', raw sound';\n        } else if (character1 === 'S') {\n          description += ', scener';\n        } else if (character1 === 'V') {\n          description += ', voicer';\n        } else if (character1 === 'W') {\n          description += ', wrap';\n        }\n        if (description !== '') {\n          return description;\n        }\n        return stringValue;\n      }\n    },\n    0x0297: {\n      'name': 'Audio Sampling Rate',\n      'description': value => parseInt(getStringValue(value), 10) + ' Hz'\n    },\n    0x0298: {\n      'name': 'Audio Sampling Resolution',\n      'description': value => {\n        const bits = parseInt(getStringValue(value), 10);\n        return bits + (bits === 1 ? ' bit' : ' bits');\n      }\n    },\n    0x0299: {\n      'name': 'Audio Duration',\n      'description': value => {\n        const duration = getStringValue(value);\n        if (duration.length >= 6) {\n          return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n        }\n        return duration;\n      }\n    },\n    0x029a: 'Audio Outcue',\n    0x02ba: 'Short Document ID',\n    0x02bb: 'Unique Document ID',\n    0x02bc: 'Owner ID',\n    0x02c8: {\n      'name': value => {\n        if (value.length === 2) {\n          return 'ObjectData Preview File Format';\n        }\n        return 'Record 2 destination';\n      },\n      'description': value => {\n        if (value.length === 2) {\n          const intValue = (value[0] << 8) + value[1];\n          if (intValue === 0) {\n            return 'No ObjectData';\n          } else if (intValue === 1) {\n            return 'IPTC-NAA Digital Newsphoto Parameter Record';\n          } else if (intValue === 2) {\n            return 'IPTC7901 Recommended Message Format';\n          } else if (intValue === 3) {\n            return 'Tagged Image File Format (Adobe/Aldus Image data)';\n          } else if (intValue === 4) {\n            return 'Illustrator (Adobe Graphics data)';\n          } else if (intValue === 5) {\n            return 'AppleSingle (Apple Computer Inc)';\n          } else if (intValue === 6) {\n            return 'NAA 89-3 (ANPA 1312)';\n          } else if (intValue === 7) {\n            return 'MacBinary II';\n          } else if (intValue === 8) {\n            return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n          } else if (intValue === 9) {\n            return 'United Press International ANPA 1312 variant';\n          } else if (intValue === 10) {\n            return 'United Press International Down-Load Message';\n          } else if (intValue === 11) {\n            return 'JPEG File Interchange (JFIF)';\n          } else if (intValue === 12) {\n            return 'Photo-CD Image-Pac (Eastman Kodak)';\n          } else if (intValue === 13) {\n            return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n          } else if (intValue === 14) {\n            return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n          } else if (intValue === 15) {\n            return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n          } else if (intValue === 16) {\n            return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n          } else if (intValue === 17) {\n            return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n          } else if (intValue === 18) {\n            return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n          } else if (intValue === 19) {\n            return 'RIFF Wave (Microsoft Corporation)';\n          } else if (intValue === 20) {\n            return 'Freehand (Macromedia/Aldus)';\n          } else if (intValue === 21) {\n            return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n          } else if (intValue === 22) {\n            return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n          } else if (intValue === 23) {\n            return 'MPEG 2 Audio Layer 3, ISO/IEC';\n          } else if (intValue === 24) {\n            return 'Portable Document File (*.PDF) Adobe';\n          } else if (intValue === 25) {\n            return 'News Industry Text Format (NITF)';\n          } else if (intValue === 26) {\n            return 'Tape Archive (*.TAR)';\n          } else if (intValue === 27) {\n            return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n          } else if (intValue === 28) {\n            return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n          } else if (intValue === 29) {\n            return 'Corel Draw [*.CDR]';\n          }\n          return `Unknown format ${intValue}`;\n        }\n        return getStringValue(value);\n      }\n    },\n    0x02c9: {\n      'name': 'ObjectData Preview File Format Version',\n      'description': (value, tags) => {\n        // Format ID, Version ID, Version Description\n        const formatVersions = {\n          '00': {\n            '00': '1'\n          },\n          '01': {\n            '01': '1',\n            '02': '2',\n            '03': '3',\n            '04': '4'\n          },\n          '02': {\n            '04': '4'\n          },\n          '03': {\n            '01': '5.0',\n            '02': '6.0'\n          },\n          '04': {\n            '01': '1.40'\n          },\n          '05': {\n            '01': '2'\n          },\n          '06': {\n            '01': '1'\n          },\n          '11': {\n            '01': '1.02'\n          },\n          '20': {\n            '01': '3.1',\n            '02': '4.0',\n            '03': '5.0',\n            '04': '5.5'\n          },\n          '21': {\n            '02': '2.0'\n          }\n        };\n        const stringValue = getStringValue(value);\n        if (tags['ObjectData Preview File Format']) {\n          const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n          if (formatVersions[objectDataPreviewFileFormat] && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n            return formatVersions[objectDataPreviewFileFormat][stringValue];\n          }\n        }\n        return stringValue;\n      }\n    },\n    0x02ca: 'ObjectData Preview Data',\n    0x070a: {\n      'name': 'Size Mode',\n      'description': value => {\n        return value[0].toString();\n      }\n    },\n    0x0714: {\n      'name': 'Max Subfile Size',\n      'description': value => {\n        let n = 0;\n        for (let i = 0; i < value.length; i++) {\n          n = (n << 8) + value[i];\n        }\n        return n.toString();\n      }\n    },\n    0x075a: {\n      'name': 'ObjectData Size Announced',\n      'description': value => {\n        let n = 0;\n        for (let i = 0; i < value.length; i++) {\n          n = (n << 8) + value[i];\n        }\n        return n.toString();\n      }\n    },\n    0x075f: {\n      'name': 'Maximum ObjectData Size',\n      'description': value => {\n        let n = 0;\n        for (let i = 0; i < value.length; i++) {\n          n = (n << 8) + value[i];\n        }\n        return n.toString();\n      }\n    }\n  }\n};\nfunction getCreationDate(value) {\n  const date = getStringValue(value);\n  if (date.length >= 8) {\n    return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n  }\n  return date;\n}\nfunction getCreationTime(value) {\n  const time = getStringValue(value);\n  let parsedTime = time;\n  if (time.length >= 6) {\n    parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n    if (time.length === 11) {\n      parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n    }\n  }\n  return parsedTime;\n}\nfunction getEncodingName(value) {\n  const string = getStringValue(value);\n  if (string === '\\x1b%G') {\n    return 'UTF-8';\n  } else if (string === '\\x1b%5') {\n    return 'Windows-1252';\n  } else if (string === '\\x1b%/G') {\n    return 'UTF-8 Level 1';\n  } else if (string === '\\x1b%/H') {\n    return 'UTF-8 Level 2';\n  } else if (string === '\\x1b%/I') {\n    return 'UTF-8 Level 3';\n  } else if (string === '\\x1B/A') {\n    return 'ISO-8859-1';\n  } else if (string === '\\x1B/B') {\n    return 'ISO-8859-2';\n  } else if (string === '\\x1B/C') {\n    return 'ISO-8859-3';\n  } else if (string === '\\x1B/D') {\n    return 'ISO-8859-4';\n  } else if (string === '\\x1B/@') {\n    return 'ISO-8859-5';\n  } else if (string === '\\x1B/G') {\n    return 'ISO-8859-6';\n  } else if (string === '\\x1B/F') {\n    return 'ISO-8859-7';\n  } else if (string === '\\x1B/H') {\n    return 'ISO-8859-8';\n  }\n  return 'Unknown';\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n  get\n};\nfunction get() {\n  if (typeof TextDecoder !== 'undefined') {\n    return TextDecoder;\n  }\n  return undefined;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\nconst TAG_HEADER_SIZE = 5;\nexport default {\n  decode,\n  TAG_HEADER_SIZE\n};\nfunction decode(encoding, tagValue) {\n  const Decoder = TextDecoder.get();\n  if (typeof Decoder !== 'undefined' && encoding !== undefined) {\n    try {\n      return new Decoder(encoding).decode(tagValue instanceof DataView ? tagValue.buffer : Uint8Array.from(tagValue));\n    } catch (error) {\n      // Pass through and fall back to ASCII decoding.\n    }\n  }\n  const stringValue = tagValue.map(charCode => String.fromCharCode(charCode)).join('');\n  return decodeAsciiValue(stringValue);\n}\nfunction decodeAsciiValue(asciiValue) {\n  try {\n    return decodeURIComponent(escape(asciiValue));\n  } catch (error) {\n    return asciiValue;\n  }\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\nexport default {\n  read\n};\nfunction read(dataView, dataOffset, includeUnknown) {\n  try {\n    if (Array.isArray(dataView)) {\n      return parseTags(new DataView(Uint8Array.from(dataView).buffer), {\n        size: dataView.length\n      }, 0, includeUnknown);\n    }\n    const {\n      naaBlock,\n      dataOffset: newDataOffset\n    } = getNaaResourceBlock(dataView, dataOffset);\n    return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n  } catch (error) {\n    return {};\n  }\n}\nfunction getNaaResourceBlock(dataView, dataOffset) {\n  while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n    const resourceBlock = getResourceBlock(dataView, dataOffset);\n    if (isNaaResourceBlock(resourceBlock)) {\n      return {\n        naaBlock: resourceBlock,\n        dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE\n      };\n    }\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n  }\n  throw new Error('No IPTC NAA resource block.');\n}\nfunction getResourceBlock(dataView, dataOffset) {\n  const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n  if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n    throw new Error('Not an IPTC resource block.');\n  }\n  return {\n    type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n    size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n  };\n}\nfunction isNaaResourceBlock(resourceBlock) {\n  return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\nfunction getBlockPadding(resourceBlock) {\n  if (resourceBlock.size % 2 !== 0) {\n    return 1;\n  }\n  return 0;\n}\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n  const tags = {};\n  let encoding = undefined;\n  const endOfBlockOffset = dataOffset + naaBlock['size'];\n  while (dataOffset < endOfBlockOffset && dataOffset < dataView.byteLength) {\n    const {\n      tag,\n      tagSize\n    } = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n    if (tag === null) {\n      break;\n    }\n    if (tag) {\n      if ('encoding' in tag) {\n        encoding = tag.encoding;\n      }\n      if (tags[tag.name] === undefined || tag['repeatable'] === undefined) {\n        tags[tag.name] = {\n          id: tag.id,\n          value: tag.value,\n          description: tag.description\n        };\n      } else {\n        if (!(tags[tag.name] instanceof Array)) {\n          tags[tag.name] = [{\n            id: tags[tag.name].id,\n            value: tags[tag.name].value,\n            description: tags[tag.name].description\n          }];\n        }\n        tags[tag.name].push({\n          id: tag.id,\n          value: tag.value,\n          description: tag.description\n        });\n      }\n    }\n    dataOffset += TAG_HEADER_SIZE + tagSize;\n  }\n  return tags;\n}\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n  const TAG_CODE_OFFSET = 1;\n  const TAG_SIZE_OFFSET = 3;\n  if (leadByteIsMissing(dataView, dataOffset)) {\n    return {\n      tag: null,\n      tagSize: 0\n    };\n  }\n  const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n  const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n  if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n    return {\n      tag: undefined,\n      tagSize\n    };\n  }\n  const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n  const tag = {\n    id: tagCode,\n    name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n    value: tagValue,\n    description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n  };\n  if (tagIsRepeatable(tagCode)) {\n    tag['repeatable'] = true;\n  }\n  if (tagContainsEncoding(tagCode)) {\n    tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n  }\n  return {\n    tag,\n    tagSize\n  };\n}\nfunction leadByteIsMissing(dataView, dataOffset) {\n  const TAG_LEAD_BYTE = 0x1c;\n  return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\nfunction getTagValue(dataView, offset, size) {\n  const value = [];\n  for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n    value.push(dataView.getUint8(offset + valueIndex));\n  }\n  return value;\n}\nfunction getTagName(tag, tagCode, tagValue) {\n  if (!tag) {\n    return `undefined-${tagCode}`;\n  }\n  if (tagIsName(tag)) {\n    return tag;\n  }\n  if (hasDynamicName(tag)) {\n    return tag['name'](tagValue);\n  }\n  return tag['name'];\n}\nfunction tagIsName(tag) {\n  return typeof tag === 'string';\n}\nfunction hasDynamicName(tag) {\n  return typeof tag['name'] === 'function';\n}\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n  if (hasDescriptionProperty(tag)) {\n    try {\n      return tag['description'](tagValue, tags);\n    } catch (error) {\n      // Fall through to next handler.\n    }\n  }\n  if (tagValueIsText(tag, tagValue)) {\n    return TagDecoder.decode(encoding, tagValue);\n  }\n  return tagValue;\n}\nfunction tagValueIsText(tag, tagValue) {\n  return tag && tagValue instanceof Array;\n}\nfunction hasDescriptionProperty(tag) {\n  return tag && tag['description'] !== undefined;\n}\nfunction tagIsRepeatable(tagCode) {\n  return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\nfunction tagContainsEncoding(tagCode) {\n  return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\nexport default {\n  'tiff:Orientation'(value) {\n    if (value === '1') {\n      return 'Horizontal (normal)';\n    }\n    if (value === '2') {\n      return 'Mirror horizontal';\n    }\n    if (value === '3') {\n      return 'Rotate 180';\n    }\n    if (value === '4') {\n      return 'Mirror vertical';\n    }\n    if (value === '5') {\n      return 'Mirror horizontal and rotate 270 CW';\n    }\n    if (value === '6') {\n      return 'Rotate 90 CW';\n    }\n    if (value === '7') {\n      return 'Mirror horizontal and rotate 90 CW';\n    }\n    if (value === '8') {\n      return 'Rotate 270 CW';\n    }\n    return value;\n  },\n  'tiff:ResolutionUnit': value => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n  'tiff:XResolution': value => fraction(TagNamesCommon.XResolution, value),\n  'tiff:YResolution': value => fraction(TagNamesCommon.YResolution, value),\n  'exif:ApertureValue': value => fraction(TagNamesCommon.ApertureValue, value),\n  'exif:GPSLatitude': calculateGPSValue,\n  'exif:GPSLongitude': calculateGPSValue,\n  'exif:FNumber': value => fraction(TagNamesCommon.FNumber, value),\n  'exif:FocalLength': value => fraction(TagNamesCommon.FocalLength, value),\n  'exif:FocalPlaneResolutionUnit': value => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n  'exif:ColorSpace': value => TagNamesCommon.ColorSpace(parseNumber(value)),\n  'exif:ComponentsConfiguration'(value, description) {\n    if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n      const numbers = description.split(', ').map(number => number.charCodeAt(0));\n      return TagNamesCommon.ComponentsConfiguration(numbers);\n    }\n    return description;\n  },\n  'exif:Contrast': value => TagNamesCommon.Contrast(parseInt(value, 10)),\n  'exif:CustomRendered': value => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n  'exif:ExposureMode': value => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n  'exif:ExposureProgram': value => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n  'exif:ExposureTime'(value) {\n    if (isFraction(value)) {\n      return TagNamesCommon.ExposureTime(value.split('/').map(number => parseInt(number, 10)));\n    }\n    return value;\n  },\n  'exif:MeteringMode': value => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n  'exif:Saturation': value => TagNamesCommon.Saturation(parseInt(value, 10)),\n  'exif:SceneCaptureType': value => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n  'exif:Sharpness': value => TagNamesCommon.Sharpness(parseInt(value, 10)),\n  'exif:ShutterSpeedValue': value => fraction(TagNamesCommon.ShutterSpeedValue, value),\n  'exif:WhiteBalance': value => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\nfunction fraction(func, value) {\n  if (isFraction(value)) {\n    return func(value.split('/'));\n  }\n  return value;\n}\nfunction parseNumber(value) {\n  if (value.substring(0, 2) === '0x') {\n    return parseInt(value.substring(2), 16);\n  }\n  return parseInt(value, 10);\n}\nfunction isFraction(value) {\n  return /^-?\\d+\\/-?\\d+$/.test(value);\n}\nfunction calculateGPSValue(value) {\n  const [degreesString, minutesString] = value.split(',');\n  if (degreesString !== undefined && minutesString !== undefined) {\n    const degrees = parseFloat(degreesString);\n    const minutes = parseFloat(minutesString);\n    const ref = minutesString.charAt(minutesString.length - 1);\n    if (!Number.isNaN(degrees) && !Number.isNaN(minutes)) {\n      return '' + (degrees + minutes / 60) + ref;\n    }\n  }\n  return value;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n  get\n};\nfunction get() {\n  if (typeof DOMParser !== 'undefined') {\n    return new DOMParser();\n  }\n  try {\n    // eslint-disable-next-line no-undef\n    return new (__non_webpack_require__('@xmldom/xmldom').DOMParser)({\n      errorHandler: {\n        error: () => {\n          throw new Error('Faulty XML');\n        }\n      }\n    });\n  } catch (error) {\n    return undefined;\n  }\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringFromDataView, objectAssign } from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\nexport default {\n  read\n};\nfunction read(dataView, chunks) {\n  const tags = {};\n  if (typeof dataView === 'string') {\n    readTags(tags, dataView);\n    return tags;\n  }\n  const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n  const hasStandardTags = readTags(tags, standardXmp);\n  if (extendedXmp) {\n    const hasExtendedTags = readTags(tags, extendedXmp);\n    if (!hasStandardTags && !hasExtendedTags) {\n      // Some writers are not spec-compliant in that they split an XMP\n      // metadata tree over both the standard XMP block and the extended\n      // XMP block. If we failed parsing both of the XMPs in the regular\n      // way, we try to combine them to see if that works better.\n      delete tags._raw;\n      readTags(tags, combineChunks(dataView, chunks));\n    }\n  }\n  return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n  if (chunks.length === 0) {\n    return [];\n  }\n  const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n  if (chunks.length > 1) {\n    completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n  }\n  return completeChunks;\n}\nfunction combineChunks(dataView, chunks) {\n  const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n  const combinedChunks = new Uint8Array(totalLength);\n  let offset = 0;\n  for (let i = 0; i < chunks.length; i++) {\n    const chunk = chunks[i];\n    const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n    combinedChunks.set(new Uint8Array(slice), offset);\n    offset += chunk.length;\n  }\n  return new DataView(combinedChunks.buffer);\n}\nfunction readTags(tags, chunkDataView) {\n  try {\n    const {\n      doc,\n      raw\n    } = getDocument(chunkDataView);\n    tags._raw = (tags._raw || '') + raw;\n    const rdf = getRDF(doc);\n    objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nfunction getDocument(chunkDataView) {\n  const domParser = DOMParser.get();\n  if (!domParser) {\n    console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n    throw new Error();\n  }\n  const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n  const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n  if (doc.documentElement.nodeName === 'parsererror') {\n    throw new Error(doc.documentElement.textContent);\n  }\n  return {\n    doc,\n    raw: xmlString\n  };\n}\nfunction trimXmlSource(xmlSource) {\n  return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\nfunction getRDF(node) {\n  for (let i = 0; i < node.childNodes.length; i++) {\n    if (node.childNodes[i].tagName === 'x:xmpmeta') {\n      return getRDF(node.childNodes[i]);\n    }\n    if (node.childNodes[i].tagName === 'rdf:RDF') {\n      return node.childNodes[i];\n    }\n  }\n  throw new Error();\n}\nfunction convertToObject(node, isTopNode = false) {\n  const childNodes = getChildNodes(node);\n  if (hasTextOnlyContent(childNodes)) {\n    if (isTopNode) {\n      return {};\n    }\n    return getTextValue(childNodes[0]);\n  }\n  return getElementsFromNodes(childNodes);\n}\nfunction getChildNodes(node) {\n  const elements = [];\n  for (let i = 0; i < node.childNodes.length; i++) {\n    elements.push(node.childNodes[i]);\n  }\n  return elements;\n}\nfunction hasTextOnlyContent(nodes) {\n  return nodes.length === 1 && nodes[0].nodeName === '#text';\n}\nfunction getTextValue(node) {\n  return node.nodeValue;\n}\nfunction getElementsFromNodes(nodes) {\n  const elements = {};\n  nodes.forEach(node => {\n    if (isElement(node)) {\n      const nodeElement = getElementFromNode(node);\n      if (elements[node.nodeName] !== undefined) {\n        if (!Array.isArray(elements[node.nodeName])) {\n          elements[node.nodeName] = [elements[node.nodeName]];\n        }\n        elements[node.nodeName].push(nodeElement);\n      } else {\n        elements[node.nodeName] = nodeElement;\n      }\n    }\n  });\n  return elements;\n}\nfunction isElement(node) {\n  return node.nodeName && node.nodeName !== '#text';\n}\nfunction getElementFromNode(node) {\n  return {\n    attributes: getAttributes(node),\n    value: convertToObject(node)\n  };\n}\nfunction getAttributes(element) {\n  const attributes = {};\n  for (let i = 0; i < element.attributes.length; i++) {\n    attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n  }\n  return attributes;\n}\nfunction parseXMPObject(xmpObject) {\n  const tags = {};\n  if (typeof xmpObject === 'string') {\n    return xmpObject;\n  }\n  for (const nodeName in xmpObject) {\n    let nodes = xmpObject[nodeName];\n    if (!Array.isArray(nodes)) {\n      nodes = [nodes];\n    }\n    nodes.forEach(node => {\n      objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n      if (typeof node.value === 'object') {\n        objectAssign(tags, parseNodeChildrenAsTags(node.value));\n      }\n    });\n  }\n  return tags;\n}\nfunction parseNodeAttributesAsTags(attributes) {\n  const tags = {};\n  for (const name in attributes) {\n    try {\n      if (isTagAttribute(name)) {\n        tags[getLocalName(name)] = {\n          value: attributes[name],\n          attributes: {},\n          description: getDescription(attributes[name], name)\n        };\n      }\n    } catch (error) {\n      // Keep going and try to parse the rest of the tags.\n    }\n  }\n  return tags;\n}\nfunction isTagAttribute(name) {\n  return name !== 'rdf:parseType' && !isNamespaceDefinition(name);\n}\nfunction isNamespaceDefinition(name) {\n  return name.split(':')[0] === 'xmlns';\n}\nfunction getLocalName(name) {\n  if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n    return 'RatingPercent';\n  }\n  return name.split(':')[1];\n}\nfunction getDescription(value, name = undefined) {\n  if (Array.isArray(value)) {\n    const arrayDescription = getDescriptionOfArray(value);\n    if (name && typeof XmpTagNames[name] === 'function') {\n      return XmpTagNames[name](value, arrayDescription);\n    }\n    return arrayDescription;\n  }\n  if (typeof value === 'object') {\n    return getDescriptionOfObject(value);\n  }\n  try {\n    if (name && typeof XmpTagNames[name] === 'function') {\n      return XmpTagNames[name](value);\n    }\n    return decodeURIComponent(escape(value));\n  } catch (error) {\n    return value;\n  }\n}\nfunction getDescriptionOfArray(value) {\n  return value.map(item => {\n    if (item.value !== undefined) {\n      return getDescription(item.value);\n    }\n    return getDescription(item);\n  }).join(', ');\n}\nfunction getDescriptionOfObject(value) {\n  const descriptions = [];\n  for (const key in value) {\n    descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n  }\n  return descriptions.join('; ');\n}\nfunction getClearTextKey(key) {\n  if (key === 'CiAdrCity') {\n    return 'CreatorCity';\n  }\n  if (key === 'CiAdrCtry') {\n    return 'CreatorCountry';\n  }\n  if (key === 'CiAdrExtadr') {\n    return 'CreatorAddress';\n  }\n  if (key === 'CiAdrPcode') {\n    return 'CreatorPostalCode';\n  }\n  if (key === 'CiAdrRegion') {\n    return 'CreatorRegion';\n  }\n  if (key === 'CiEmailWork') {\n    return 'CreatorWorkEmail';\n  }\n  if (key === 'CiTelWork') {\n    return 'CreatorWorkPhone';\n  }\n  if (key === 'CiUrlWork') {\n    return 'CreatorWorkUrl';\n  }\n  return key;\n}\nfunction parseNodeChildrenAsTags(children) {\n  const tags = {};\n  for (const name in children) {\n    try {\n      if (!isNamespaceDefinition(name)) {\n        tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n      }\n    } catch (error) {\n      // Keep going and try to parse the rest of the tags.\n    }\n  }\n  return tags;\n}\nfunction parseNodeAsTag(node, name) {\n  if (isDuplicateTag(node)) {\n    return parseNodeAsDuplicateTag(node, name);\n  }\n  if (isEmptyResourceTag(node)) {\n    return {\n      value: '',\n      attributes: {},\n      description: ''\n    };\n  }\n  if (hasNestedSimpleRdfDescription(node)) {\n    return parseNodeAsSimpleRdfDescription(node, name);\n  }\n  if (hasNestedStructureRdfDescription(node)) {\n    return parseNodeAsStructureRdfDescription(node, name);\n  }\n  if (isCompactStructure(node)) {\n    return parseNodeAsCompactStructure(node, name);\n  }\n  if (isArray(node)) {\n    return parseNodeAsArray(node, name);\n  }\n  return parseNodeAsSimpleValue(node, name);\n}\nfunction isEmptyResourceTag(node) {\n  return node.attributes['rdf:parseType'] === 'Resource' && typeof node.value === 'string' && node.value.trim() === '';\n}\nfunction isDuplicateTag(node) {\n  return Array.isArray(node);\n}\nfunction parseNodeAsDuplicateTag(node, name) {\n  return parseNodeAsSimpleValue(node[node.length - 1], name);\n}\nfunction hasNestedSimpleRdfDescription(node) {\n  return node.attributes['rdf:parseType'] === 'Resource' && node.value['rdf:value'] !== undefined || node.value['rdf:Description'] !== undefined && node.value['rdf:Description'].value['rdf:value'] !== undefined;\n}\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n  const attributes = parseNodeAttributes(node);\n  if (node.value['rdf:Description'] !== undefined) {\n    node = node.value['rdf:Description'];\n  }\n  objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n  const value = parseRdfValue(node);\n  return {\n    value,\n    attributes,\n    description: getDescription(value, name)\n  };\n}\nfunction parseNodeAttributes(node) {\n  const attributes = {};\n  for (const name in node.attributes) {\n    if (name !== 'rdf:parseType' && name !== 'rdf:resource' && !isNamespaceDefinition(name)) {\n      attributes[getLocalName(name)] = node.attributes[name];\n    }\n  }\n  return attributes;\n}\nfunction parseNodeChildrenAsAttributes(node) {\n  const attributes = {};\n  for (const name in node.value) {\n    if (name !== 'rdf:value' && !isNamespaceDefinition(name)) {\n      attributes[getLocalName(name)] = node.value[name].value;\n    }\n  }\n  return attributes;\n}\nfunction parseRdfValue(node) {\n  return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\nfunction hasNestedStructureRdfDescription(node) {\n  return node.attributes['rdf:parseType'] === 'Resource' || node.value['rdf:Description'] !== undefined && node.value['rdf:Description'].value['rdf:value'] === undefined;\n}\nfunction parseNodeAsStructureRdfDescription(node, name) {\n  const tag = {\n    value: {},\n    attributes: {}\n  };\n  if (node.value['rdf:Description'] !== undefined) {\n    objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n    objectAssign(tag.attributes, parseNodeAttributes(node));\n    node = node.value['rdf:Description'];\n  }\n  objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n  tag.description = getDescription(tag.value, name);\n  return tag;\n}\nfunction isCompactStructure(node) {\n  return Object.keys(node.value).length === 0 && node.attributes['xml:lang'] === undefined && node.attributes['rdf:resource'] === undefined;\n}\nfunction parseNodeAsCompactStructure(node, name) {\n  const value = parseNodeAttributesAsTags(node.attributes);\n  return {\n    value,\n    attributes: {},\n    description: getDescription(value, name)\n  };\n}\nfunction isArray(node) {\n  return getArrayChild(node.value) !== undefined;\n}\nfunction getArrayChild(value) {\n  return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\nfunction parseNodeAsArray(node, name) {\n  let items = getArrayChild(node.value).value['rdf:li'];\n  const attributes = parseNodeAttributes(node);\n  const value = [];\n  if (items === undefined) {\n    items = [];\n  } else if (!Array.isArray(items)) {\n    items = [items];\n  }\n  items.forEach(item => {\n    value.push(parseArrayValue(item));\n  });\n  return {\n    value,\n    attributes,\n    description: getDescription(value, name)\n  };\n}\nfunction parseArrayValue(item) {\n  if (hasNestedSimpleRdfDescription(item)) {\n    return parseNodeAsSimpleRdfDescription(item);\n  }\n  if (hasNestedStructureRdfDescription(item)) {\n    return parseNodeAsStructureRdfDescription(item).value;\n  }\n  if (isCompactStructure(item)) {\n    return parseNodeAsCompactStructure(item).value;\n  }\n  return parseNodeAsSimpleValue(item);\n}\nfunction parseNodeAsSimpleValue(node, name) {\n  const value = getURIValue(node) || parseXMPObject(node.value);\n  return {\n    value,\n    attributes: parseNodeAttributes(node),\n    description: getDescription(value, name)\n  };\n}\nfunction getURIValue(node) {\n  return node.attributes && node.attributes['rdf:resource'];\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport { getPascalStringFromDataView, padStart, parseFloatRadix, strRepeat } from './utils.js';\n\n// export const OsTypeKeys = {\n//     OBJC: 'Objc',\n//     DOUB: 'doub',\n//     UNTF: 'UntF',\n//     TEXT: 'TEXT',\n//     BOOL: 'bool',\n//     ENUM: 'enum',\n//     LONG: 'long'\n// };\n\nexport const PathRecordTypes = {\n  CLOSED_SUBPATH_LENGTH: 0,\n  CLOSED_SUBPATH_BEZIER_LINKED: 1,\n  CLOSED_SUBPATH_BEZIER_UNLINKED: 2,\n  OPEN_SUBPATH_LENGTH: 3,\n  OPEN_SUBPATH_BEZIER_LINKED: 4,\n  OPEN_SUBPATH_BEZIER_UNLINKED: 5,\n  FILL_RULE: 6,\n  CLIPBOARD: 7,\n  INITIAL_FILL_RULE: 8\n};\nconst PATH_RECORD_SIZE = 24;\nexport default {\n  // 0x0425: {\n  //     name: 'CaptionDigest',\n  //     description(dataView) {\n  //         let description = '';\n  //         for (let i = 0; i < dataView.byteLength; i++) {\n  //             const byte = dataView.getUint8(i);\n  //             description += padStart(byte.toString(16), 2, '0');\n  //         }\n  //         return description;\n  //     }\n  // },\n  // Commented out for now to lower bundle size until someone asks for it.\n  // 0x043a: {\n  //     name: 'PrintInformation',\n  //     description: parseDescriptor\n  // },\n  // 0x043b: {\n  //     name: 'PrintStyle',\n  //     description: parseDescriptor\n  // },\n  0x07d0: {\n    name: 'PathInformation',\n    description: pathResource\n  },\n  0x0bb7: {\n    name: 'ClippingPathName',\n    description(dataView) {\n      const [, string] = getPascalStringFromDataView(dataView, 0);\n      return string;\n    }\n  }\n};\n\n// function parseDescriptor(dataView) {\n//     const DESCRIPTOR_VERSION_SIZE = 4;\n//     // This is a unicode string terminated with null. Unsure about the format though since in my example image it starts with 0x0000.\n//     const UNCLEAR_CLASS_ID_NAME_PART_SIZE = 6;\n//     let offset = 0;\n//     offset += DESCRIPTOR_VERSION_SIZE + UNCLEAR_CLASS_ID_NAME_PART_SIZE;\n//     const [classId, classIdSize] = getBlockValue(dataView, offset);\n//     offset += classIdSize;\n//     const numItems = Types.getLongAt(dataView, offset);\n//     offset += 4;\n//     const descriptor = {[classId]: {}};\n//     for (let i = 0; i < numItems; i++) {\n//         const [itemKey, itemKeySize] = getBlockValue(dataView, offset);\n//         offset += itemKeySize;\n//         const osTypeKey = getStringFromDataView(dataView, offset, 4);\n//         offset += 4;\n//         try {\n//             const {itemValue, itemSize} = getItemValue(dataView, offset, osTypeKey);\n//             offset += itemSize;\n//             descriptor[classId][ITEM_KEY_TERMS[itemKey] || itemKey] = itemValue;\n//         } catch (error) {\n//             // We can't recover from unknown OS type key since we don't know\n//             // where the next one starts.\n//             break;\n//         }\n//     }\n//     return JSON.stringify(descriptor);\n// }\n\n// function getBlockValue(dataView, offset, unicode = false) {\n//     const length = (unicode ? 2 : 1) * Types.getLongAt(dataView, offset) || 4;\n//     offset += 4;\n//     const value = (unicode ? getUnicodeStringFromDataView : getStringFromDataView)(dataView, offset, length);\n//     offset += length;\n//     return [value, 4 + length];\n// }\n\n// function getItemValue(dataView, offset, osTypeKey) {\n//     // Not all OSType keys are implemented yet because they are missing in the example image.\n//     if (osTypeKey === OsTypeKeys.OBJC) {\n//         const [classIdName, classIdNameSize] = getBlockValue(dataView, offset, true);\n//         offset += classIdNameSize;\n//         const [classId, classIdSize] = getBlockValue(dataView, offset);\n//         offset += classIdSize;\n//         const _offset = Types.getLongAt(dataView, offset);\n//         return {\n//             itemValue: {[classIdName]: {[classId]: _offset}},\n//             itemSize: classIdNameSize + classIdSize + 4\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.DOUB) {\n//         return {\n//             itemValue: parseDouble(dataView, offset),\n//             itemSize: 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.UNTF) {\n//         const unit = getStringFromDataView(dataView, offset, 4);\n//         return {\n//             itemValue: {unit, value: parseDouble(dataView, offset + 4)},\n//             itemSize: unit.length + 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.TEXT) {\n//         const length = 2 * Types.getLongAt(dataView, offset);\n//         offset += 4;\n//         const text = getUnicodeStringFromDataView(dataView, offset, length);\n//         return {\n//             itemValue: text,\n//             itemSize: 4 + length\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.BOOL) {\n//         return {\n//             itemValue: Types.getByteAt(dataView, offset) === 1,\n//             itemSize: 1\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.ENUM) {\n//         const [type, typeSize] = getBlockValue(dataView, offset);\n//         offset += typeSize;\n//         const [enumName, enumSize] = getBlockValue(dataView, offset);\n//         return {\n//             itemValue: {[type]: enumName},\n//             itemSize: typeSize + enumSize\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.LONG) {\n//         return {\n//             itemValue: Types.getLongAt(dataView, offset),\n//             itemSize: 4\n//         };\n//     }\n//     throw new Error(`Unknown OS type key: ${osTypeKey}`);\n// }\n\n// function parseDouble(dataView, offset) {\n//     const BIAS = 1023;\n//     const sign = (Types.getByteAt(dataView, offset) & parseInt('10000000', 2)) === 0 ? 1 : -1;\n//     const exponent = ((Types.getShortAt(dataView, offset) & parseInt('0111111111110000', 2)) >> 4) - BIAS;\n//     const fractionHigh = padStart((Types.getLongAt(dataView, offset) & parseInt('00000000000011111111111111111111', 2)).toString(2), 20, '0');\n//     const fractionLow = padStart(Types.getLongAt(dataView, offset + 4).toString(2), 32, '0');\n//     const fraction = parseFloatRadix('1.' + fractionHigh + fractionLow, 2);\n//     return sign * fraction * Math.pow(2, exponent);\n// }\n\nfunction pathResource(dataView) {\n  const TYPE_SIZE = 2;\n  const types = {};\n  const paths = [];\n  for (let offset = 0; offset < dataView.byteLength; offset += TYPE_SIZE + PATH_RECORD_SIZE) {\n    const type = Types.getShortAt(dataView, offset);\n    if (PATH_RECORD_TYPES[type]) {\n      if (!types[type]) {\n        types[type] = PATH_RECORD_TYPES[type].description;\n      }\n      paths.push({\n        type,\n        path: PATH_RECORD_TYPES[type].path(dataView, offset + TYPE_SIZE)\n      });\n    }\n  }\n  return JSON.stringify({\n    types,\n    paths\n  });\n}\nconst PATH_RECORD_TYPES = {\n  [PathRecordTypes.CLOSED_SUBPATH_LENGTH]: {\n    description: 'Closed subpath length',\n    path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n  },\n  [PathRecordTypes.CLOSED_SUBPATH_BEZIER_LINKED]: {\n    description: 'Closed subpath Bezier knot, linked',\n    path: parseBezierKnot\n  },\n  [PathRecordTypes.CLOSED_SUBPATH_BEZIER_UNLINKED]: {\n    description: 'Closed subpath Bezier knot, unlinked',\n    path: parseBezierKnot\n  },\n  [PathRecordTypes.OPEN_SUBPATH_LENGTH]: {\n    description: 'Open subpath length',\n    path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n  },\n  [PathRecordTypes.OPEN_SUBPATH_BEZIER_LINKED]: {\n    description: 'Open subpath Bezier knot, linked',\n    path: parseBezierKnot\n  },\n  [PathRecordTypes.OPEN_SUBPATH_BEZIER_UNLINKED]: {\n    description: 'Open subpath Bezier knot, unlinked',\n    path: parseBezierKnot\n  },\n  [PathRecordTypes.FILL_RULE]: {\n    description: 'Path fill rule',\n    path: () => []\n  },\n  [PathRecordTypes.INITIAL_FILL_RULE]: {\n    description: 'Initial fill rule',\n    path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n  },\n  [PathRecordTypes.CLIPBOARD]: {\n    description: 'Clipboard',\n    path: parseClipboard\n  }\n};\nfunction parseBezierKnot(dataView, offset) {\n  const PATH_POINT_SIZE = 8;\n  const path = [];\n  for (let i = 0; i < PATH_RECORD_SIZE; i += PATH_POINT_SIZE) {\n    path.push(parsePathPoint(dataView, offset + i));\n  }\n  return path;\n}\nfunction parsePathPoint(dataView, offset) {\n  const vertical = getFixedPointNumber(dataView, offset, 8);\n  const horizontal = getFixedPointNumber(dataView, offset + 4, 8);\n  return [horizontal, vertical];\n}\nfunction parseClipboard(dataView, offset) {\n  return [[getFixedPointNumber(dataView, offset, 8),\n  // Top\n  getFixedPointNumber(dataView, offset + 4, 8),\n  // Left\n  getFixedPointNumber(dataView, offset + 8, 8),\n  // Botton\n  getFixedPointNumber(dataView, offset + 12, 8) // Right\n  ], getFixedPointNumber(dataView, offset + 16, 8) // Resolution\n  ];\n}\nfunction getFixedPointNumber(dataView, offset, binaryPoint) {\n  const number = Types.getLongAt(dataView, offset);\n  const sign = number >>> 31 === 0 ? 1 : -1;\n  const integer = (number & 0x7f000000) >>> 32 - binaryPoint;\n  const fraction = number & parseInt(strRepeat('1', 32 - binaryPoint), 2);\n  return sign * parseFloatRadix(integer.toString(2) + '.' + padStart(fraction.toString(2), 32 - binaryPoint, '0'), 2);\n}\n\n// Item key terminology: https://psd-tools.readthedocs.io/en/latest/reference/psd_tools.terminology.html\n// Are these correct? There are collisions that are commented out. A lot of code for little gain?\n// const ITEM_KEY_TERMS = {\n//     'A   ': 'A',\n//     'Adjs': 'Adjustment',\n//     'Algd': 'Aligned',\n//     'Algn': 'Alignment',\n//     'AllE': 'AllExcept',\n//     'All ': 'AllPS',\n//     'AlTl': 'AllToolOptions',\n//     'AChn': 'AlphaChannelOptions',\n//     'AlpC': 'AlphaChannels',\n//     'AmbB': 'AmbientBrightness',\n//     'AmbC': 'AmbientColor',\n//     'Amnt': 'Amount',\n//     'AmMx': 'AmplitudeMax',\n//     'AmMn': 'AmplitudeMin',\n//     'Anch': 'Anchor',\n//     'Angl': 'Angle',\n//     'Ang1': 'Angle1',\n//     'Ang2': 'Angle2',\n//     'Ang3': 'Angle3',\n//     'Ang4': 'Angle4',\n//     'AntA': 'AntiAlias',\n//     'Appe': 'Append',\n//     'Aply': 'Apply',\n//     'Ar  ': 'Area',\n//     'Arrw': 'Arrowhead',\n//     'As  ': 'As',\n//     'Asst': 'AssetBin',\n//     'AssC': 'AssumedCMYK',\n//     'AssG': 'AssumedGray',\n//     'AssR': 'AssumedRGB',\n//     'At  ': 'At',\n//     'Auto': 'Auto',\n//     'AuCo': 'AutoContrast',\n//     'Atrs': 'AutoErase',\n//     'AtKr': 'AutoKern',\n//     'AtUp': 'AutoUpdate',\n//     'Axis': 'Axis',\n//     'B   ': 'B',\n//     'Bckg': 'Background',\n//     'BckC': 'BackgroundColor',\n//     'BckL': 'BackgroundLevel',\n//     'Bwd ': 'Backward',\n//     'Blnc': 'Balance',\n//     'Bsln': 'BaselineShift',\n//     'BpWh': 'BeepWhenDone',\n//     'BgnR': 'BeginRamp',\n//     'BgnS': 'BeginSustain',\n//     'bvlD': 'BevelDirection',\n//     'ebbl': 'BevelEmboss',\n//     'bvlS': 'BevelStyle',\n//     'bvlT': 'BevelTechnique',\n//     'BgNH': 'BigNudgeH',\n//     'BgNV': 'BigNudgeV',\n//     'BtDp': 'BitDepth',\n//     'Blck': 'Black',\n//     'BlcC': 'BlackClip',\n//     'Blcn': 'BlackGeneration',\n//     'BlcG': 'BlackGenerationCurve',\n//     'BlcI': 'BlackIntensity',\n//     'BlcL': 'BlackLevel',\n//     // 'BlcL': 'BlackLimit',\n//     'Bld ': 'Bleed',\n//     'Blnd': 'BlendRange',\n//     'Bl  ': 'Blue',\n//     'BlBl': 'BlueBlackPoint',\n//     'blueFloat': 'BlueFloat',\n//     'BlGm': 'BlueGamma',\n//     'BlWh': 'BlueWhitePoint',\n//     'BlX ': 'BlueX',\n//     'BlY ': 'BlueY',\n//     'blur': 'Blur',\n//     'BlrM': 'BlurMethod',\n//     'BlrQ': 'BlurQuality',\n//     'Bk  ': 'Book',\n//     'BrdT': 'BorderThickness',\n//     'Btom': 'Bottom',\n//     'Brgh': 'Brightness',\n//     'BrsD': 'BrushDetail',\n//     'BrsS': 'BrushSize',\n//     'BrsT': 'BrushType',\n//     'Brsh': 'Brushes',\n//     'BmpA': 'BumpAmplitude',\n//     'BmpC': 'BumpChannel',\n//     'By  ': 'By',\n//     'Byln': 'Byline',\n//     'BylT': 'BylineTitle',\n//     'BytO': 'ByteOrder',\n//     'CMYS': 'CMYKSetup',\n//     'CchP': 'CachePrefs',\n//     'Clcl': 'Calculation',\n//     'Clbr': 'CalibrationBars',\n//     'Cptn': 'Caption',\n//     'CptW': 'CaptionWriter',\n//     'Ctgr': 'Category',\n//     'ClSz': 'CellSize',\n//     'Cntr': 'Center',\n//     'CntC': 'CenterCropMarks',\n//     'ChlA': 'ChalkArea',\n//     'Chnl': 'Channel',\n//     'ChMx': 'ChannelMatrix',\n//     'ChnN': 'ChannelName',\n//     'Chns': 'Channels',\n//     'ChnI': 'ChannelsInterleaved',\n//     'ChAm': 'CharcoalAmount',\n//     'ChrA': 'CharcoalArea',\n//     'Ckmt': 'ChokeMatte',\n//     'ChFX': 'ChromeFX',\n//     'City': 'City',\n//     'ClrA': 'ClearAmount',\n//     'ClPt': 'ClippingPath',\n//     'ClpP': 'ClippingPathEPS',\n//     'ClpF': 'ClippingPathFlatness',\n//     'ClpI': 'ClippingPathIndex',\n//     'Clpg': 'ClippingPathInfo',\n//     'ClnS': 'CloneSource',\n//     'Clsp': 'ClosedSubpath',\n//     'Clr ': 'Color',\n//     'Clrh': 'ColorChannels',\n//     'ClrC': 'ColorCorrection',\n//     'ClrI': 'ColorIndicates',\n//     'ClMg': 'ColorManagement',\n//     'Clrr': 'ColorPickerPrefs',\n//     'ClrS': 'ColorSpace',\n//     'ClrT': 'ColorTable',\n//     'Clrz': 'Colorize',\n//     'Clrs': 'Colors',\n//     'ClrL': 'ColorsList',\n//     'ClmW': 'ColumnWidth',\n//     'CmdK': 'CommandKey',\n//     'Cmpn': 'Compensation',\n//     'Cmpr': 'Compression',\n//     'Cncv': 'Concavity',\n//     'Cndt': 'Condition',\n//     'Cnst': 'Constant',\n//     // 'Cnst': 'Constrain',\n//     'CnsP': 'ConstrainProportions',\n//     'Cfov': 'ConstructionFOV',\n//     'Cntg': 'Contiguous',\n//     'Cntn': 'Continue',\n//     'Cnty': 'Continuity',\n//     'ShpC': 'ContourType',\n//     // 'Cntr': 'Contrast',\n//     'Cnvr': 'Convert',\n//     'Cpy ': 'Copy',\n//     'Cpyr': 'Copyright',\n//     'CprN': 'CopyrightNotice',\n//     'CrnC': 'CornerCropMarks',\n//     'Cnt ': 'Count',\n//     'CntN': 'CountryName',\n//     'CrcB': 'CrackBrightness',\n//     'CrcD': 'CrackDepth',\n//     'CrcS': 'CrackSpacing',\n//     'blfl': 'CreateLayersFromLayerFX',\n//     'Crdt': 'Credit',\n//     'Crss': 'Crossover',\n//     'Crnt': 'Current',\n//     'CrnH': 'CurrentHistoryState',\n//     'CrnL': 'CurrentLight',\n//     'CrnT': 'CurrentToolOptions',\n//     'Crv ': 'Curve',\n//     'CrvF': 'CurveFile',\n//     'Cstm': 'Custom',\n//     'CstF': 'CustomForced',\n//     'CstM': 'CustomMatte',\n//     'CstP': 'CustomPalette',\n//     'Cyn ': 'Cyan',\n//     'DCS ': 'DCS',\n//     'DPXf': 'DPXFormat',\n//     'DrkI': 'DarkIntensity',\n//     'Drkn': 'Darkness',\n//     'DtCr': 'DateCreated',\n//     'Dt ': 'Datum',\n//     'Dfnt': 'Definition',\n//     'Dnst': 'Density',\n//     'Dpth': 'Depth',\n//     'Dstl': 'DestBlackMax',\n//     'DstB': 'DestBlackMin',\n//     'Dstt': 'DestWhiteMax',\n//     'DstW': 'DestWhiteMin',\n//     'DstM': 'DestinationMode',\n//     'Dtl ': 'Detail',\n//     'Dmtr': 'Diameter',\n//     'DffD': 'DiffusionDither',\n//     'Drct': 'Direction',\n//     'DrcB': 'DirectionBalance',\n//     'DspF': 'DisplaceFile',\n//     'DspM': 'DisplacementMap',\n//     'DspP': 'DisplayPrefs',\n//     'Dstn': 'Distance',\n//     // 'Dstr': 'Distortion',\n//     // 'Dstr': 'Distribution',\n//     'Dthr': 'Dither',\n//     'DthA': 'DitherAmount',\n//     'Dthp': 'DitherPreserve',\n//     'Dthq': 'DitherQuality',\n//     'DocI': 'DocumentID',\n//     'DtGn': 'DotGain',\n//     'DtGC': 'DotGainCurves',\n//     'DrSh': 'DropShadow',\n//     'Dplc': 'Duplicate',\n//     'DnmC': 'DynamicColorSliders',\n//     'Edg ': 'Edge',\n//     'EdgB': 'EdgeBrightness',\n//     'EdgF': 'EdgeFidelity',\n//     'EdgI': 'EdgeIntensity',\n//     'EdgS': 'EdgeSimplicity',\n//     'EdgT': 'EdgeThickness',\n//     'EdgW': 'EdgeWidth',\n//     'Effc': 'Effect',\n//     'EmbC': 'EmbedCMYK',\n//     'EmbG': 'EmbedGray',\n//     'EmbL': 'EmbedLab',\n//     'EmbP': 'EmbedProfiles',\n//     'EmbR': 'EmbedRGB',\n//     'EmlD': 'EmulsionDown',\n//     'EGst': 'EnableGestures',\n//     'enab': 'Enabled',\n//     'Encd': 'Encoding',\n//     'End ': 'End',\n//     'EndA': 'EndArrowhead',\n//     'EndR': 'EndRamp',\n//     'EndS': 'EndSustain',\n//     'Engn': 'Engine',\n//     'ErsT': 'EraseToHistory',\n//     'ErsK': 'EraserKind',\n//     'ExcP': 'ExactPoints',\n//     'Expr': 'Export',\n//     'ExpC': 'ExportClipboard',\n//     'Exps': 'Exposure',\n//     'Extd': 'Extend',\n//     'EQlt': 'ExtendedQuality',\n//     'Extn': 'Extension',\n//     'ExtQ': 'ExtensionsQuery',\n//     'ExtD': 'ExtrudeDepth',\n//     'ExtM': 'ExtrudeMaskIncomplete',\n//     'ExtR': 'ExtrudeRandom',\n//     'ExtS': 'ExtrudeSize',\n//     'ExtF': 'ExtrudeSolidFace',\n//     'ExtT': 'ExtrudeType',\n//     'EyDr': 'EyeDropperSample',\n//     'FxCm': 'FPXCompress',\n//     'FxQl': 'FPXQuality',\n//     'FxSz': 'FPXSize',\n//     'FxVw': 'FPXView',\n//     'FdT ': 'FadeTo',\n//     'FdtS': 'FadeoutSteps',\n//     'FlOf': 'Falloff',\n//     'Fthr': 'Feather',\n//     'FbrL': 'FiberLength',\n//     'File': 'File',\n//     'FlCr': 'FileCreator',\n//     'FlIn': 'FileInfo',\n//     'FilR': 'FileReference',\n//     'FlSP': 'FileSavePrefs',\n//     'FlTy': 'FileType',\n//     'flst': 'FilesList',\n//     'Fl  ': 'Fill',\n//     'FlCl': 'FillColor',\n//     'FlNt': 'FillNeutral',\n//     'FlPd': 'FilterLayerPersistentData',\n//     'FlRs': 'FilterLayerRandomSeed',\n//     'Fngr': 'Fingerpainting',\n//     'FlrC': 'FlareCenter',\n//     'Fltn': 'Flatness',\n//     'Fltt': 'Flatten',\n//     'FlpV': 'FlipVertical',\n//     'Fcs ': 'Focus',\n//     'Fldr': 'Folders',\n//     'FntD': 'FontDesignAxes',\n//     'FntV': 'FontDesignAxesVectors',\n//     'FntN': 'FontName',\n//     'Scrp': 'FontScript',\n//     'FntS': 'FontStyleName',\n//     'FntT': 'FontTechnology',\n//     'FrcC': 'ForcedColors',\n//     'FrgC': 'ForegroundColor',\n//     'FrgL': 'ForegroundLevel',\n//     'Fmt ': 'Format',\n//     'Fwd ': 'Forward',\n//     'FrFX': 'FrameFX',\n//     'FrmW': 'FrameWidth',\n//     'FTcs': 'FreeTransformCenterState',\n//     'Frqn': 'Frequency',\n//     'From': 'From',\n//     'FrmB': 'FromBuiltin',\n//     'FrmM': 'FromMode',\n//     'FncK': 'FunctionKey',\n//     'Fzns': 'Fuzziness',\n//     'GCR ': 'GCR',\n//     'GFPT': 'GIFColorFileType',\n//     'GFCL': 'GIFColorLimit',\n//     'GFEC': 'GIFExportCaption',\n//     'GFMI': 'GIFMaskChannelIndex',\n//     'GFMV': 'GIFMaskChannelInverted',\n//     'GFPF': 'GIFPaletteFile',\n//     'GFPL': 'GIFPaletteType',\n//     'GFCS': 'GIFRequiredColorSpaceType',\n//     'GFIT': 'GIFRowOrderType',\n//     'GFTC': 'GIFTransparentColor',\n//     'GFTB': 'GIFTransparentIndexBlue',\n//     'GFTG': 'GIFTransparentIndexGreen',\n//     'GFTR': 'GIFTransparentIndexRed',\n//     'GFBM': 'GIFUseBestMatch',\n//     'Gmm ': 'Gamma',\n//     'GmtW': 'GamutWarning',\n//     'GnrP': 'GeneralPrefs',\n//     'gblA': 'GlobalAngle',\n//     'gagl': 'GlobalLightingAngle',\n//     'Glos': 'Gloss',\n//     'GlwA': 'GlowAmount',\n//     'GlwT': 'GlowTechnique',\n//     'Grad': 'Gradient',\n//     'Grdf': 'GradientFill',\n//     // 'Grn ': 'Grain',\n//     'Grnt': 'GrainType',\n//     'Grns': 'Graininess',\n//     'Gry ': 'Gray',\n//     'GrBh': 'GrayBehavior',\n//     'GrSt': 'GraySetup',\n//     'Grn ': 'Green',\n//     'GrnB': 'GreenBlackPoint',\n//     'greenFloat': 'GreenFloat',\n//     'GrnG': 'GreenGamma',\n//     'GrnW': 'GreenWhitePoint',\n//     'GrnX': 'GreenX',\n//     'GrnY': 'GreenY',\n//     'GrdC': 'GridColor',\n//     'Grds': 'GridCustomColor',\n//     'GrdM': 'GridMajor',\n//     'Grdn': 'GridMinor',\n//     'GrdS': 'GridStyle',\n//     'Grdt': 'GridUnits',\n//     'Grup': 'Group',\n//     'GrtW': 'GroutWidth',\n//     'GrwS': 'GrowSelection',\n//     'Gdes': 'Guides',\n//     'GdsC': 'GuidesColor',\n//     'Gdss': 'GuidesCustomColor',\n//     'GdPr': 'GuidesPrefs',\n//     'GdsS': 'GuidesStyle',\n//     'GttW': 'GutterWidth',\n//     'HlfF': 'HalftoneFile',\n//     'HlfS': 'HalftoneScreen',\n//     'HlSz': 'HalftoneSize',\n//     'Hlfp': 'HalftoneSpec',\n//     'Hrdn': 'Hardness',\n//     'HCdH': 'HasCmdHPreference',\n//     'Hdr ': 'Header',\n//     'Hdln': 'Headline',\n//     'Hght': 'Height',\n//     'HghA': 'HighlightArea',\n//     'hglC': 'HighlightColor',\n//     'HghL': 'HighlightLevels',\n//     'hglM': 'HighlightMode',\n//     'hglO': 'HighlightOpacity',\n//     'HghS': 'HighlightStrength',\n//     'HstB': 'HistoryBrushSource',\n//     'HstP': 'HistoryPrefs',\n//     'HsSS': 'HistoryStateSource',\n//     'HsSt': 'HistoryStates',\n//     'Hrzn': 'Horizontal',\n//     'HrzS': 'HorizontalScale',\n//     'HstN': 'HostName',\n//     'HstV': 'HostVersion',\n//     'H   ': 'Hue',\n//     'ICCE': 'ICCEngine',\n//     'ICCt': 'ICCSetupName',\n//     'Idnt': 'ID',\n//     'Idle': 'Idle',\n//     'ImgB': 'ImageBalance',\n//     'Impr': 'Import',\n//     'Imps': 'Impressionist',\n//     'In  ': 'In',\n//     'c@#^': 'Inherits',\n//     'InkC': 'InkColors',\n//     'Inks': 'Inks',\n//     'IrGl': 'InnerGlow',\n//     'glwS': 'InnerGlowSource',\n//     'IrSh': 'InnerShadow',\n//     'Inpt': 'Input',\n//     'kIBP': 'InputBlackPoint',\n//     'Inmr': 'InputMapRange',\n//     'Inpr': 'InputRange',\n//     'kIWP': 'InputWhitePoint',\n//     'Intn': 'Intensity',\n//     'Inte': 'Intent',\n//     'IntH': 'InterfaceBevelHighlight',\n//     'Intv': 'InterfaceBevelShadow',\n//     'IntB': 'InterfaceBlack',\n//     'Intd': 'InterfaceBorder',\n//     'Intk': 'InterfaceButtonDarkShadow',\n//     'Intt': 'InterfaceButtonDownFill',\n//     'InBF': 'InterfaceButtonUpFill',\n//     'ICBL': 'InterfaceColorBlue2',\n//     'ICBH': 'InterfaceColorBlue32',\n//     'ICGL': 'InterfaceColorGreen2',\n//     'ICGH': 'InterfaceColorGreen32',\n//     'ICRL': 'InterfaceColorRed2',\n//     'ICRH': 'InterfaceColorRed32',\n//     'IntI': 'InterfaceIconFillActive',\n//     'IntF': 'InterfaceIconFillDimmed',\n//     'Intc': 'InterfaceIconFillSelected',\n//     'Intm': 'InterfaceIconFrameActive',\n//     // 'Intr': 'InterfaceIconFrameDimmed',\n//     'IntS': 'InterfaceIconFrameSelected',\n//     'IntP': 'InterfacePaletteFill',\n//     'IntR': 'InterfaceRed',\n//     'IntT': 'InterfaceToolTipBackground',\n//     'ITTT': 'InterfaceToolTipText',\n//     'ITBg': 'InterfaceTransparencyBackground',\n//     'ITFg': 'InterfaceTransparencyForeground',\n//     'IntW': 'InterfaceWhite',\n//     // 'Intr': 'Interlace',\n//     'IntC': 'InterlaceCreateType',\n//     'IntE': 'InterlaceEliminateType',\n//     // 'Intr': 'Interpolation',\n//     'IntM': 'InterpolationMethod',\n//     'Invr': 'Invert',\n//     'InvM': 'InvertMask',\n//     'InvS': 'InvertSource2',\n//     'InvT': 'InvertTexture',\n//     'IsDr': 'IsDirty',\n//     'ItmI': 'ItemIndex',\n//     'JPEQ': 'JPEGQuality',\n//     'Krng': 'Kerning',\n//     'Kywd': 'Keywords',\n//     'Knd ': 'Kind',\n//     'LTnm': 'LUTAnimation',\n//     'LZWC': 'LZWCompression',\n//     'Lbls': 'Labels',\n//     'Lnds': 'Landscape',\n//     'LstT': 'LastTransform',\n//     'Lyr ': 'Layer',\n//     'Lefx': 'LayerEffects',\n//     'lfxv': 'LayerFXVisible',\n//     'LyrI': 'LayerID',\n//     'LyrN': 'LayerName',\n//     'Lyrs': 'Layers',\n//     'Ldng': 'Leading',\n//     'Left': 'Left',\n//     'lSNs': 'LegacySerialString',\n//     // 'Lngt': 'Length',\n//     'Lns ': 'Lens',\n//     'Lvl ': 'Level',\n//     'Lvls': 'Levels',\n//     'LgDr': 'LightDark',\n//     'LghD': 'LightDirection',\n//     'LghI': 'LightIntensity',\n//     'LghP': 'LightPosition',\n//     'LghS': 'LightSource',\n//     'LghT': 'LightType',\n//     'LghG': 'LightenGrout',\n//     'Lght': 'Lightness',\n//     'Line': 'Line',\n//     'lnkE': 'LinkEnable',\n//     'LnkL': 'LinkedLayerIDs',\n//     'Lald': 'LocalLightingAltitude',\n//     'lagl': 'LocalLightingAngle',\n//     'LclR': 'LocalRange',\n//     'Lctn': 'Location',\n//     'Log ': 'Log',\n//     'kLog': 'Logarithmic',\n//     'LwCs': 'LowerCase',\n//     'Lmnc': 'Luminance',\n//     'Mgnt': 'Magenta',\n//     'MkVs': 'MakeVisible',\n//     'Mfov': 'ManipulationFOV',\n//     'MpBl': 'MapBlack',\n//     'Mpng': 'Mapping',\n//     'MpgS': 'MappingShape',\n//     'Mtrl': 'Material',\n//     'Mtrx': 'Matrix',\n//     'MttC': 'MatteColor',\n//     'Mxm ': 'Maximum',\n//     'MxmS': 'MaximumStates',\n//     'MmrU': 'MemoryUsagePercent',\n//     'Mrge': 'Merge',\n//     'Mrgd': 'Merged',\n//     'Msge': 'Message',\n//     'Mthd': 'Method',\n//     'MztT': 'MezzotintType',\n//     'Mdpn': 'Midpoint',\n//     'MdtL': 'MidtoneLevels',\n//     'Mnm ': 'Minimum',\n//     'MsmC': 'MismatchCMYK',\n//     'MsmG': 'MismatchGray',\n//     'MsmR': 'MismatchRGB',\n//     'Md  ': 'Mode',\n//     'Mnch': 'Monochromatic',\n//     'MvT ': 'MoveTo',\n//     'Nm  ': 'Name',\n//     'Ngtv': 'Negative',\n//     'Nw  ': 'New',\n//     'Nose': 'Noise',\n//     'NnIm': 'NonImageData',\n//     'NnLn': 'NonLinear',\n//     'null': 'Null',\n//     'Nm L': 'NumLights',\n//     'Nmbr': 'Number',\n//     'NCch': 'NumberOfCacheLevels',\n//     'NC64': 'NumberOfCacheLevels64',\n//     'NmbO': 'NumberOfChannels',\n//     'NmbC': 'NumberOfChildren',\n//     'NmbD': 'NumberOfDocuments',\n//     'NmbG': 'NumberOfGenerators',\n//     // 'NmbL': 'NumberOfLayers',\n//     // 'NmbL': 'NumberOfLevels',\n//     'NmbP': 'NumberOfPaths',\n//     'NmbR': 'NumberOfRipples',\n//     'NmbS': 'NumberOfSiblings',\n//     'ObjN': 'ObjectName',\n//     'Ofst': 'Offset',\n//     'Sftt': 'OldSmallFontType',\n//     'On  ': 'On',\n//     'Opct': 'Opacity',\n//     'Optm': 'Optimized',\n//     'Ornt': 'Orientation',\n//     'OrgH': 'OriginalHeader',\n//     'OrgT': 'OriginalTransmissionReference',\n//     'OthC': 'OtherCursors',\n//     'OrGl': 'OuterGlow',\n//     'Otpt': 'Output',\n//     'kOBP': 'OutputBlackPoint',\n//     'kOWP': 'OutputWhitePoint',\n//     'OvrC': 'OverprintColors',\n//     'OvrO': 'OverrideOpen',\n//     'ObrP': 'OverridePrinter',\n//     'Ovrd': 'OverrideSave',\n//     'PNGf': 'PNGFilter',\n//     'PGIT': 'PNGInterlaceType',\n//     'PMpf': 'PageFormat',\n//     'PgNm': 'PageNumber',\n//     'PgPs': 'PagePosition',\n//     'PgSt': 'PageSetup',\n//     'PnCK': 'PaintCursorKind',\n//     'PntT': 'PaintType',\n//     'PntC': 'PaintingCursors',\n//     'Plt ': 'Palette',\n//     'PltF': 'PaletteFile',\n//     'PprB': 'PaperBrightness',\n//     'PrIn': 'ParentIndex',\n//     'PrNm': 'ParentName',\n//     'Path': 'Path',\n//     'PthC': 'PathContents',\n//     'PthN': 'PathName',\n//     'Pttn': 'Pattern',\n//     'Pncl': 'PencilWidth',\n//     'Prsp': 'PerspectiveIndex',\n//     'Phsp': 'Phosphors',\n//     'PckI': 'PickerID',\n//     'Pckr': 'PickerKind',\n//     'PPSz': 'PixelPaintSize',\n//     'Pltf': 'Platform',\n//     'PlgF': 'PluginFolder',\n//     'PlgP': 'PluginPrefs',\n//     'Pts ': 'Points',\n//     'Pstn': 'Position',\n//     'PstS': 'PostScriptColor',\n//     'Pstr': 'Posterization',\n//     'PrdC': 'PredefinedColors',\n//     'PrfB': 'PreferBuiltin',\n//     'Prfr': 'Preferences',\n//     'PrsA': 'PreserveAdditional',\n//     'PrsL': 'PreserveLuminosity',\n//     'PrsT': 'PreserveTransparency',\n//     'Prs ': 'Pressure',\n//     'Prvw': 'Preview',\n//     'PrvK': 'PreviewCMYK',\n//     'PrvF': 'PreviewFullSize',\n//     'PrvI': 'PreviewIcon',\n//     'PrvM': 'PreviewMacThumbnail',\n//     'PrvW': 'PreviewWinThumbnail',\n//     'PrvQ': 'PreviewsQuery',\n//     'PMps': 'PrintSettings',\n//     'PrfS': 'ProfileSetup',\n//     'PrvS': 'ProvinceState',\n//     'Qlty': 'Quality',\n//     'QucM': 'QuickMask',\n//     'RGBS': 'RGBSetup',\n//     'Rds ': 'Radius',\n//     'RndS': 'RandomSeed',\n//     'Rt  ': 'Ratio',\n//     'Rcnf': 'RecentFiles',\n//     'Rd  ': 'Red',\n//     'RdBl': 'RedBlackPoint',\n//     'redFloat': 'RedFloat',\n//     'RdGm': 'RedGamma',\n//     'RdWh': 'RedWhitePoint',\n//     'RdX ': 'RedX',\n//     'RdY ': 'RedY',\n//     'RgsM': 'RegistrationMarks',\n//     'Rltv': 'Relative',\n//     'Rlf ': 'Relief',\n//     'Rfid': 'RenderFidelity',\n//     'Rsmp': 'Resample',\n//     'RWOZ': 'ResizeWindowsOnZoom',\n//     'Rslt': 'Resolution',\n//     'RsrI': 'ResourceID',\n//     'Rspn': 'Response',\n//     'RtnH': 'RetainHeader',\n//     'Rvrs': 'Reverse',\n//     'Rght': 'Right',\n//     'RplM': 'RippleMagnitude',\n//     'RplS': 'RippleSize',\n//     'Rtt ': 'Rotate',\n//     'Rndn': 'Roundness',\n//     'RlrH': 'RulerOriginH',\n//     'RlrV': 'RulerOriginV',\n//     'RlrU': 'RulerUnits',\n//     // 'Strt': 'Saturation',\n//     'SvAn': 'SaveAndClose',\n//     'SvCm': 'SaveComposite',\n//     'PltL': 'SavePaletteLocations',\n//     'SvPt': 'SavePaths',\n//     'SvPy': 'SavePyramids',\n//     'Svng': 'Saving',\n//     'Scl ': 'Scale',\n//     'SclH': 'ScaleHorizontal',\n//     'SclV': 'ScaleVertical',\n//     'Scln': 'Scaling',\n//     'Scns': 'Scans',\n//     'ScrD': 'ScratchDisks',\n//     'ScrF': 'ScreenFile',\n//     'ScrT': 'ScreenType',\n//     'Sprt': 'Separations',\n//     'SrlS': 'SerialString',\n//     // 'ShdI': 'ShadingIntensity',\n//     'ShdN': 'ShadingNoise',\n//     'ShdS': 'ShadingShape',\n//     'sdwC': 'ShadowColor',\n//     // 'ShdI': 'ShadowIntensity',\n//     'ShdL': 'ShadowLevels',\n//     'sdwM': 'ShadowMode',\n//     'sdwO': 'ShadowOpacity',\n//     'Shp ': 'Shape',\n//     'Shrp': 'Sharpness',\n//     'ShrE': 'ShearEd',\n//     'ShrP': 'ShearPoints',\n//     'ShrS': 'ShearSt',\n//     'ShfK': 'ShiftKey',\n//     'ShKT': 'ShiftKeyToolSwitch',\n//     'ShrN': 'ShortNames',\n//     'ShwE': 'ShowEnglishFontNames',\n//     'SwMC': 'ShowMenuColors',\n//     'ShwT': 'ShowToolTips',\n//     'ShTr': 'ShowTransparency',\n//     'Sz  ': 'SizeKey',\n//     'Skew': 'Skew',\n//     'Sfts': 'SmallFontType',\n//     'SmBM': 'SmartBlurMode',\n//     'SmBQ': 'SmartBlurQuality',\n//     'Smoo': 'Smooth',\n//     'Smth': 'Smoothness',\n//     'SnpI': 'SnapshotInitial',\n//     'SfCl': 'SoftClip',\n//     'Sftn': 'Softness',\n//     'SoFi': 'SolidFill',\n//     'Srce': 'Source',\n//     'Src2': 'Source2',\n//     'SrcM': 'SourceMode',\n//     'Spcn': 'Spacing',\n//     'SpcI': 'SpecialInstructions',\n//     'SphM': 'SpherizeMode',\n//     'Spot': 'Spot',\n//     'SprR': 'SprayRadius',\n//     'SqrS': 'SquareSize',\n//     'Srcl': 'SrcBlackMax',\n//     'SrcB': 'SrcBlackMin',\n//     'Srcm': 'SrcWhiteMax',\n//     'SrcW': 'SrcWhiteMin',\n//     // 'Strt': 'Start',\n//     'StrA': 'StartArrowhead',\n//     'Stte': 'State',\n//     'srgh': 'Strength',\n//     'srgR': 'StrengthRatio',\n//     'Strg': 'Strength_PLUGIN',\n//     'StDt': 'StrokeDetail',\n//     'SDir': 'StrokeDirection',\n//     'StrL': 'StrokeLength',\n//     'StrP': 'StrokePressure',\n//     'StrS': 'StrokeSize',\n//     'StrW': 'StrokeWidth',\n//     'Styl': 'Style',\n//     'Stys': 'Styles',\n//     'StlC': 'StylusIsColor',\n//     'StlO': 'StylusIsOpacity',\n//     'StlP': 'StylusIsPressure',\n//     'StlS': 'StylusIsSize',\n//     'SbpL': 'SubPathList',\n//     'SplC': 'SupplementalCategories',\n//     'SstI': 'SystemInfo',\n//     'SstP': 'SystemPalette',\n//     // 'null': 'Target',\n//     'Trgp': 'TargetPath',\n//     'TrgP': 'TargetPathIndex',\n//     // 'Lngt': 'TermLength',\n//     'Txt ': 'Text',\n//     // 'TxtC': 'TextClickPoint',\n//     'TxtD': 'TextData',\n//     'TxtS': 'TextStyle',\n//     'Txtt': 'TextStyleRange',\n//     'Txtr': 'Texture',\n//     // 'TxtC': 'TextureCoverage',\n//     'TxtF': 'TextureFile',\n//     'TxtT': 'TextureType',\n//     'Thsh': 'Threshold',\n//     'TlNm': 'TileNumber',\n//     'TlOf': 'TileOffset',\n//     'TlSz': 'TileSize',\n//     'Ttl ': 'Title',\n//     'T   ': 'To',\n//     'TBl ': 'ToBuiltin',\n//     'ToLk': 'ToLinked',\n//     'TMd ': 'ToMode',\n//     'TglO': 'ToggleOthers',\n//     'Tlrn': 'Tolerance',\n//     'Top ': 'Top',\n//     'TtlL': 'TotalLimit',\n//     'Trck': 'Tracking',\n//     'TrnF': 'TransferFunction',\n//     // 'TrnS': 'TransferSpec',\n//     'Trns': 'Transparency',\n//     // 'TrnG': 'TransparencyGrid',\n//     'TrnC': 'TransparencyGridColors',\n//     // 'TrnG': 'TransparencyGridSize',\n//     'TrnP': 'TransparencyPrefs',\n//     // 'TrnS': 'TransparencyShape',\n//     'TrnI': 'TransparentIndex',\n//     'TrnW': 'TransparentWhites',\n//     'Twst': 'Twist',\n//     'Type': 'Type',\n//     'UC  ': 'UCA',\n//     'URL ': 'URL',\n//     'UndA': 'UndefinedArea',\n//     'Undl': 'Underline',\n//     'UntP': 'UnitsPrefs',\n//     'Untl': 'Untitled',\n//     'UppY': 'UpperY',\n//     'Urgn': 'Urgency',\n//     'AcrS': 'UseAccurateScreens',\n//     'AdPl': 'UseAdditionalPlugins',\n//     'UsCc': 'UseCacheForHistograms',\n//     'UsCr': 'UseCurves',\n//     'UsDf': 'UseDefault',\n//     'uglg': 'UseGlobalAngle',\n//     'UsIC': 'UseICCProfile',\n//     'UsMs': 'UseMask',\n//     'UsrM': 'UserMaskEnabled',\n//     'Usrs': 'UserMaskLinked',\n//     'Usng': 'Using',\n//     'Vl  ': 'Value',\n//     'Vrnc': 'Variance',\n//     'Vct0': 'Vector0',\n//     'Vct1': 'Vector1',\n//     'VctC': 'VectorColor',\n//     'VrsF': 'VersionFix',\n//     'VrsM': 'VersionMajor',\n//     'VrsN': 'VersionMinor',\n//     'Vrtc': 'Vertical',\n//     'VrtS': 'VerticalScale',\n//     'Vdlp': 'VideoAlpha',\n//     'Vsbl': 'Visible',\n//     'WtcS': 'WatchSuspension',\n//     'watr': 'Watermark',\n//     'Wvtp': 'WaveType',\n//     'WLMx': 'WavelengthMax',\n//     'WLMn': 'WavelengthMin',\n//     'WbdP': 'WebdavPrefs',\n//     'Wtdg': 'WetEdges',\n//     'What': 'What',\n//     'WhtC': 'WhiteClip',\n//     'WhtI': 'WhiteIntensity',\n//     'WhHi': 'WhiteIsHigh',\n//     'WhtL': 'WhiteLevel',\n//     'WhtP': 'WhitePoint',\n//     'WhPt': 'WholePath',\n//     'Wdth': 'Width',\n//     'WndM': 'WindMethod',\n//     'With': 'With',\n//     'WrPt': 'WorkPath',\n//     'WrkP': 'WorkPathIndex',\n//     'X   ': 'X',\n//     'Y   ': 'Y',\n//     'Ylw ': 'Yellow',\n//     'ZZTy': 'ZigZagType',\n//     'Alis': '_3DAntiAlias',\n// };", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: https://www.adobe.com/devnet-apps/photoshop/fileformatashtml/\n\nimport { getDataView, getStringFromDataView, getPascalStringFromDataView } from './utils.js';\nimport Types from './types.js';\nimport TagNames from './photoshop-tag-names.js';\nexport default {\n  read\n};\nconst SIGNATURE = '8BIM';\nconst TAG_ID_SIZE = 2;\nconst RESOURCE_LENGTH_SIZE = 4;\nconst SIGNATURE_SIZE = SIGNATURE.length;\nfunction read(bytes, includeUnknown) {\n  const dataView = getDataView(new Uint8Array(bytes).buffer);\n  const tags = {};\n  let offset = 0;\n  while (offset < bytes.length) {\n    const signature = getStringFromDataView(dataView, offset, SIGNATURE_SIZE);\n    offset += SIGNATURE_SIZE;\n    const tagId = Types.getShortAt(dataView, offset);\n    offset += TAG_ID_SIZE;\n    const {\n      tagName,\n      tagNameSize\n    } = getTagName(dataView, offset);\n    offset += tagNameSize;\n    const resourceSize = Types.getLongAt(dataView, offset);\n    offset += RESOURCE_LENGTH_SIZE;\n    if (signature === SIGNATURE) {\n      const valueDataView = getDataView(dataView.buffer, offset, resourceSize);\n      const tag = {\n        id: tagId,\n        value: getStringFromDataView(valueDataView, 0, resourceSize)\n      };\n      if (TagNames[tagId]) {\n        try {\n          tag.description = TagNames[tagId].description(valueDataView);\n        } catch (error) {\n          tag.description = '<no description formatter>';\n        }\n        tags[tagName ? tagName : TagNames[tagId].name] = tag;\n      } else if (includeUnknown) {\n        tags[`undefined-${tagId}`] = tag;\n      }\n    }\n    offset += resourceSize + resourceSize % 2;\n  }\n  return tags;\n}\nfunction getTagName(dataView, offset) {\n  // The name is encoded as a Pascal string (the string is prefixed with one\n  // byte containing the length of the string) and everything is padded with a\n  // null byte to make the size even.\n  const [stringSize, string] = getPascalStringFromDataView(dataView, offset);\n  return {\n    tagName: string,\n    tagNameSize: 1 + stringSize + (stringSize % 2 === 0 ? 1 : 0)\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { getStringFromDataView } from './utils.js';\nexport const iccTags = {\n  'desc': {\n    'name': 'ICC Description'\n  },\n  'cprt': {\n    'name': 'ICC Copyright'\n  },\n  'dmdd': {\n    'name': 'ICC Device Model Description'\n  },\n  'vued': {\n    'name': 'ICC Viewing Conditions Description'\n  },\n  'dmnd': {\n    'name': 'ICC Device Manufacturer for Display'\n  },\n  'tech': {\n    'name': 'Technology'\n  }\n};\nexport const iccProfile = {\n  4: {\n    'name': 'Preferred CMM type',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n    'description': value => value !== null ? toCompany(value) : ''\n  },\n  8: {\n    'name': 'Profile Version',\n    'value': (dataView, offset) => {\n      return dataView.getUint8(offset).toString(10) + '.' + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.' + (dataView.getUint8(offset + 1) % 16).toString(10);\n    }\n  },\n  12: {\n    'name': 'Profile/Device class',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n    'description': value => {\n      switch (value.toLowerCase()) {\n        case 'scnr':\n          return 'Input Device profile';\n        case 'mntr':\n          return 'Display Device profile';\n        case 'prtr':\n          return 'Output Device profile';\n        case 'link':\n          return 'DeviceLink profile';\n        case 'abst':\n          return 'Abstract profile';\n        case 'spac':\n          return 'ColorSpace profile';\n        case 'nmcl':\n          return 'NamedColor profile';\n        case 'cenc':\n          return 'ColorEncodingSpace profile';\n        case 'mid ':\n          return 'MultiplexIdentification profile';\n        case 'mlnk':\n          return 'MultiplexLink profile';\n        case 'mvis':\n          return 'MultiplexVisualization profile';\n        default:\n          return value;\n      }\n    }\n  },\n  16: {\n    'name': 'Color Space',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n  },\n  20: {\n    'name': 'Connection Space',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n  },\n  24: {\n    'name': 'ICC Profile Date',\n    'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n  },\n  36: {\n    'name': 'ICC Signature',\n    'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n  },\n  40: {\n    'name': 'Primary Platform',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n    'description': value => toCompany(value)\n  },\n  48: {\n    'name': 'Device Manufacturer',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n    'description': value => toCompany(value)\n  },\n  52: {\n    'name': 'Device Model Number',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n  },\n  64: {\n    'name': 'Rendering Intent',\n    'value': (dataView, offset) => dataView.getUint32(offset),\n    'description': value => {\n      switch (value) {\n        case 0:\n          return 'Perceptual';\n        case 1:\n          return 'Relative Colorimetric';\n        case 2:\n          return 'Saturation';\n        case 3:\n          return 'Absolute Colorimetric';\n        default:\n          return value;\n      }\n    }\n  },\n  80: {\n    'name': 'Profile Creator',\n    'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n  }\n};\nfunction parseDate(dataView, offset) {\n  const year = dataView.getUint16(offset);\n  const month = dataView.getUint16(offset + 2) - 1;\n  const day = dataView.getUint16(offset + 4);\n  const hours = dataView.getUint16(offset + 6);\n  const minutes = dataView.getUint16(offset + 8);\n  const seconds = dataView.getUint16(offset + 10);\n  return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\nfunction sliceToString(slice) {\n  return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\nfunction toCompany(value) {\n  switch (value.toLowerCase()) {\n    case 'appl':\n      return 'Apple';\n    case 'adbe':\n      return 'Adobe';\n    case 'msft':\n      return 'Microsoft';\n    case 'sunw':\n      return 'Sun Microsystems';\n    case 'sgi':\n      return 'Silicon Graphics';\n    case 'tgnt':\n      return 'Taligent';\n    default:\n      return value;\n  }\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport { iccTags, iccProfile } from './icc-tag-names.js';\nimport { getStringFromDataView, getUnicodeStringFromDataView, decompress, COMPRESSION_METHOD_NONE, COMPRESSION_METHOD_DEFLATE } from './utils.js';\nexport default {\n  read\n};\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continuous array of bytes.\n// Compressed ICC profile data only has support for a single chunk.\nfunction read(dataView, iccData, async) {\n  if (async && iccData[0].compressionMethod !== COMPRESSION_METHOD_NONE) {\n    return readCompressedIcc(dataView, iccData);\n  }\n  return readIcc(dataView, iccData);\n}\nfunction readCompressedIcc(dataView, iccData) {\n  if (!compressionMethodIsSupported(iccData[0].compressionMethod)) {\n    return {};\n  }\n  const compressedDataView = new DataView(dataView.buffer.slice(iccData[0].offset, iccData[0].offset + iccData[0].length));\n  return decompress(compressedDataView, iccData[0].compressionMethod, 'utf-8', 'dataview').then(parseTags).catch(() => ({}));\n}\nfunction compressionMethodIsSupported(compressionMethod) {\n  return compressionMethod === COMPRESSION_METHOD_DEFLATE;\n}\nfunction readIcc(dataView, iccData) {\n  try {\n    const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n    const iccBinaryData = new Uint8Array(totalIccProfileLength);\n    let offset = 0;\n    const buffer = getBuffer(dataView);\n    for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n      const iccDataChunk = iccData.find(x => x.chunkNumber === chunkNumber);\n      if (!iccDataChunk) {\n        throw new Error(`ICC chunk ${chunkNumber} not found`);\n      }\n      const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n      const chunkData = new Uint8Array(data);\n      iccBinaryData.set(chunkData, offset);\n      offset += chunkData.length;\n    }\n    return parseTags(new DataView(iccBinaryData.buffer));\n  } catch (error) {\n    return {};\n  }\n}\nfunction getBuffer(dataView) {\n  if (Array.isArray(dataView)) {\n    return new DataView(Uint8Array.from(dataView).buffer).buffer;\n  }\n  return dataView.buffer;\n}\nfunction iccDoesNotHaveTagCount(buffer) {\n  return buffer.length < ICC_TAG_COUNT_OFFSET + 4;\n}\nfunction hasTagsData(buffer, tagHeaderOffset) {\n  return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\nexport function parseTags(dataView) {\n  const buffer = dataView.buffer;\n  const length = dataView.getUint32();\n  if (dataView.byteLength !== length) {\n    throw new Error('ICC profile length not matching');\n  }\n  if (dataView.length < PROFILE_HEADER_LENGTH) {\n    throw new Error('ICC profile too short');\n  }\n  const tags = {};\n  const iccProfileKeys = Object.keys(iccProfile);\n  for (let i = 0; i < iccProfileKeys.length; i++) {\n    const offset = iccProfileKeys[i];\n    const profileEntry = iccProfile[offset];\n    const value = profileEntry.value(dataView, parseInt(offset, 10));\n    let description = value;\n    if (profileEntry.description) {\n      description = profileEntry.description(value);\n    }\n    tags[profileEntry.name] = {\n      value,\n      description\n    };\n  }\n  const signature = sliceToString(buffer.slice(36, 40));\n  if (signature !== ICC_SIGNATURE) {\n    throw new Error('ICC profile: missing signature');\n  }\n\n  /* ICC data is incomplete but we have header parsed so lets return it */\n  if (iccDoesNotHaveTagCount(buffer)) {\n    return tags;\n  }\n  const tagCount = dataView.getUint32(128);\n  let tagHeaderOffset = 132;\n  for (let i = 0; i < tagCount; i++) {\n    if (hasTagsData(buffer, tagHeaderOffset)) {\n      // Tags are corrupted (offset too far), return what we parsed until now\n      return tags;\n    }\n    const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n    const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n    const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n    if (tagOffset > buffer.length) {\n      // Tag data is invalid, lets return what we managed to parse\n      return tags;\n    }\n    const tagType = getStringFromDataView(dataView, tagOffset, 4);\n    if (tagType === TAG_TYPE_DESC) {\n      const tagValueSize = dataView.getUint32(tagOffset + 8);\n      if (tagValueSize > tagSize) {\n        // Tag data is invalid, lets return what we managed to parse\n        return tags;\n      }\n      const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n      addTag(tags, tagSignature, val);\n    } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n      const numRecords = dataView.getUint32(tagOffset + 8);\n      const recordSize = dataView.getUint32(tagOffset + 12);\n      let offset = tagOffset + 16;\n      const val = [];\n      for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n        const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n        const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n        const textLength = dataView.getUint32(offset + 4);\n        const textOffset = dataView.getUint32(offset + 8);\n        const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n        val.push({\n          languageCode,\n          countryCode,\n          text\n        });\n        offset += recordSize;\n      }\n      if (numRecords === 1) {\n        addTag(tags, tagSignature, val[0].text);\n      } else {\n        const valObj = {};\n        for (let valIndex = 0; valIndex < val.length; valIndex++) {\n          valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n        }\n        addTag(tags, tagSignature, valObj);\n      }\n    } else if (tagType === TAG_TYPE_TEXT) {\n      const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n      addTag(tags, tagSignature, val);\n    } else if (tagType === TAG_TYPE_SIGNATURE) {\n      const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n      addTag(tags, tagSignature, val);\n    }\n    tagHeaderOffset = tagHeaderOffset + 12;\n  }\n  return tags;\n}\nfunction sliceToString(slice) {\n  return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\nfunction addTag(tags, tagSignature, value) {\n  if (iccTags[tagSignature]) {\n    tags[iccTags[tagSignature].name] = {\n      value,\n      description: value\n    };\n  } else {\n    tags[tagSignature] = {\n      value,\n      description: value\n    };\n  }\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nexport default {\n  read\n};\nfunction read(dataView, fileDataOffset) {\n  return {\n    'Image Width': getImageWidth(dataView, fileDataOffset),\n    'Image Height': getImageHeight(dataView, fileDataOffset),\n    'Bit Depth': getBitDepth(dataView, fileDataOffset),\n    'Color Type': getColorType(dataView, fileDataOffset),\n    'Compression': getCompression(dataView, fileDataOffset),\n    'Filter': getFilter(dataView, fileDataOffset),\n    'Interlace': getInterlace(dataView, fileDataOffset)\n  };\n}\nfunction getImageWidth(dataView, fileDataOffset) {\n  const OFFSET = 0;\n  const SIZE = 4;\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = Types.getLongAt(dataView, fileDataOffset);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getImageHeight(dataView, fileDataOffset) {\n  const OFFSET = 4;\n  const SIZE = 4;\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getBitDepth(dataView, fileDataOffset) {\n  const OFFSET = 8;\n  const SIZE = 1;\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: `${value}`\n  };\n}\nfunction getColorType(dataView, fileDataOffset) {\n  const OFFSET = 9;\n  const SIZE = 1;\n  const COLOR_TYPES = {\n    0: 'Grayscale',\n    2: 'RGB',\n    3: 'Palette',\n    4: 'Grayscale with Alpha',\n    6: 'RGB with Alpha'\n  };\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: COLOR_TYPES[value] || 'Unknown'\n  };\n}\nfunction getCompression(dataView, fileDataOffset) {\n  const OFFSET = 10;\n  const SIZE = 1;\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n  };\n}\nfunction getFilter(dataView, fileDataOffset) {\n  const OFFSET = 11;\n  const SIZE = 1;\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: value === 0 ? 'Adaptive' : 'Unknown'\n  };\n}\nfunction getInterlace(dataView, fileDataOffset) {\n  const OFFSET = 12;\n  const SIZE = 1;\n  const INTERLACE_TYPES = {\n    0: 'Noninterlaced',\n    1: 'Adam7 Interlace'\n  };\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value,\n    description: INTERLACE_TYPES[value] || 'Unknown'\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport { getStringValueFromArray, getStringFromDataView, decompress, COMPRESSION_METHOD_NONE } from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport { TYPE_TEXT, TYPE_ITXT, TYPE_ZTXT } from './image-header-png.js';\nimport Tags from './tags.js';\nimport IptcTags from './iptc-tags.js';\nimport Constants from './constants.js';\nexport default {\n  read\n};\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_ITXT_EXTRA_BYTE = 1;\nconst COMPRESSION_FLAG_COMPRESSED = 1;\nconst EXIF_OFFSET = 6;\nfunction read(dataView, pngTextChunks, async, includeUnknown) {\n  const tags = {};\n  const tagsPromises = [];\n  for (let i = 0; i < pngTextChunks.length; i++) {\n    const {\n      offset,\n      length,\n      type\n    } = pngTextChunks[i];\n    const nameAndValue = getNameAndValue(dataView, offset, length, type, async);\n    if (nameAndValue instanceof Promise) {\n      tagsPromises.push(nameAndValue.then(({\n        name,\n        value,\n        description\n      }) => {\n        try {\n          if (Constants.USE_EXIF && isExifGroupTag(name, value)) {\n            return {\n              __exif: Tags.read(decodeRawData(value), EXIF_OFFSET, includeUnknown)\n            };\n          } else if (Constants.USE_IPTC && isIptcGroupTag(name, value)) {\n            return {\n              __iptc: IptcTags.read(decodeRawData(value), 0, includeUnknown)\n            };\n          } else if (name) {\n            return {\n              [name]: {\n                value,\n                description\n              }\n            };\n          }\n        } catch (error) {\n          // Ignore the broken tag.\n        }\n        return {};\n      }));\n    } else {\n      const {\n        name,\n        value,\n        description\n      } = nameAndValue;\n      if (name) {\n        tags[name] = {\n          value,\n          description\n        };\n      }\n    }\n  }\n  return {\n    readTags: tags,\n    readTagsPromise: tagsPromises.length > 0 ? Promise.all(tagsPromises) : undefined\n  };\n}\nfunction getNameAndValue(dataView, offset, length, type, async) {\n  const keywordChars = [];\n  const langChars = [];\n  const translatedKeywordChars = [];\n  let valueChars;\n  let parsingState = STATE_KEYWORD;\n  let compressionMethod = COMPRESSION_METHOD_NONE;\n  for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n    if (parsingState === STATE_COMPRESSION) {\n      compressionMethod = getCompressionMethod({\n        type,\n        dataView,\n        offset: offset + i\n      });\n      if (type === TYPE_ITXT) {\n        i += COMPRESSION_SECTION_ITXT_EXTRA_BYTE;\n      }\n      parsingState = moveToNextState(type, parsingState);\n      continue;\n    } else if (parsingState === STATE_TEXT) {\n      valueChars = new DataView(dataView.buffer.slice(offset + i, offset + length));\n      break;\n    }\n    const byte = dataView.getUint8(offset + i);\n    if (byte === 0) {\n      parsingState = moveToNextState(type, parsingState);\n    } else if (parsingState === STATE_KEYWORD) {\n      keywordChars.push(byte);\n    } else if (parsingState === STATE_LANG) {\n      langChars.push(byte);\n    } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n      translatedKeywordChars.push(byte);\n    }\n  }\n  if (compressionMethod !== COMPRESSION_METHOD_NONE && !async) {\n    return {};\n  }\n  const decompressedValueChars = decompress(valueChars, compressionMethod, getEncodingFromType(type));\n  if (decompressedValueChars instanceof Promise) {\n    return decompressedValueChars.then(_decompressedValueChars => constructTag(_decompressedValueChars, type, langChars, keywordChars)).catch(() => constructTag('<text using unknown compression>'.split(''), type, langChars, keywordChars));\n  }\n  return constructTag(decompressedValueChars, type, langChars, keywordChars);\n}\nfunction getCompressionMethod({\n  type,\n  dataView,\n  offset\n}) {\n  if (type === TYPE_ITXT) {\n    if (dataView.getUint8(offset) === COMPRESSION_FLAG_COMPRESSED) {\n      return dataView.getUint8(offset + 1);\n    }\n  } else if (type === TYPE_ZTXT) {\n    return dataView.getUint8(offset);\n  }\n  return COMPRESSION_METHOD_NONE;\n}\nfunction moveToNextState(type, parsingState) {\n  if (parsingState === STATE_KEYWORD && [TYPE_ITXT, TYPE_ZTXT].includes(type)) {\n    return STATE_COMPRESSION;\n  }\n  if (parsingState === STATE_COMPRESSION) {\n    if (type === TYPE_ITXT) {\n      return STATE_LANG;\n    }\n    return STATE_TEXT;\n  }\n  if (parsingState === STATE_LANG) {\n    return STATE_TRANSLATED_KEYWORD;\n  }\n  return STATE_TEXT;\n}\nfunction getEncodingFromType(type) {\n  if (type === TYPE_TEXT || type === TYPE_ZTXT) {\n    return 'latin1';\n  }\n  return 'utf-8';\n}\nfunction constructTag(valueChars, type, langChars, keywordChars) {\n  const value = getValue(valueChars);\n  return {\n    name: getName(type, langChars, keywordChars),\n    value,\n    description: type === TYPE_ITXT ? getDescription(valueChars) : value\n  };\n}\nfunction getName(type, langChars, keywordChars) {\n  const name = getStringValueFromArray(keywordChars);\n  if (type === TYPE_TEXT || langChars.length === 0) {\n    return name;\n  }\n  const lang = getStringValueFromArray(langChars);\n  return `${name} (${lang})`;\n}\nfunction getValue(valueChars) {\n  if (valueChars instanceof DataView) {\n    return getStringFromDataView(valueChars, 0, valueChars.byteLength);\n  }\n  return valueChars;\n}\nfunction getDescription(valueChars) {\n  return TagDecoder.decode('UTF-8', valueChars);\n}\nfunction isExifGroupTag(name, value) {\n  return name.toLowerCase() === 'raw profile type exif' && value.substring(1, 5) === 'exif';\n}\nfunction isIptcGroupTag(name, value) {\n  return name.toLowerCase() === 'raw profile type iptc' && value.substring(1, 5) === 'iptc';\n}\nfunction decodeRawData(value) {\n  const parts = value.match(/\\n(exif|iptc)\\n\\s*\\d+\\n([\\s\\S]*)$/);\n  return hexToDataView(parts[2].replace(/\\n/g, ''));\n}\nfunction hexToDataView(hex) {\n  const dataView = new DataView(new ArrayBuffer(hex.length / 2));\n  for (let i = 0; i < hex.length; i += 2) {\n    dataView.setUint8(i / 2, parseInt(hex.substring(i, i + 2), 16));\n  }\n  return dataView;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport { PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME } from './image-header-png.js';\nimport { getStringFromDataView } from './utils.js';\nexport default {\n  read\n};\nfunction read(dataView, chunkOffsets) {\n  const tags = {};\n  for (let i = 0; i < chunkOffsets.length; i++) {\n    const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n    const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    if (chunkType === TYPE_PHYS) {\n      tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n      tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n      tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n    } else if (chunkType === TYPE_TIME) {\n      tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n    }\n  }\n  return tags;\n}\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n  const TAG_OFFSET = 0;\n  const TAG_SIZE = 4;\n  if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n    return undefined;\n  }\n  const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n  return {\n    value,\n    description: '' + value\n  };\n}\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n  const TAG_OFFSET = 4;\n  const TAG_SIZE = 4;\n  if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n    return undefined;\n  }\n  const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n  return {\n    value,\n    description: '' + value\n  };\n}\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n  const TAG_OFFSET = 8;\n  const TAG_SIZE = 1;\n  if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n    return undefined;\n  }\n  const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n  return {\n    value,\n    description: value === 1 ? 'meters' : 'Unknown'\n  };\n}\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n  const TIME_TAG_SIZE = 7;\n  if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n    return undefined;\n  }\n  const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n  const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n  const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n  const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n  const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n  const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n  return {\n    value: [year, month, day, hours, minutes, seconds],\n    description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n  };\n}\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n  return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\nfunction pad(number, size) {\n  return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nexport default {\n  read\n};\nconst IMAGE_WIDTH_OFFSET = 4;\nconst IMAGE_HEIGHT_OFFSET = 7;\n\n// https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\nfunction read(dataView, chunkOffset) {\n  const tags = {};\n  const flags = Types.getByteAt(dataView, chunkOffset);\n  tags['Alpha'] = getAlpha(flags);\n  tags['Animation'] = getAnimation(flags);\n  tags['ImageWidth'] = getThreeByteValue(dataView, chunkOffset + IMAGE_WIDTH_OFFSET);\n  tags['ImageHeight'] = getThreeByteValue(dataView, chunkOffset + IMAGE_HEIGHT_OFFSET);\n  return tags;\n}\nfunction getAlpha(flags) {\n  const value = flags & 0x10;\n  return {\n    value: value ? 1 : 0,\n    description: value ? 'Yes' : 'No'\n  };\n}\nfunction getAnimation(flags) {\n  const value = flags & 0x02;\n  return {\n    value: value ? 1 : 0,\n    description: value ? 'Yes' : 'No'\n  };\n}\nfunction getThreeByteValue(dataView, offset) {\n  // Values are stored little-endian.\n  const value = Types.getByteAt(dataView, offset) + 256 * Types.getByteAt(dataView, offset + 1) + 256 * 256 * Types.getByteAt(dataView, offset + 2) + 1; // Value is 1-based, i.e. a value of 7 means 8px.\n\n  return {\n    value,\n    description: value + 'px'\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// https://www.w3.org/Graphics/GIF/spec-gif87.txt\n// https://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\nimport { getStringFromDataView } from './utils.js';\nexport default {\n  read\n};\nfunction read(dataView) {\n  return {\n    'GIF Version': getGifVersion(dataView),\n    'Image Width': getImageWidth(dataView),\n    'Image Height': getImageHeight(dataView),\n    'Global Color Map': getGlobalColorMap(dataView),\n    'Bits Per Pixel': getBitDepth(dataView),\n    'Color Resolution Depth': getColorResolution(dataView)\n  };\n}\nfunction getGifVersion(dataView) {\n  const OFFSET = 3;\n  const SIZE = 3;\n  if (OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = getStringFromDataView(dataView, OFFSET, SIZE);\n  return {\n    value,\n    description: value\n  };\n}\nfunction getImageWidth(dataView) {\n  const OFFSET = 6;\n  const SIZE = 2;\n  if (OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = dataView.getUint16(OFFSET, true);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getImageHeight(dataView) {\n  const OFFSET = 8;\n  const SIZE = 2;\n  if (OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const value = dataView.getUint16(OFFSET, true);\n  return {\n    value,\n    description: `${value}px`\n  };\n}\nfunction getGlobalColorMap(dataView) {\n  const OFFSET = 10;\n  const SIZE = 1;\n  if (OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const byteValue = dataView.getUint8(OFFSET);\n  const value = (byteValue & 0b10000000) >>> 7;\n  return {\n    value,\n    description: value === 1 ? 'Yes' : 'No'\n  };\n}\nfunction getColorResolution(dataView) {\n  const OFFSET = 10;\n  const SIZE = 1;\n  if (OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const byteValue = dataView.getUint8(OFFSET);\n  const value = ((byteValue & 0b01110000) >>> 4) + 1; // Zero-based.\n  return {\n    value,\n    description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n  };\n}\nfunction getBitDepth(dataView) {\n  const OFFSET = 10;\n  const SIZE = 1;\n  if (OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n  const byteValue = dataView.getUint8(OFFSET);\n  const value = (byteValue & 0b00000111) + 1; // Zero-based.\n  return {\n    value,\n    description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n  };\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { deferInit, getBase64Image } from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\nexport default {\n  get\n};\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n  if (hasJpegThumbnail(thumbnailTags)) {\n    thumbnailTags.type = 'image/jpeg';\n    const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n    thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n    deferInit(thumbnailTags, 'base64', function () {\n      return getBase64Image(this.image);\n    });\n  }\n\n  // There is a small possibility of thumbnails in TIFF format but they are\n  // not stored as a self-contained image file and would be much more\n  // difficult to extract.\n  // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n  return thumbnailTags;\n}\nfunction hasJpegThumbnail(tags) {\n  return tags && (tags.Compression === undefined || COMPRESSION_JPEG.includes(tags.Compression.value)) && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}", "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n  this.name = 'MetadataMissingError';\n  this.message = message || 'No Exif data';\n  this.stack = new Error().stack;\n}\nMetadataMissingError.prototype = new Error();\nexport default {\n  MetadataMissingError\n};", "/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport { objectAssign, dataUriToBuffer } from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport { getStringValueFromArray } from './utils.js';\nimport { getCalculatedGpsValue } from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport MpfTags from './mpf-tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport PhotoshopTags from './photoshop-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Vp8xTags from './vp8x-tags.js';\nimport GifFileTags from './gif-file-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\nexport default {\n  load,\n  loadView,\n  errors: exifErrors\n};\nexport const errors = exifErrors;\nexport function load(data, options = {}) {\n  if (isFilePathOrURL(data)) {\n    options.async = true;\n    return loadFile(data, options).then(fileContents => loadFromData(fileContents, options));\n  }\n  if (isBrowserFileObject(data)) {\n    options.async = true;\n    return loadFileObject(data).then(fileContents => loadFromData(fileContents, options));\n  }\n  return loadFromData(data, options);\n}\nfunction isFilePathOrURL(data) {\n  return typeof data === 'string';\n}\nfunction loadFile(filename, options) {\n  if (/^\\w+:\\/\\//.test(filename)) {\n    if (typeof fetch !== 'undefined') {\n      return fetchRemoteFile(filename, options);\n    }\n    return nodeGetRemoteFile(filename, options);\n  }\n  if (isDataUri(filename)) {\n    return Promise.resolve(dataUriToBuffer(filename));\n  }\n  return loadLocalFile(filename, options);\n}\nfunction fetchRemoteFile(url, {\n  length\n} = {}) {\n  const options = {\n    method: 'GET'\n  };\n  if (Number.isInteger(length) && length >= 0) {\n    options.headers = {\n      range: `bytes=0-${length - 1}`\n    };\n  }\n  return fetch(url, options).then(response => response.arrayBuffer());\n}\nfunction nodeGetRemoteFile(url, {\n  length\n} = {}) {\n  return new Promise((resolve, reject) => {\n    const options = {};\n    if (Number.isInteger(length) && length >= 0) {\n      options.headers = {\n        range: `bytes=0-${length - 1}`\n      };\n    }\n    const get = requireNodeGet(url);\n    get(url, options, response => {\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\n        const data = [];\n        response.on('data', chunk => data.push(Buffer.from(chunk)));\n        response.on('error', error => reject(error));\n        response.on('end', () => resolve(Buffer.concat(data)));\n      } else {\n        reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n        response.resume();\n      }\n    }).on('error', error => reject(error));\n  });\n}\nfunction requireNodeGet(url) {\n  if (/^https:\\/\\//.test(url)) {\n    return __non_webpack_require__('https').get;\n  }\n  return __non_webpack_require__('http').get;\n}\nfunction isDataUri(filename) {\n  return /^data:[^;,]*(;base64)?,/.test(filename);\n}\nfunction loadLocalFile(filename, {\n  length\n} = {}) {\n  return new Promise((resolve, reject) => {\n    const fs = requireNodeFs();\n    fs.open(filename, (error, fd) => {\n      if (error) {\n        reject(error);\n      } else {\n        fs.stat(filename, (error, stat) => {\n          if (error) {\n            reject(error);\n          } else {\n            const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n            const buffer = Buffer.alloc(size);\n            const options = {\n              buffer,\n              length: size\n            };\n            fs.read(fd, options, error => {\n              if (error) {\n                reject(error);\n              } else {\n                fs.close(fd, error => {\n                  if (error) {\n                    console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                  }\n                  resolve(buffer);\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n  });\n}\nfunction requireNodeFs() {\n  try {\n    return __non_webpack_require__('fs');\n  } catch (error) {\n    return undefined;\n  }\n}\nfunction isBrowserFileObject(data) {\n  return typeof window !== 'undefined' && typeof File !== 'undefined' && data instanceof File;\n}\nfunction loadFileObject(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = readerEvent => resolve(readerEvent.target.result);\n    reader.onerror = () => reject(reader.error);\n    reader.readAsArrayBuffer(file);\n  });\n}\nfunction loadFromData(data, options) {\n  if (isNodeBuffer(data)) {\n    // File data read in Node can share the underlying buffer with other\n    // data. Therefore it's safest to get a new one to avoid weird bugs.\n    data = new Uint8Array(data).buffer;\n  }\n  return loadView(getDataView(data), options);\n}\nfunction isNodeBuffer(data) {\n  try {\n    return Buffer.isBuffer(data);\n  } catch (error) {\n    return false;\n  }\n}\nfunction getDataView(data) {\n  try {\n    return new DataView(data);\n  } catch (error) {\n    return new DataViewWrapper(data);\n  }\n}\nexport function loadView(dataView, {\n  expanded = false,\n  async = false,\n  includeUnknown = false\n} = {\n  expanded: false,\n  async: false,\n  includeUnknown: false\n}) {\n  let foundMetaData = false;\n  let tags = {};\n  const tagsPromises = [];\n  const {\n    fileType,\n    fileDataOffset,\n    jfifDataOffset,\n    tiffHeaderOffset,\n    iptcDataOffset,\n    xmpChunks,\n    iccChunks,\n    mpfDataOffset,\n    pngHeaderOffset,\n    pngTextChunks,\n    pngChunkOffsets,\n    vp8xChunkOffset,\n    gifHeaderOffset\n  } = ImageHeader.parseAppMarkers(dataView, async);\n  if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n    foundMetaData = true;\n    const readTags = FileTags.read(dataView, fileDataOffset);\n    if (expanded) {\n      tags.file = readTags;\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n    foundMetaData = true;\n    const readTags = JfifTags.read(dataView, jfifDataOffset);\n    if (expanded) {\n      tags.jfif = readTags;\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n    foundMetaData = true;\n    const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n    if (readTags.Thumbnail) {\n      tags.Thumbnail = readTags.Thumbnail;\n      delete readTags.Thumbnail;\n    }\n    if (expanded) {\n      tags.exif = readTags;\n      addGpsGroup(tags);\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n    if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n      const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n      if (expanded) {\n        tags.iptc = readIptcTags;\n      } else {\n        tags = objectAssign({}, tags, readIptcTags);\n      }\n    }\n    if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n      const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n      if (expanded) {\n        tags.xmp = readXmpTags;\n      } else {\n        delete readXmpTags._raw;\n        tags = objectAssign({}, tags, readXmpTags);\n      }\n    }\n    if (Constants.USE_PHOTOSHOP && readTags['ImageSourceData']) {\n      const readPhotoshopTags = PhotoshopTags.read(readTags['PhotoshopSettings'].value, includeUnknown);\n      if (expanded) {\n        tags.photoshop = readPhotoshopTags;\n      } else {\n        tags = objectAssign({}, tags, readPhotoshopTags);\n      }\n    }\n    if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n      const readIccTags = IccTags.read(readTags['ICC_Profile'].value, [{\n        offset: 0,\n        length: readTags['ICC_Profile'].value.length,\n        chunkNumber: 1,\n        chunksTotal: 1\n      }]);\n      if (expanded) {\n        tags.icc = readIccTags;\n      } else {\n        tags = objectAssign({}, tags, readIccTags);\n      }\n    }\n  }\n  if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n    foundMetaData = true;\n    const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n    if (expanded) {\n      tags.iptc = readTags;\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n    foundMetaData = true;\n    const readTags = XmpTags.read(dataView, xmpChunks);\n    if (expanded) {\n      tags.xmp = readTags;\n    } else {\n      delete readTags._raw;\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n    foundMetaData = true;\n    const readTags = IccTags.read(dataView, iccChunks, async);\n    if (readTags instanceof Promise) {\n      tagsPromises.push(readTags.then(addIccTags));\n    } else {\n      addIccTags(readTags);\n    }\n  }\n  if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n    foundMetaData = true;\n    const readMpfTags = MpfTags.read(dataView, mpfDataOffset, includeUnknown);\n    if (expanded) {\n      tags.mpf = readMpfTags;\n    } else {\n      tags = objectAssign({}, tags, readMpfTags);\n    }\n  }\n  if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n    foundMetaData = true;\n    const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n    if (expanded) {\n      tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n      tags.pngFile = readTags;\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n    foundMetaData = true;\n    const {\n      readTags,\n      readTagsPromise\n    } = PngTextTags.read(dataView, pngTextChunks, async, includeUnknown);\n    addPngTextTags(readTags);\n    if (readTagsPromise) {\n      tagsPromises.push(readTagsPromise.then(tagList => tagList.forEach(addPngTextTags)));\n    }\n  }\n  if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n    foundMetaData = true;\n    const readTags = PngTags.read(dataView, pngChunkOffsets);\n    if (expanded) {\n      tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  if (Constants.USE_WEBP && hasVp8xData(vp8xChunkOffset)) {\n    foundMetaData = true;\n    const readTags = Vp8xTags.read(dataView, vp8xChunkOffset);\n    if (expanded) {\n      tags.riff = !tags.riff ? readTags : objectAssign({}, tags.riff, readTags);\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  if (Constants.USE_GIF && hasGifFileData(gifHeaderOffset)) {\n    foundMetaData = true;\n    const readTags = GifFileTags.read(dataView, gifHeaderOffset);\n    if (expanded) {\n      tags.gif = !tags.gif ? readTags : objectAssign({}, tags.gif, readTags);\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_EXIF && Constants.USE_THUMBNAIL && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n  if (thumbnail) {\n    foundMetaData = true;\n    tags.Thumbnail = thumbnail;\n  } else {\n    delete tags.Thumbnail;\n  }\n  if (fileType) {\n    if (expanded) {\n      if (!tags.file) {\n        tags.file = {};\n      }\n      tags.file.FileType = fileType;\n    } else {\n      tags.FileType = fileType;\n    }\n    foundMetaData = true;\n  }\n  if (!foundMetaData) {\n    throw new exifErrors.MetadataMissingError();\n  }\n  if (async) {\n    return Promise.all(tagsPromises).then(() => tags);\n  }\n  return tags;\n  function addIccTags(readTags) {\n    if (expanded) {\n      tags.icc = readTags;\n    } else {\n      tags = objectAssign({}, tags, readTags);\n    }\n  }\n  function addPngTextTags(readTags) {\n    if (expanded) {\n      for (const group of ['exif', 'iptc']) {\n        const groupKey = `__${group}`;\n        if (readTags[groupKey]) {\n          tags[group] = !tags[group] ? readTags[groupKey] : objectAssign({}, tags.exif, readTags[groupKey]);\n          delete readTags[groupKey];\n        }\n      }\n      tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n      tags.pngText = !tags.pngText ? readTags : objectAssign({}, tags.png, readTags);\n    } else {\n      tags = objectAssign({}, tags, readTags.__exif ? readTags.__exif : {}, readTags.__iptc ? readTags.__iptc : {}, readTags);\n      delete tags.__exif;\n      delete tags.__iptc;\n    }\n  }\n}\nfunction hasFileData(fileDataOffset) {\n  return fileDataOffset !== undefined;\n}\nfunction hasJfifData(jfifDataOffset) {\n  return jfifDataOffset !== undefined;\n}\nfunction hasExifData(tiffHeaderOffset) {\n  return tiffHeaderOffset !== undefined;\n}\nfunction addGpsGroup(tags) {\n  if (tags.exif) {\n    if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n      try {\n        tags.gps = tags.gps || {};\n        tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n        if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n          tags.gps.Latitude = -tags.gps.Latitude;\n        }\n      } catch (error) {\n        // Ignore.\n      }\n    }\n    if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n      try {\n        tags.gps = tags.gps || {};\n        tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n        if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n          tags.gps.Longitude = -tags.gps.Longitude;\n        }\n      } catch (error) {\n        // Ignore.\n      }\n    }\n    if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n      try {\n        tags.gps = tags.gps || {};\n        tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n        if (tags.exif.GPSAltitudeRef.value === 1) {\n          tags.gps.Altitude = -tags.gps.Altitude;\n        }\n      } catch (error) {\n        // Ignore.\n      }\n    }\n  }\n}\nfunction hasIptcData(iptcDataOffset) {\n  return iptcDataOffset !== undefined;\n}\nfunction hasXmpData(xmpChunks) {\n  return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\nfunction hasIccData(iccDataOffsets) {\n  return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\nfunction hasMpfData(mpfDataOffset) {\n  return mpfDataOffset !== undefined;\n}\nfunction hasPngFileData(pngFileDataOffset) {\n  return pngFileDataOffset !== undefined;\n}\nfunction hasPngTextData(pngTextChunks) {\n  return pngTextChunks !== undefined;\n}\nfunction hasPngData(pngChunkOffsets) {\n  return pngChunkOffsets !== undefined;\n}\nfunction hasVp8xData(vp8xChunkOffset) {\n  return vp8xChunkOffset !== undefined;\n}\nfunction hasGifFileData(gifHeaderOffset) {\n  return gifHeaderOffset !== undefined;\n}"],
  "mappings": "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",
  "names": ["DataView", "DataView", "findOffsets", "findOffsets", "findOffsets", "read", "value", "read", "read", "getLength", "decodeAsciiValue", "TAG_HEADER_SIZE", "read", "readTag", "getTagValue", "get", "read", "fraction", "read", "getTagName", "read", "parseTags", "sliceToString", "read", "getImageWidth", "getImageHeight", "read", "getDescription", "read", "read", "read", "getImageWidth", "getImageHeight", "getBitDepth", "get", "get", "error", "getDataView", "DataView", "readTags"]
}
